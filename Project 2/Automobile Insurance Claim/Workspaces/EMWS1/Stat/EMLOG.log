*------------------------------------------------------------*
User:                Gaurav
Date:                February 25, 2017
Time:                14:08:45
Site:                70125477
Platform:            X64_8HOME
Maintenance Release: 9.04.01M3P062415
EM Version:          14.1
* 
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "February 25, 2017" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "14:08:42" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Training Log
Date:                February 25, 2017
Time:                14:08:42
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O1SH3LMY "C:\Users\Gaurav\Desktop\second sem\Data Mining\Project 2\Automobile Insurance Claim\Workspaces\EMWS1\Stat\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O1SH3LMY new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG "C:\Users\Gaurav\Desktop\second sem\Data Mining\Project 2\Automobile Insurance Claim\Workspaces\EMWS1\Stat\EMLOG.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "February 25, 2017" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "14:08:42" );
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                Gaurav";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70125477";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_8HOME";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.04.01M3P062415";
MPRINT(EM_DIAGRAM):   put "EM Version:          14.1";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\Users\Gaurav\Desktop\second sem\Data Mining\Project 2\Automobile Insurance Claim\Workspaces\EMWS1\Stat\EMTRAIN.log" encoding="UTF-8" NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _LOGIN "C:\Users\Gaurav\Desktop\second sem\Data Mining\Project 2\Automobile Insurance Claim\Workspaces\EMWS1\Stat\EMSCORE.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\Users\Gaurav\Desktop\second sem\Data Mining\Project 2\Automobile Insurance Claim\Workspaces\EMWS1\Stat\EMREPORT.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT "C:\Users\Gaurav\Desktop\second sem\Data Mining\Project 2\Automobile Insurance Claim\Workspaces\EMWS1\Stat\EMOUTPUT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "February 25, 2017" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "14:08:42" );
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                Gaurav";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\Gaurav\Desktop\second sem\Data Mining\Project 2\Automobile Insurance Claim\Workspaces\EMWS1\Stat\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\Gaurav\Desktop\second sem\Data Mining\Project 2\Automobile Insurance Claim\Workspaces\EMWS1\Stat\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\Gaurav\Desktop\second sem\Data Mining\Project 2\Automobile Insurance Claim\Workspaces\EMWS1\Stat\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\Users\Gaurav\Desktop\second sem\Data Mining\Project 2\Automobile Insurance Claim\Workspaces\EMWS1\Stat\EMRUNSTATUS.xml' encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\Users\Gaurav\Desktop\second sem\Data Mining\Project 2\Automobile Insurance Claim\Workspaces\EMWS1\Stat\EMRUNSTATUS.xml' encoding="UTF-8" NOBOM;
17157      proc freq data=EMWS1.Stat_VariableSet noprint;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS1.Stat_VariableSet noprint;
17158      table ROLE*LEVEL/out=WORK.StatMETA;
MPRINT(EM_DIAGRAM):   table ROLE*LEVEL/out=WORK.StatMETA;
17159      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 24 observations read from the data set EMWS1.STAT_VARIABLESET.
NOTE: The data set WORK.STATMETA has 3 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.05 seconds
      cpu time            0.01 seconds
 
 
17160      proc print data=WORK.StatMETA label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.StatMETA label noobs;
17161      var ROLE LEVEL COUNT;
MPRINT(EM_DIAGRAM):   var ROLE LEVEL COUNT;
17162      label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL = "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label ROLE = "Role" LEVEL = "Measurement Level" COUNT = "Frequency Count";
17163      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
17164      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Variable Summary";
MPRINT(EM_DIAGRAM):   run;
17165      run;
 
NOTE: There were 3 observations read from the data set WORK.STATMETA.
NOTE: The PROCEDURE PRINT printed page 1.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
17166      title10;
MPRINT(EM_DIAGRAM):   title10;
17167      data WORK.M14D2E38;
MPRINT(EM_DIAGRAM):    data WORK.M14D2E38;
17168      set WORK.M14D2E38;
MPRINT(EM_DIAGRAM):   set WORK.M14D2E38;
17169      where((role in('TARGET' 'FREQ' 'INPUT') and use in('D','Y')) or (role = 'REJECTED' and use = 'Y'));
MPRINT(EM_DIAGRAM):   where((role in('TARGET' 'FREQ' 'INPUT') and use in('D','Y')) or (role = 'REJECTED' and use = 'Y'));
17170      if ROLE = 'REJECTED' then role = 'INPUT';
MPRINT(EM_DIAGRAM):   if ROLE = 'REJECTED' then role = 'INPUT';
17171      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 23 observations read from the data set WORK.M14D2E38.
      WHERE (role in ('FREQ', 'INPUT', 'TARGET') and use in ('D', 'Y')) or ((role='REJECTED') and (use='Y'));
NOTE: The data set WORK.M14D2E38 has 23 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
17172      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
17173      * Stat: Determining Analysis Variables;
MPRINT(EM_DIAGRAM):   * Stat: Determining Analysis Variables;
17174      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
17175      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
17176      * Stat: DMDBClass Macro ;
MPRINT(EM_DIAGRAM):   * Stat: DMDBClass Macro ;
17177      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
17178      %macro DMDBClass;
17179          AREA(ASC) CAR_USE(ASC) EDU_LEVEL(ASC) GENDER(ASC) JOB(ASC) REVOKED(ASC)
17180         STATE_CODE(ASC) STATUS(ASC) VEHICLE_TYPE(ASC)
17181      %mend DMDBClass;
17182      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
17183      * Stat: DMDBVar Macro ;
MPRINT(EM_DIAGRAM):   * Stat: DMDBVar Macro ;
17184      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
17185      %macro DMDBVar;
17186          AGE CHILDREN CHILD_DRIV CLAIM_AMOUNT CLAIM_IND CLM_FREQ DISTANCE HOUSE_VAL
17187         INCOME MVR_PTS VEHICLE_AGE VEHICLE_VAL YOJ _dataobs_
17188      %mend DMDBVar;
17189      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
17190      * Stat: Create DMDB;
MPRINT(EM_DIAGRAM):   * Stat: Create DMDB;
17191      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
17192      proc dmdb batch data=EMWS1.Ids_DATA(obs=100000)
17193      dmdbcat=WORK.Stat_DMDB
17194      classout=WORK.StatDMDBClass
17195      varout=WORK.StatDMDBVar
17196      maxlevel = 513
17197      ;
MPRINT(EM_DIAGRAM):   proc dmdb batch data=EMWS1.Ids_DATA(obs=100000) dmdbcat=WORK.Stat_DMDB classout=WORK.StatDMDBClass varout=WORK.StatDMDBVar maxlevel = 513 ;
MPRINT(EM_DIAGRAM):   class
17198      class %DMDBClass;
MPRINT(DMDBCLASS):   AREA(ASC) CAR_USE(ASC) EDU_LEVEL(ASC) GENDER(ASC) JOB(ASC) REVOKED(ASC) STATE_CODE(ASC) STATUS(ASC) VEHICLE_TYPE(ASC)
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   var
17199      var %DMDBVar;
MPRINT(DMDBVAR):   AGE CHILDREN CHILD_DRIV CLAIM_AMOUNT CLAIM_IND CLM_FREQ DISTANCE HOUSE_VAL INCOME MVR_PTS VEHICLE_AGE VEHICLE_VAL YOJ _dataobs_
MPRINT(EM_DIAGRAM):  ;
17200      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Records processed = 8240   Memory used = 511K.
NOTE: View EMWS1.IDS_DATA.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
NOTE: There were 8240 observations read from the data set AIC.CLAIMRAWDATA.
NOTE: There were 8240 observations read from the data set EMWS1.IDS_DATA.
NOTE: The data set WORK.STATDMDBCLASS has 46 observations and 9 variables.
NOTE: The data set WORK.STATDMDBVAR has 14 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.08 seconds
      cpu time            0.06 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *--- end code ---*;
17201      quit;
17202      *--- end code ---*;
 
17203      data WORK.StatDMDBVar;
MPRINT(EM_DIAGRAM):    data WORK.StatDMDBVar;
17204      set WORK.StatDMDBVar(keep=Name Mean Std);
MPRINT(EM_DIAGRAM):   set WORK.StatDMDBVar(keep=Name Mean Std);
17205      CV = Std/Mean;
MPRINT(EM_DIAGRAM):   CV = Std/Mean;
17206      Keep NAME CV;
MPRINT(EM_DIAGRAM):   Keep NAME CV;
17207      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 14 observations read from the data set WORK.STATDMDBVAR.
NOTE: The data set WORK.STATDMDBVAR has 14 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
17208      proc append base=EMWS1.Stat_WORTH data=WORK.StatDMDBVar force;
MPRINT(EM_DIAGRAM):   proc append base=EMWS1.Stat_WORTH data=WORK.StatDMDBVar force;
17209      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK.STATDMDBVAR to EMWS1.STAT_WORTH.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 14 observations read from the data set WORK.STATDMDBVAR.
NOTE: The data set EMWS1.STAT_WORTH has 14 observations and 2 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
17210      proc sort data=WORK.StatDMDBClass;
MPRINT(EM_DIAGRAM):    proc sort data=WORK.StatDMDBClass;
17211      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
17212      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 46 observations read from the data set WORK.STATDMDBCLASS.
NOTE: The data set WORK.STATDMDBCLASS has 46 observations and 9 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
17213      proc stdize data=WORK.StatDMDBClass out=_null_ outstat=WORK.StatDMDBClass(RENAME=(FREQUENCY=STAT));
MPRINT(EM_DIAGRAM):   proc stdize data=WORK.StatDMDBClass out=_null_ outstat=WORK.StatDMDBClass(RENAME=(FREQUENCY=STAT));
17214      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
17215      var FREQUENCY;
MPRINT(EM_DIAGRAM):   var FREQUENCY;
17216      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 46 observations read from the data set WORK.STATDMDBCLASS.
NOTE: The data set WORK.STATDMDBCLASS has 72 observations and 3 variables.
NOTE: PROCEDURE STDIZE used (Total process time):
      real time           0.04 seconds
      cpu time            0.00 seconds
 
 
17217      data WORK.StatDMDBClass;
MPRINT(EM_DIAGRAM):   data WORK.StatDMDBClass;
17218      retain mean;
MPRINT(EM_DIAGRAM):   retain mean;
17219      set WORK.StatDMDBClass;
MPRINT(EM_DIAGRAM):   set WORK.StatDMDBClass;
17220      where _TYPE_ in('LOCATION','SCALE');
MPRINT(EM_DIAGRAM):   where _TYPE_ in('LOCATION','SCALE');
17221      if _TYPE_='LOCATION' then mean=STAT;
MPRINT(EM_DIAGRAM):   if _TYPE_='LOCATION' then mean=STAT;
17222      else do;
MPRINT(EM_DIAGRAM):   else do;
17223      if MEAN ne 0 then CV=STAT/abs(MEAN);
MPRINT(EM_DIAGRAM):   if MEAN ne 0 then CV=STAT/abs(MEAN);
17224      else CV=STAT;
MPRINT(EM_DIAGRAM):   else CV=STAT;
17225      output;
MPRINT(EM_DIAGRAM):   output;
17226      end;
MPRINT(EM_DIAGRAM):   end;
17227      keep NAME CV;
MPRINT(EM_DIAGRAM):   keep NAME CV;
17228      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 18 observations read from the data set WORK.STATDMDBCLASS.
      WHERE _TYPE_ in ('LOCATION', 'SCALE');
NOTE: The data set WORK.STATDMDBCLASS has 9 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
17229      proc append base=EMWS1.Stat_WORTH data=WORK.StatDMDBClass force;
MPRINT(EM_DIAGRAM):   proc append base=EMWS1.Stat_WORTH data=WORK.StatDMDBClass force;
17230      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK.STATDMDBCLASS to EMWS1.STAT_WORTH.
NOTE: There were 9 observations read from the data set WORK.STATDMDBCLASS.
NOTE: 9 observations added.
NOTE: The data set EMWS1.STAT_WORTH has 23 observations and 2 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
17231      proc sort data=EMWS1.Stat_WORTH;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.Stat_WORTH;
17232      by descending CV;
MPRINT(EM_DIAGRAM):   by descending CV;
17233      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 23 observations read from the data set EMWS1.STAT_WORTH.
NOTE: The data set EMWS1.STAT_WORTH has 23 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
17234      data EMWS1.Stat_WORTH;
MPRINT(EM_DIAGRAM):   data EMWS1.Stat_WORTH;
17235      format STATVAR 6.0;
MPRINT(EM_DIAGRAM):   format STATVAR 6.0;
17236      set EMWS1.Stat_WORTH;
MPRINT(EM_DIAGRAM):   set EMWS1.Stat_WORTH;
17237      if _N_<= 1000 then STATVAR=1;
MPRINT(EM_DIAGRAM):   if _N_<= 1000 then STATVAR=1;
17238      else STATVAR=0;
MPRINT(EM_DIAGRAM):   else STATVAR=0;
17239      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 23 observations read from the data set EMWS1.STAT_WORTH.
NOTE: The data set EMWS1.STAT_WORTH has 23 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
17240      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
17241      * Stat: Counting Levels;
MPRINT(EM_DIAGRAM):   * Stat: Counting Levels;
17242      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
17243      proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
17244      create view WORK.Stat_distinct as select distinct ID from EMWS1.Ids_DATA(obs=100000);
MPRINT(EM_DIAGRAM):   create view WORK.Stat_distinct as select distinct ID from EMWS1.Ids_DATA(obs=100000);
NOTE: SQL view WORK.STAT_DISTINCT has been defined.
17245      quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
17246      proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
17247      reset noprint;
MPRINT(EM_DIAGRAM):   reset noprint;
17248      select count(*) into :_tmpcount from WORK.Stat_distinct;
MPRINT(EM_DIAGRAM):   select count(*) into :_tmpcount from WORK.Stat_distinct;
NOTE: View EMWS1.IDS_DATA.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
NOTE: There were 8240 observations read from the data set AIC.CLAIMRAWDATA.
17249      quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
 
 
17250      proc sort data=WORK.Stat_count NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data=WORK.Stat_count NOTHREADS;
17251      by NAME ROLE DATA;
MPRINT(EM_DIAGRAM):   by NAME ROLE DATA;
17252      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.STAT_COUNT.
NOTE: The data set WORK.STAT_COUNT has 1 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
17253      proc print data=WORK.Stat_count(obs=500) label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.Stat_count(obs=500) label noobs;
17254      label NAME = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel,    NOQUOTE))" COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel,       NOQUOTE))" ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel,       NOQUOTE))";
MPRINT(EM_DIAGRAM):   label NAME = "Variable" COUNT = "Frequency Count" ROLE = "Role";
17255      var NAME ROLE COUNT;
MPRINT(EM_DIAGRAM):   var NAME ROLE COUNT;
17256      title9 "%sysfunc(sasmsg(sashelp.dmine, rpt_varLevels_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title9 "Variable Levels Summary";
17257      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_maxObsPrinted_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "(maximum 500 observations printed)";
MPRINT(EM_DIAGRAM):   run;
17258      run;
 
NOTE: There were 1 observations read from the data set WORK.STAT_COUNT.
NOTE: The PROCEDURE PRINT printed page 2.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
17259      title9;
MPRINT(EM_DIAGRAM):   title9;
17260      title10;
MPRINT(EM_DIAGRAM):   title10;
17261      proc sort data=EMWS1.Stat_WORTH nodupkey out=WORK.Stat_SELVAR(keep=Name StatVar);
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.Stat_WORTH nodupkey out=WORK.Stat_SELVAR(keep=Name StatVar);
17262      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
17263      where statvar=1;
MPRINT(EM_DIAGRAM):   where statvar=1;
17264      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 23 observations read from the data set EMWS1.STAT_WORTH.
      WHERE statvar=1;
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK.STAT_SELVAR has 23 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
17265      proc sort data=WORK.M1U9L5_V;
MPRINT(EM_DIAGRAM):    proc sort data=WORK.M1U9L5_V;
17266      by name;
MPRINT(EM_DIAGRAM):   by name;
17267      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 24 observations read from the data set WORK.M1U9L5_V.
NOTE: The data set WORK.M1U9L5_V has 24 observations and 21 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
17268      data WORK.Stat_analysisMeta;
MPRINT(EM_DIAGRAM):   data WORK.Stat_analysisMeta;
17269      merge WORK.M1U9L5_V WORK.Stat_SELVAR(in=_a);
MPRINT(EM_DIAGRAM):   merge WORK.M1U9L5_V WORK.Stat_SELVAR(in=_a);
17270      by name;
MPRINT(EM_DIAGRAM):   by name;
17271      if _a then STATVAR = 1;
MPRINT(EM_DIAGRAM):   if _a then STATVAR = 1;
17272      else if ROLE in('INPUT', 'REJECTED') and REPORT ne 'Y' then delete;
MPRINT(EM_DIAGRAM):   else if ROLE in('INPUT', 'REJECTED') and REPORT ne 'Y' then delete;
17273      if REPORT eq 'Y' then STATVAR = 1;
MPRINT(EM_DIAGRAM):   if REPORT eq 'Y' then STATVAR = 1;
17274      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 24 observations read from the data set WORK.M1U9L5_V.
NOTE: There were 23 observations read from the data set WORK.STAT_SELVAR.
NOTE: The data set WORK.STAT_ANALYSISMETA has 24 observations and 22 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
17275      data WORK.M3CW2PMQ;
MPRINT(EM_DIAGRAM):    data WORK.M3CW2PMQ;
17276      set WORK.M3CW2PMQ;
MPRINT(EM_DIAGRAM):   set WORK.M3CW2PMQ;
17277      where(use = 'Y' or Report='Y' or (role in('TARGET' 'FREQ' 'PREDICT' 'RESIDUAL' 'INPUT') and use = 'D'));
MPRINT(EM_DIAGRAM):   where(use = 'Y' or Report='Y' or (role in('TARGET' 'FREQ' 'PREDICT' 'RESIDUAL' 'INPUT') and use = 'D'));
17278      if ROLE = 'SEGMENT' then delete;
MPRINT(EM_DIAGRAM):   if ROLE = 'SEGMENT' then delete;
17279      else if ROLE ^in('FREQ','TARGET') then role = 'INPUT';
MPRINT(EM_DIAGRAM):   else if ROLE ^in('FREQ','TARGET') then role = 'INPUT';
17280      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 23 observations read from the data set WORK.M3CW2PMQ.
      WHERE (use='Y') or (Report='Y') or (role in ('FREQ', 'INPUT', 'PREDICT', 'RESIDUAL', 'TARGET') and (use='D'));
NOTE: The data set WORK.M3CW2PMQ has 23 observations and 22 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
17281      data WORK.M19XZC9Z;
MPRINT(EM_DIAGRAM):    data WORK.M19XZC9Z;
17282      set WORK.M19XZC9Z;
MPRINT(EM_DIAGRAM):   set WORK.M19XZC9Z;
17283      where(use = 'Y' or Report='Y' or (role in('SEGMENT', 'TARGET' 'FREQ' 'PREDICT' 'RESIDUAL' 'INPUT') and use = 'D'));
MPRINT(EM_DIAGRAM):   where(use = 'Y' or Report='Y' or (role in('SEGMENT', 'TARGET' 'FREQ' 'PREDICT' 'RESIDUAL' 'INPUT') and use = 'D'));
17284      if ROLE ne 'FREQ' then role = 'INPUT';
MPRINT(EM_DIAGRAM):   if ROLE ne 'FREQ' then role = 'INPUT';
17285      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 23 observations read from the data set WORK.M19XZC9Z.
      WHERE (use='Y') or (Report='Y') or (role in ('FREQ', 'INPUT', 'PREDICT', 'RESIDUAL', 'SEGMENT', 'TARGET') and (use='D'));
NOTE: The data set WORK.M19XZC9Z has 23 observations and 22 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
17286      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
17287      * Stat: Computing Statistics for Interval Variables;
MPRINT(EM_DIAGRAM):   * Stat: Computing Statistics for Interval Variables;
17288      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
17289      proc dmdb data=EMWS1.Ids_DATA(obs=100000) nonorm maxlevel=513
17290      varout=work._DMDBVAR(RENAME=(NAME=VARIABLE))
17291      classout=WORK.StatCLASS(drop=NMISSPERCENT rename=(NAME=VARIABLE FREQUENCY=COUNT FREQPERCENT=PERCENT))
17292      ;
MPRINT(EM_DIAGRAM):   proc dmdb data=EMWS1.Ids_DATA(obs=100000) nonorm maxlevel=513 varout=work._DMDBVAR(RENAME=(NAME=VARIABLE)) classout=WORK.StatCLASS(drop=NMISSPERCENT rename=(NAME=VARIABLE FREQUENCY=COUNT FREQPERCENT=PERCENT)) ;
17293      var
17294      AGE CHILDREN CHILD_DRIV CLAIM_AMOUNT CLAIM_IND CLM_FREQ DISTANCE HOUSE_VAL
17295      INCOME MVR_PTS VEHICLE_AGE VEHICLE_VAL YOJ _dataobs_
17296      ;
MPRINT(EM_DIAGRAM):   var AGE CHILDREN CHILD_DRIV CLAIM_AMOUNT CLAIM_IND CLM_FREQ DISTANCE HOUSE_VAL INCOME MVR_PTS VEHICLE_AGE VEHICLE_VAL YOJ _dataobs_ ;
17297      class
17298      AREA CAR_USE EDU_LEVEL GENDER JOB REVOKED STATE_CODE STATUS VEHICLE_TYPE
17299      ;
MPRINT(EM_DIAGRAM):   class AREA CAR_USE EDU_LEVEL GENDER JOB REVOKED STATE_CODE STATUS VEHICLE_TYPE ;
17300      ;
MPRINT(EM_DIAGRAM):   ;
17301      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Records processed = 8240   Memory used = 511K.
NOTE: View EMWS1.IDS_DATA.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
NOTE: There were 8240 observations read from the data set AIC.CLAIMRAWDATA.
NOTE: There were 8240 observations read from the data set EMWS1.IDS_DATA.
NOTE: The data set WORK._DMDBVAR has 14 observations and 9 variables.
NOTE: The data set WORK.STATCLASS has 46 observations and 8 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.05 seconds
      cpu time            0.03 seconds
 
 
17302      proc stdize data = EMWS1.Ids_DATA(obs=100000) out=_null_ outstat=work._STDIZE add=0 fuzz=1E-14 initial=MAD vardef=df method=STD mult=1 pctlmtd=ORD_STAT pctldef=2 pctlpts=(0 5 50 95 100);
MPRINT(EM_DIAGRAM):   proc stdize data = EMWS1.Ids_DATA(obs=100000) out=_null_ outstat=work._STDIZE add=0 fuzz=1E-14 initial=MAD vardef=df method=STD mult=1 pctlmtd=ORD_STAT pctldef=2 pctlpts=(0 5 50 95 100);
17303      var
17304      AGE CHILDREN CHILD_DRIV CLAIM_AMOUNT CLAIM_IND CLM_FREQ DISTANCE HOUSE_VAL
17305      INCOME MVR_PTS VEHICLE_AGE VEHICLE_VAL YOJ _dataobs_
17306      ;
MPRINT(EM_DIAGRAM):   var AGE CHILDREN CHILD_DRIV CLAIM_AMOUNT CLAIM_IND CLM_FREQ DISTANCE HOUSE_VAL INCOME MVR_PTS VEHICLE_AGE VEHICLE_VAL YOJ _dataobs_ ;
17307      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: INITIAL= will be ignored.
NOTE: View EMWS1.IDS_DATA.VIEW used (Total process time):
      real time           0.08 seconds
      cpu time            0.09 seconds
 
NOTE: There were 8240 observations read from the data set AIC.CLAIMRAWDATA.
NOTE: There were 8240 observations read from the data set EMWS1.IDS_DATA.
NOTE: The data set WORK._STDIZE has 13 observations and 15 variables.
NOTE: PROCEDURE STDIZE used (Total process time):
      real time           0.09 seconds
      cpu time            0.12 seconds
 
 
17308      proc transpose data=work._STDIZE out=work._TRANSSTDIZE(drop=_LABEL_ rename=(_NAME_=VARIABLE));
MPRINT(EM_DIAGRAM):   proc transpose data=work._STDIZE out=work._TRANSSTDIZE(drop=_LABEL_ rename=(_NAME_=VARIABLE));
17309      id _type_;
MPRINT(EM_DIAGRAM):   id _type_;
17310      where _TYPE_='P50';
MPRINT(EM_DIAGRAM):   where _TYPE_='P50';
17311      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK._STDIZE.
      WHERE _TYPE_='P50';
NOTE: The data set WORK._TRANSSTDIZE has 14 observations and 2 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
 
 
17312      proc sort data=work._TRANSSTDIZE;
MPRINT(EM_DIAGRAM):   proc sort data=work._TRANSSTDIZE;
17313      by VARIABLE;
MPRINT(EM_DIAGRAM):   by VARIABLE;
17314      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 14 observations read from the data set WORK._TRANSSTDIZE.
NOTE: The data set WORK._TRANSSTDIZE has 14 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
17315      proc sort data=work._DMDBVAR;
MPRINT(EM_DIAGRAM):   proc sort data=work._DMDBVAR;
17316      by VARIABLE;
MPRINT(EM_DIAGRAM):   by VARIABLE;
17317      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 14 observations read from the data set WORK._DMDBVAR.
NOTE: The data set WORK._DMDBVAR has 14 observations and 9 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
17318      data WORK.StatINTERVAL;
MPRINT(EM_DIAGRAM):   data WORK.StatINTERVAL;
17319      merge work._TRANSSTDIZE work._DMDBVAR;
MPRINT(EM_DIAGRAM):   merge work._TRANSSTDIZE work._DMDBVAR;
17320      format N NMISS 8. MIN MAX P50 MEAN STD SKEWNESS KURTOSIS BEST8.3;
MPRINT(EM_DIAGRAM):   format N NMISS 8. MIN MAX P50 MEAN STD SKEWNESS KURTOSIS BEST8.3;
17321      by VARIABLE;
MPRINT(EM_DIAGRAM):   by VARIABLE;
17322      run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable VARIABLE by input data sets. This might cause unexpected results.
NOTE: There were 14 observations read from the data set WORK._TRANSSTDIZE.
NOTE: There were 14 observations read from the data set WORK._DMDBVAR.
NOTE: The data set WORK.STATINTERVAL has 14 observations and 10 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
17323      proc sort data=WORK.StatCLASS;
MPRINT(EM_DIAGRAM):    proc sort data=WORK.StatCLASS;
17324      by Variable Level;
MPRINT(EM_DIAGRAM):   by Variable Level;
17325      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 46 observations read from the data set WORK.STATCLASS.
NOTE: The data set WORK.STATCLASS has 46 observations and 8 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
NOTE: There were 13 observations read from the data set WORK._STDIZE.
NOTE: The data set EMWS1.STAT_TRAINPCTLS has 13 observations and 15 variables.
17326      data colorindex;
MPRINT(EM_DIAGRAM):    data colorindex;
17327      retain LevelIndex 0;
MPRINT(EM_DIAGRAM):   retain LevelIndex 0;
17328      set WORK.StatCLASS(keep=Variable Level);
MPRINT(EM_DIAGRAM):   set WORK.StatCLASS(keep=Variable Level);
17329      by variable level;
MPRINT(EM_DIAGRAM):   by variable level;
17330      if first.variable then LevelIndex = 0;
MPRINT(EM_DIAGRAM):   if first.variable then LevelIndex = 0;
17331      if first.level then LevelIndex + 1;
MPRINT(EM_DIAGRAM):   if first.level then LevelIndex + 1;
17332      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 46 observations read from the data set WORK.STATCLASS.
NOTE: The data set WORK.COLORINDEX has 46 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
17333      data WORK.StatCLASS;
MPRINT(EM_DIAGRAM):    data WORK.StatCLASS;
17334      merge WORK.StatCLASS(in=_a) colorindex;
MPRINT(EM_DIAGRAM):   merge WORK.StatCLASS(in=_a) colorindex;
17335      by variable level;
MPRINT(EM_DIAGRAM):   by variable level;
17336      if _a then output;
MPRINT(EM_DIAGRAM):   if _a then output;
17337      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 46 observations read from the data set WORK.STATCLASS.
NOTE: There were 46 observations read from the data set WORK.COLORINDEX.
NOTE: The data set WORK.STATCLASS has 46 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
17338      data WORK.StatINTERVAL;
MPRINT(EM_DIAGRAM):    data WORK.StatINTERVAL;
17339      length DATAROLE $20;
MPRINT(EM_DIAGRAM):   length DATAROLE $20;
17340      retain DATAROLE "TRAIN";
MPRINT(EM_DIAGRAM):   retain DATAROLE "TRAIN";
17341      set WORK.StatINTERVAL;
MPRINT(EM_DIAGRAM):   set WORK.StatINTERVAL;
17342      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 14 observations read from the data set WORK.STATINTERVAL.
NOTE: The data set WORK.STATINTERVAL has 14 observations and 11 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
17343      proc append base=EMWS1.Stat_INTERVAL data=WORK.StatINTERVAL force;
MPRINT(EM_DIAGRAM):   proc append base=EMWS1.Stat_INTERVAL data=WORK.StatINTERVAL force;
17344      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK.STATINTERVAL to EMWS1.STAT_INTERVAL.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 14 observations read from the data set WORK.STATINTERVAL.
NOTE: The data set EMWS1.STAT_INTERVAL has 14 observations and 11 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
17345      data WORK.StatCLASS;
MPRINT(EM_DIAGRAM):    data WORK.StatCLASS;
17346      length DATAROLE $20;
MPRINT(EM_DIAGRAM):   length DATAROLE $20;
17347      retain DATAROLE "TRAIN";
MPRINT(EM_DIAGRAM):   retain DATAROLE "TRAIN";
17348      set WORK.StatCLASS;
MPRINT(EM_DIAGRAM):   set WORK.StatCLASS;
17349      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 46 observations read from the data set WORK.STATCLASS.
NOTE: The data set WORK.STATCLASS has 46 observations and 10 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
17350      proc append base=EMWS1.Stat_CLASS data=WORK.StatCLASS force;
MPRINT(EM_DIAGRAM):   proc append base=EMWS1.Stat_CLASS data=WORK.StatCLASS force;
17351      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK.STATCLASS to EMWS1.STAT_CLASS.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 46 observations read from the data set WORK.STATCLASS.
NOTE: The data set EMWS1.STAT_CLASS has 46 observations and 10 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
17352      proc sort data=EMWS1.Stat_VariableSet out=tempVariable(keep=name label role rename=(name=variable));
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.Stat_VariableSet out=tempVariable(keep=name label role rename=(name=variable));
17353      by name;
MPRINT(EM_DIAGRAM):   by name;
17354      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 24 observations read from the data set EMWS1.STAT_VARIABLESET.
NOTE: The data set WORK.TEMPVARIABLE has 24 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
17355      proc sort data=EMWS1.Stat_CLASS;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Stat_CLASS;
17356      by Variable;
MPRINT(EM_DIAGRAM):   by Variable;
17357      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 46 observations read from the data set EMWS1.STAT_CLASS.
NOTE: The data set EMWS1.STAT_CLASS has 46 observations and 10 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
17358      data EMWS1.Stat_CLASS;
MPRINT(EM_DIAGRAM):   data EMWS1.Stat_CLASS;
17359      merge EMWS1.Stat_CLASS(in=_a) tempVariable;
MPRINT(EM_DIAGRAM):   merge EMWS1.Stat_CLASS(in=_a) tempVariable;
17360      by variable;
MPRINT(EM_DIAGRAM):   by variable;
17361      if label = '' then label=Variable;
MPRINT(EM_DIAGRAM):   if label = '' then label=Variable;
17362      if _a then output;
MPRINT(EM_DIAGRAM):   if _a then output;
17363      run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable VARIABLE by input data sets. This might cause unexpected results.
NOTE: There were 46 observations read from the data set EMWS1.STAT_CLASS.
NOTE: There were 24 observations read from the data set WORK.TEMPVARIABLE.
NOTE: The data set EMWS1.STAT_CLASS has 46 observations and 12 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
17364      run;
MPRINT(EM_DIAGRAM):    run;
17365      proc sort data=EMWS1.Stat_VariableSet out=tempVariable(keep=name label role rename=(name=variable));
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Stat_VariableSet out=tempVariable(keep=name label role rename=(name=variable));
17366      by name;
MPRINT(EM_DIAGRAM):   by name;
17367      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 24 observations read from the data set EMWS1.STAT_VARIABLESET.
NOTE: The data set WORK.TEMPVARIABLE has 24 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
17368      proc sort data=EMWS1.Stat_INTERVAL;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Stat_INTERVAL;
17369      by Variable;
MPRINT(EM_DIAGRAM):   by Variable;
17370      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 14 observations read from the data set EMWS1.STAT_INTERVAL.
NOTE: The data set EMWS1.STAT_INTERVAL has 14 observations and 11 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
17371      data EMWS1.Stat_INTERVAL;
MPRINT(EM_DIAGRAM):   data EMWS1.Stat_INTERVAL;
17372      merge EMWS1.Stat_INTERVAL(in=_a) tempVariable;
MPRINT(EM_DIAGRAM):   merge EMWS1.Stat_INTERVAL(in=_a) tempVariable;
17373      by variable;
MPRINT(EM_DIAGRAM):   by variable;
17374      if label = '' then label=Variable;
MPRINT(EM_DIAGRAM):   if label = '' then label=Variable;
17375      if _a then output;
MPRINT(EM_DIAGRAM):   if _a then output;
17376      run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable VARIABLE by input data sets. This might cause unexpected results.
NOTE: There were 14 observations read from the data set EMWS1.STAT_INTERVAL.
NOTE: There were 24 observations read from the data set WORK.TEMPVARIABLE.
NOTE: The data set EMWS1.STAT_INTERVAL has 14 observations and 13 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
17377      proc datasets library=EMWS1 nolist;
MPRINT(EM_DIAGRAM):   proc datasets library=EMWS1 nolist;
17378      modify Stat_INTERVAL;
MPRINT(EM_DIAGRAM):   modify Stat_INTERVAL;
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role";
17379      label DATAROLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label Variable = "Variable";
17380      label Variable = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label MEAN = "Mean";
17381      label MEAN = "%sysfunc(sasmsg(sashelp.dmine, rpt_mean_vlabel,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   label N = "Non Missing";
17382      label N = "%sysfunc(sasmsg(sashelp.dmine, rpt_nonMiss_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label STD = "Standard Deviation";
17383      label STD = "%sysfunc(sasmsg(sashelp.dmine, rpt_std_vlabel,     NOQUOTE))";
MPRINT(EM_DIAGRAM):   label NMISS = "Missing";
17384      label NMISS = "%sysfunc(sasmsg(sashelp.dmine, rpt_missing_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label p50 = "Median";
17385      label p50 = "%sysfunc(sasmsg(sashelp.dmine, rpt_median_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label MIN = "Minimum";
17386      label MIN = "%sysfunc(sasmsg(sashelp.dmine, rpt_minimum_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label MAX = "Maximum";
17387      label MAX = "%sysfunc(sasmsg(sashelp.dmine, rpt_maximum_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label SKEWNESS = "Skewness";
17388      label SKEWNESS = "%sysfunc(sasmsg(sashelp.dmine, rpt_skewness_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label KURTOSIS = "Kurtosis";
17389      label KURTOSIS = "%sysfunc(sasmsg(sashelp.dmine, rpt_kurtosis_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   run;
17390      run;
 
NOTE: MODIFY was successful for EMWS1.STAT_INTERVAL.DATA.
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
 
 
17391      proc sort data=EMWS1.Stat_CLASS NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Stat_CLASS NOTHREADS;
17392      by DATAROLE ROLE Variable descending COUNT;
MPRINT(EM_DIAGRAM):   by DATAROLE ROLE Variable descending COUNT;
17393      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 46 observations read from the data set EMWS1.STAT_CLASS.
NOTE: The data set EMWS1.STAT_CLASS has 46 observations and 12 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
17394      data WORK.StatCLASS(keep=DATAROLE Variable ROLE Numcat Nmiss Mode ModePct Mode2 Mode2Pct);
MPRINT(EM_DIAGRAM):   data WORK.StatCLASS(keep=DATAROLE Variable ROLE Numcat Nmiss Mode ModePct Mode2 Mode2Pct);
17395      set EMWS1.Stat_CLASS;
MPRINT(EM_DIAGRAM):   set EMWS1.Stat_CLASS;
17396      length Mode Mode2 $32;
MPRINT(EM_DIAGRAM):   length Mode Mode2 $32;
17397      retain NMiss 0 ModePct 0 Mode2Pct 0 Mode '' Mode2 '';
MPRINT(EM_DIAGRAM):   retain NMiss 0 ModePct 0 Mode2Pct 0 Mode '' Mode2 '';
17398      by DATAROLE ROLE Variable;
MPRINT(EM_DIAGRAM):   by DATAROLE ROLE Variable;
17399      if first.DATAROLE or first.variable then do;
MPRINT(EM_DIAGRAM):   if first.DATAROLE or first.variable then do;
17400      Numcat = 1;
MPRINT(EM_DIAGRAM):   Numcat = 1;
17401      NMiss = 0;
MPRINT(EM_DIAGRAM):   NMiss = 0;
17402      Mode = strip(LEVEL);
MPRINT(EM_DIAGRAM):   Mode = strip(LEVEL);
17403      ModePct = PERCENT;
MPRINT(EM_DIAGRAM):   ModePct = PERCENT;
17404      Mode2 = '';
MPRINT(EM_DIAGRAM):   Mode2 = '';
17405      Mode2Pct = 0;
MPRINT(EM_DIAGRAM):   Mode2Pct = 0;
17406      end;
MPRINT(EM_DIAGRAM):   end;
17407      else Numcat +1;
MPRINT(EM_DIAGRAM):   else Numcat +1;
17408      if Numcat =2 then do;
MPRINT(EM_DIAGRAM):   if Numcat =2 then do;
17409      Mode2 = strip(LEVEL);
MPRINT(EM_DIAGRAM):   Mode2 = strip(LEVEL);
17410      Mode2Pct = PERCENT;
MPRINT(EM_DIAGRAM):   Mode2Pct = PERCENT;
17411      end;
MPRINT(EM_DIAGRAM):   end;
17412      if NRAW=. and CRAW='' then NMiss= COUNT;
MPRINT(EM_DIAGRAM):   if NRAW=. and CRAW='' then NMiss= COUNT;
17413      if last.DATAROLE or last.variable then output;
MPRINT(EM_DIAGRAM):   if last.DATAROLE or last.variable then output;
17414      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 46 observations read from the data set EMWS1.STAT_CLASS.
NOTE: The data set WORK.STATCLASS has 9 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
17415      %let _cn = %sysfunc(getoption(CENTER));
17416      %let _nb = %sysfunc(getoption(NUMBER));
17417      options nonumber nocenter;
MPRINT(EM_DIAGRAM):   options nonumber nocenter;
17418      title;
MPRINT(EM_DIAGRAM):   title;
17419      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
17420      proc print data=WORK.StatCLASS(obs=500) label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.StatCLASS(obs=500) label noobs;
17421      var DATAROLE VARIABLE ROLE NUMCAT NMISS Mode ModePct Mode2 Mode2Pct;
MPRINT(EM_DIAGRAM):   var DATAROLE VARIABLE ROLE NUMCAT NMISS Mode ModePct Mode2 Mode2Pct;
17422      label DATAROLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel, NOQUOTE))" ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" NUMCAT = "%sysfunc(sasmsg(sashelp.dmine, rpt_numcat_vlabel,   NOQUOTE))" NMISS =
17423         "%sysfunc(sasmsg(sashelp.dmine, rpt_missing_vlabel,  NOQUOTE))" MODE = "%sysfunc(sasmsg(sashelp.dmine, rpt_mode_vlabel,     NOQUOTE))" MODEPCT = "%sysfunc(sasmsg(sashelp.dmine, rpt_modepct_vlabel,  NOQUOTE))" MODE2 =
17424         "%sysfunc(sasmsg(sashelp.dmine, rpt_mode2_vlabel,     NOQUOTE))" MODE2PCT = "%sysfunc(sasmsg(sashelp.dmine, rpt_mode2pct_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role" ROLE = "Role" NUMCAT = "Number of Levels" NMISS = "Missing" MODE = "Mode" MODEPCT = "Mode Percentage" MODE2 = "Mode2" MODE2PCT = "Mode2 Percentage";
17425      format ModePct Mode2Pct 5.2;
MPRINT(EM_DIAGRAM):   format ModePct Mode2Pct 5.2;
17426      by DATAROLE;
MPRINT(EM_DIAGRAM):   by DATAROLE;
17427      title9 "%sysfunc(sasmsg(sashelp.dmine, rpt_classStats_title,     NOQUOTE))";
MPRINT(EM_DIAGRAM):   title9 "Class Variable Summary Statistics";
17428      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_maxObsPrinted_title,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "(maximum 500 observations printed)";
MPRINT(EM_DIAGRAM):   run;
17429      run;
 
NOTE: There were 9 observations read from the data set WORK.STATCLASS.
NOTE: The PROCEDURE PRINT printed page 3.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
17430      title9;
MPRINT(EM_DIAGRAM):   title9;
17431      title10;
MPRINT(EM_DIAGRAM):   title10;
17432      options &_cn &_nb;
MPRINT(EM_DIAGRAM):   options NOCENTER NONUMBER;
17433      data WORK.StatINTERVALSUMMARY;
MPRINT(EM_DIAGRAM):    data WORK.StatINTERVALSUMMARY;
17434      set EMWS1.Stat_INTERVAL;
MPRINT(EM_DIAGRAM):   set EMWS1.Stat_INTERVAL;
17435      length ROLE $32;
MPRINT(EM_DIAGRAM):   length ROLE $32;
17436      if Variable = "AGE" then ROLE="INPUT";
MPRINT(EM_DIAGRAM):   if Variable = "AGE" then ROLE="INPUT";
17437      else
17438      if Variable = "CHILDREN" then ROLE="INPUT";
MPRINT(EM_DIAGRAM):   else if Variable = "CHILDREN" then ROLE="INPUT";
17439      else
17440      if Variable = "CHILD_DRIV" then ROLE="INPUT";
MPRINT(EM_DIAGRAM):   else if Variable = "CHILD_DRIV" then ROLE="INPUT";
17441      else
17442      if Variable = "CLAIM_AMOUNT" then ROLE="INPUT";
MPRINT(EM_DIAGRAM):   else if Variable = "CLAIM_AMOUNT" then ROLE="INPUT";
17443      else
17444      if Variable = "CLAIM_IND" then ROLE="INPUT";
MPRINT(EM_DIAGRAM):   else if Variable = "CLAIM_IND" then ROLE="INPUT";
17445      else
17446      if Variable = "CLM_FREQ" then ROLE="INPUT";
MPRINT(EM_DIAGRAM):   else if Variable = "CLM_FREQ" then ROLE="INPUT";
17447      else
17448      if Variable = "DISTANCE" then ROLE="INPUT";
MPRINT(EM_DIAGRAM):   else if Variable = "DISTANCE" then ROLE="INPUT";
17449      else
17450      if Variable = "HOUSE_VAL" then ROLE="INPUT";
MPRINT(EM_DIAGRAM):   else if Variable = "HOUSE_VAL" then ROLE="INPUT";
17451      else
17452      if Variable = "INCOME" then ROLE="INPUT";
MPRINT(EM_DIAGRAM):   else if Variable = "INCOME" then ROLE="INPUT";
17453      else
17454      if Variable = "MVR_PTS" then ROLE="INPUT";
MPRINT(EM_DIAGRAM):   else if Variable = "MVR_PTS" then ROLE="INPUT";
17455      else
17456      if Variable = "VEHICLE_AGE" then ROLE="INPUT";
MPRINT(EM_DIAGRAM):   else if Variable = "VEHICLE_AGE" then ROLE="INPUT";
17457      else
17458      if Variable = "VEHICLE_VAL" then ROLE="INPUT";
MPRINT(EM_DIAGRAM):   else if Variable = "VEHICLE_VAL" then ROLE="INPUT";
17459      else
17460      if Variable = "YOJ" then ROLE="INPUT";
MPRINT(EM_DIAGRAM):   else if Variable = "YOJ" then ROLE="INPUT";
17461      else
17462      if Variable = "_dataobs_" then ROLE="INPUT";
MPRINT(EM_DIAGRAM):   else if Variable = "_dataobs_" then ROLE="INPUT";
17463      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 14 observations read from the data set EMWS1.STAT_INTERVAL.
NOTE: The data set WORK.STATINTERVALSUMMARY has 14 observations and 13 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
17464      proc sort data=WORK.StatINTERVALSUMMARY NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data=WORK.StatINTERVALSUMMARY NOTHREADS;
17465      by DATAROLE ROLE Variable;
MPRINT(EM_DIAGRAM):   by DATAROLE ROLE Variable;
17466      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 14 observations read from the data set WORK.STATINTERVALSUMMARY.
NOTE: The data set WORK.STATINTERVALSUMMARY has 14 observations and 13 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
17467      %let _cn = %sysfunc(getoption(CENTER));
17468      %let _nb = %sysfunc(getoption(NUMBER));
17469      options nonumber nocenter;
MPRINT(EM_DIAGRAM):   options nonumber nocenter;
17470      title;
MPRINT(EM_DIAGRAM):   title;
17471      proc print data=WORK.StatINTERVALSUMMARY(obs=500) label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.StatINTERVALSUMMARY(obs=500) label noobs;
17472      var Variable ROLE MEAN STD N NMISS MIN P50 MAX SKEWNESS KURTOSIS;
MPRINT(EM_DIAGRAM):   var Variable ROLE MEAN STD N NMISS MIN P50 MAX SKEWNESS KURTOSIS;
17473      by DATAROLE;
MPRINT(EM_DIAGRAM):   by DATAROLE;
17474      title9 "%sysfunc(sasmsg(sashelp.dmine, rpt_intervalStats_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title9 "Interval Variable Summary Statistics";
17475      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_maxObsPrinted_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "(maximum 500 observations printed)";
MPRINT(EM_DIAGRAM):   run;
17476      run;
 
NOTE: There were 14 observations read from the data set WORK.STATINTERVALSUMMARY.
NOTE: The PROCEDURE PRINT printed page 4.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
17477      title9;
MPRINT(EM_DIAGRAM):   title9;
17478      title10;
MPRINT(EM_DIAGRAM):   title10;
17479      options &_cn &_nb;
MPRINT(EM_DIAGRAM):   options NOCENTER NONUMBER;
17480      proc sort data=WORK.M1U9L5_V;
MPRINT(EM_DIAGRAM):    proc sort data=WORK.M1U9L5_V;
17481      by name;
MPRINT(EM_DIAGRAM):   by name;
17482      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Input data set is already sorted, no sorting done.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
17483      proc means data=EMWS1.Stat_CLASS noprint;
MPRINT(EM_DIAGRAM):    proc means data=EMWS1.Stat_CLASS noprint;
17484      class DATAROLE Variable;
MPRINT(EM_DIAGRAM):   class DATAROLE Variable;
17485      var PERCENT;
MPRINT(EM_DIAGRAM):   var PERCENT;
17486      output out=EMWS1.Stat_CLASSPLOT;
MPRINT(EM_DIAGRAM):   output out=EMWS1.Stat_CLASSPLOT;
17487      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 46 observations read from the data set EMWS1.STAT_CLASS.
NOTE: The data set EMWS1.STAT_CLASSPLOT has 100 observations and 6 variables.
NOTE: PROCEDURE MEANS used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
17488      proc transpose data=EMWS1.Stat_CLASSPLOT out=EMWS1.Stat_CLASSPLOT;
MPRINT(EM_DIAGRAM):   proc transpose data=EMWS1.Stat_CLASSPLOT out=EMWS1.Stat_CLASSPLOT;
17489      where _type_=3 and _STAT_ = 'STD';
MPRINT(EM_DIAGRAM):   where _type_=3 and _STAT_ = 'STD';
17490      var PERCENT;
MPRINT(EM_DIAGRAM):   var PERCENT;
17491      id _STAT_;
MPRINT(EM_DIAGRAM):   id _STAT_;
17492      by DATAROLE Variable;
MPRINT(EM_DIAGRAM):   by DATAROLE Variable;
17493      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 9 observations read from the data set EMWS1.STAT_CLASSPLOT.
      WHERE (_type_=3) and (_STAT_='STD');
NOTE: The data set EMWS1.STAT_CLASSPLOT has 9 observations and 4 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.03 seconds
      cpu time            0.00 seconds
 
 
17494      proc sort data=EMWS1.Stat_CLASSPLOT;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Stat_CLASSPLOT;
17495      by DATAROLE descending STD;
MPRINT(EM_DIAGRAM):   by DATAROLE descending STD;
17496      where STD ne .;
MPRINT(EM_DIAGRAM):   where STD ne .;
17497      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 9 observations read from the data set EMWS1.STAT_CLASSPLOT.
      WHERE STD not = .;
NOTE: The data set EMWS1.STAT_CLASSPLOT has 9 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
17498      data EMWS1.Stat_CLASSPLOT(keep=DATAROLE Variable STD OrderedInput);
MPRINT(EM_DIAGRAM):   data EMWS1.Stat_CLASSPLOT(keep=DATAROLE Variable STD OrderedInput);
17499      label OrderedInput = "%sysfunc(sasmsg(sashelp.dmine, rpt_orderedInput_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label OrderedInput = "Ordered Inputs";
17500      format OrderedInput 5.0;
MPRINT(EM_DIAGRAM):   format OrderedInput 5.0;
17501      label STD = "%sysfunc(sasmsg(sashelp.dmine, rpt_pctVariability_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label STD = "Percent Variability";
17502      retain OrderedInput 0;
MPRINT(EM_DIAGRAM):   retain OrderedInput 0;
17503      set EMWS1.Stat_CLASSPLOT;
MPRINT(EM_DIAGRAM):   set EMWS1.Stat_CLASSPLOT;
17504      by DATAROLE;
MPRINT(EM_DIAGRAM):   by DATAROLE;
17505      if first.DATAROLE then OrderedInput = 1;
MPRINT(EM_DIAGRAM):   if first.DATAROLE then OrderedInput = 1;
17506      else OrderedInput + 1;
MPRINT(EM_DIAGRAM):   else OrderedInput + 1;
17507      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 9 observations read from the data set EMWS1.STAT_CLASSPLOT.
NOTE: The data set EMWS1.STAT_CLASSPLOT has 9 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.01 seconds
 
 
17508      proc sort data=EMWS1.Stat_CLASSPLOT;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Stat_CLASSPLOT;
17509      by Variable;
MPRINT(EM_DIAGRAM):   by Variable;
17510      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 9 observations read from the data set EMWS1.STAT_CLASSPLOT.
NOTE: The data set EMWS1.STAT_CLASSPLOT has 9 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
17511      data EMWS1.Stat_CLASSPLOT;
MPRINT(EM_DIAGRAM):   data EMWS1.Stat_CLASSPLOT;
17512      merge EMWS1.Stat_CLASSPLOT(in=_a) WORK.M1U9L5_V(rename=(NAME=VARIABLE) Keep=NAME ROLE LABEL REPORT);
MPRINT(EM_DIAGRAM):   merge EMWS1.Stat_CLASSPLOT(in=_a) WORK.M1U9L5_V(rename=(NAME=VARIABLE) Keep=NAME ROLE LABEL REPORT);
17513      by Variable;
MPRINT(EM_DIAGRAM):   by Variable;
17514      if _a and (OrderedInput<100 or Report='Y') then output;
MPRINT(EM_DIAGRAM):   if _a and (OrderedInput<100 or Report='Y') then output;
17515      run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable VARIABLE by input data sets. This might cause unexpected results.
NOTE: There were 9 observations read from the data set EMWS1.STAT_CLASSPLOT.
NOTE: There were 24 observations read from the data set WORK.M1U9L5_V.
NOTE: The data set EMWS1.STAT_CLASSPLOT has 9 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.05 seconds
      cpu time            0.00 seconds
 
 
17516      data temp;
MPRINT(EM_DIAGRAM):   data temp;
17517      set EMWS1.Stat_CLASSPLOT;
MPRINT(EM_DIAGRAM):   set EMWS1.Stat_CLASSPLOT;
17518      where DATAROLE='TRAIN';
MPRINT(EM_DIAGRAM):   where DATAROLE='TRAIN';
17519      if OrderedInput<21 then plot = 1;
MPRINT(EM_DIAGRAM):   if OrderedInput<21 then plot = 1;
17520      else plot=0;
MPRINT(EM_DIAGRAM):   else plot=0;
17521      if LABEL = "" then LABEL = Variable;
MPRINT(EM_DIAGRAM):   if LABEL = "" then LABEL = Variable;
17522      keep Variable Label plot;
MPRINT(EM_DIAGRAM):   keep Variable Label plot;
17523      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 9 observations read from the data set EMWS1.STAT_CLASSPLOT.
      WHERE DATAROLE='TRAIN';
NOTE: The data set WORK.TEMP has 9 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
17524      data EMWS1.Stat_CLASSPLOT;
MPRINT(EM_DIAGRAM):   data EMWS1.Stat_CLASSPLOT;
17525      merge EMWS1.Stat_CLASSPLOT temp;
MPRINT(EM_DIAGRAM):   merge EMWS1.Stat_CLASSPLOT temp;
17526      by Variable;
MPRINT(EM_DIAGRAM):   by Variable;
17527      label DATAROLE = "%sysfunc(sasmsg(sashelp.dmine,  rpt_datarole_vlabel, NOQUOTE))" ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel,          NOQUOTE))" PLOT = "%sysfunc(sasmsg(sashelp.dmine, rpt_plot_vlabel,           NOQUOTE))" REPORT =
17528         "%sysfunc(sasmsg(sashelp.dmine, meta_report_vlabel,         NOQUOTE))";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role" ROLE = "Role" PLOT = "Plot" REPORT = "Report";
17529      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 9 observations read from the data set EMWS1.STAT_CLASSPLOT.
NOTE: There were 9 observations read from the data set WORK.TEMP.
NOTE: The data set EMWS1.STAT_CLASSPLOT has 9 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
17530      proc sort data=EMWS1.Stat_CLASSPLOT;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Stat_CLASSPLOT;
17531      by DATAROLE Variable;
MPRINT(EM_DIAGRAM):   by DATAROLE Variable;
17532      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 9 observations read from the data set EMWS1.STAT_CLASSPLOT.
NOTE: The data set EMWS1.STAT_CLASSPLOT has 9 observations and 8 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
17533      proc sort data=EMWS1.Stat_CLASS;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Stat_CLASS;
17534      by DATAROLE Variable;
MPRINT(EM_DIAGRAM):   by DATAROLE Variable;
17535      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 46 observations read from the data set EMWS1.STAT_CLASS.
NOTE: The data set EMWS1.STAT_CLASS has 46 observations and 12 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
17536      data EMWS1.Stat_CLASS;
MPRINT(EM_DIAGRAM):   data EMWS1.Stat_CLASS;
17537      merge EMWS1.Stat_CLASS(drop=NRAW CRAW) EMWS1.Stat_CLASSPLOT(keep=DATAROLE Variable Plot);
MPRINT(EM_DIAGRAM):   merge EMWS1.Stat_CLASS(drop=NRAW CRAW) EMWS1.Stat_CLASSPLOT(keep=DATAROLE Variable Plot);
17538      by DATAROLE Variable;
MPRINT(EM_DIAGRAM):   by DATAROLE Variable;
17539      if plot eq . then delete;
MPRINT(EM_DIAGRAM):   if plot eq . then delete;
17540      label DATAROLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel,       NOQUOTE))" LEVEL = "%sysfunc(sasmsg(sashelp.dmine, rpt_level_vlabel,          NOQUOTE))" TYPE = "%sysfunc(sasmsg(sashelp.dmine, rpt_type_vlabel,           NOQUOTE))"
17540    ! COUNT =
17541         "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel,          NOQUOTE))" ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel,          NOQUOTE))" PERCENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_percent_vlabel,        NOQUOTE))" PLOT =
17542         "%sysfunc(sasmsg(sashelp.dmine, rpt_plot_vlabel,           NOQUOTE))" LEVELINDEX = "%sysfunc(sasmsg(sashelp.dmine, rpt_levelIndex_vlabel,     NOQUOTE))";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role" LEVEL = "Level" TYPE = "Type" COUNT = "Frequency Count" ROLE = "Role" PERCENT = "Percent" PLOT = "Plot" LEVELINDEX = "Level Index";
17543      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 46 observations read from the data set EMWS1.STAT_CLASS.
NOTE: There were 9 observations read from the data set EMWS1.STAT_CLASSPLOT.
NOTE: The data set EMWS1.STAT_CLASS has 46 observations and 11 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
 
 
17544      data EMWS1.Stat_INTERVAL;
MPRINT(EM_DIAGRAM):    data EMWS1.Stat_INTERVAL;
17545      set EMWS1.Stat_INTERVAL;
MPRINT(EM_DIAGRAM):   set EMWS1.Stat_INTERVAL;
17546      label NMiss = "%sysfunc(sasmsg(sashelp.dmine, rpt_missing_vlabel, NOQUOTE))" absCV = "%sysfunc(sasmsg(sashelp.dmine, rpt_absCV_vlabel,   NOQUOTE))" CV = "%sysfunc(sasmsg(sashelp.dmine, rpt_cv_vlabel,      NOQUOTE))" Sign =
17547         "%sysfunc(sasmsg(sashelp.dmine, rpt_sign_vlabel,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   label NMiss = "Missing" absCV = "Abs C.V." CV = "Coefficient of Variation" Sign = "Sign";
17548      if MEAN ne . then do;
MPRINT(EM_DIAGRAM):   if MEAN ne . then do;
17549      CV = STD/MEAN;
MPRINT(EM_DIAGRAM):   CV = STD/MEAN;
17550      absCV = abs(CV);
MPRINT(EM_DIAGRAM):   absCV = abs(CV);
17551      if absCV < 0 then Sign = '-';
MPRINT(EM_DIAGRAM):   if absCV < 0 then Sign = '-';
17552      else Sign = '+';
MPRINT(EM_DIAGRAM):   else Sign = '+';
17553      absCV = abs(absCV);
MPRINT(EM_DIAGRAM):   absCV = abs(absCV);
17554      end;
MPRINT(EM_DIAGRAM):   end;
17555      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 14 observations read from the data set EMWS1.STAT_INTERVAL.
NOTE: The data set EMWS1.STAT_INTERVAL has 14 observations and 16 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
17556      proc sort data = EMWS1.Stat_INTERVAL;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS1.Stat_INTERVAL;
17557      by DATAROLE descending absCV;
MPRINT(EM_DIAGRAM):   by DATAROLE descending absCV;
17558      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 14 observations read from the data set EMWS1.STAT_INTERVAL.
NOTE: The data set EMWS1.STAT_INTERVAL has 14 observations and 16 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
17559      data EMWS1.Stat_INTERVAL;
MPRINT(EM_DIAGRAM):   data EMWS1.Stat_INTERVAL;
17560      retain OrderedInput;
MPRINT(EM_DIAGRAM):   retain OrderedInput;
17561      set EMWS1.Stat_INTERVAL;
MPRINT(EM_DIAGRAM):   set EMWS1.Stat_INTERVAL;
17562      by DATAROLE;
MPRINT(EM_DIAGRAM):   by DATAROLE;
17563      label OrderedInput = "%sysfunc(sasmsg(sashelp.dmine, rpt_orderedInput_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label OrderedInput = "Ordered Inputs";
17564      format OrderedInput 5.0;
MPRINT(EM_DIAGRAM):   format OrderedInput 5.0;
17565      if first.DATAROLE then OrderedInput = 1;
MPRINT(EM_DIAGRAM):   if first.DATAROLE then OrderedInput = 1;
17566      else OrderedInput + 1;
MPRINT(EM_DIAGRAM):   else OrderedInput + 1;
17567      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 14 observations read from the data set EMWS1.STAT_INTERVAL.
NOTE: The data set EMWS1.STAT_INTERVAL has 14 observations and 17 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
17568      proc sort data=WORK.M1U9L5_V;
MPRINT(EM_DIAGRAM):    proc sort data=WORK.M1U9L5_V;
17569      by name;
MPRINT(EM_DIAGRAM):   by name;
17570      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Input data set is already sorted, no sorting done.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "February 25, 2017" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "14:08:44" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                February 25, 2017
Time:                14:08:44
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O0G2YZPQ "C:\Users\Gaurav\Desktop\second sem\Data Mining\Project 2\Automobile Insurance Claim\Workspaces\EMWS1\Stat\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O0G2YZPQ new;
MPRINT(EM_DIAGRAM):   run;
17672      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
17673      * Stat: Scoring DATA data;
MPRINT(EM_DIAGRAM):   * Stat: Scoring DATA data;
17674      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
17675      data EMWS1.Stat_TRAIN
17676      / view=EMWS1.Stat_TRAIN
17677      ;
MPRINT(EM_DIAGRAM):   data EMWS1.Stat_TRAIN / view=EMWS1.Stat_TRAIN ;
17678      set EMWS1.Ids_DATA
17679      ;
MPRINT(EM_DIAGRAM):   set EMWS1.Ids_DATA ;
17680      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: DATA STEP view saved on file EMWS1.STAT_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.IDS_DATA.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
17681      quit;
 
17682      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
17683      * Stat: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Stat: Computing metadata for TRAIN data;
17684      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
NOTE: View EMWS1.STAT_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta "C:\Users\Gaurav\Desktop\second sem\Data Mining\Project 2\Automobile Insurance Claim\Workspaces\EMWS1\Stat\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS1.Stat_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS1.Stat_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS1.Stat_TRAIN out=WORK.M1PEKIN2 noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1PEKIN2;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 36 INFORMAT $36 INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M1PEKIN2(keep=name type length label format formatl formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne '' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then format = strip(format)!!strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(format)!!strip(put(formatl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then informat = strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(informat)!!strip(put(informl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1PEKIN2;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M1PEKIN2;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M2NAW70G NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2NAW70G;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M2NAW70G;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1RD6WPN(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M2NAW70G;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2NAW70G;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M2NAW70G;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" "MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" "QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX"
"YEAR" "YYMMDD" "YYMON" "YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" "EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" "NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" "SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if compress(tempfmt, '0123456789.', '') = '' then formattype='NUM';
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = "DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_PARTIND_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('Q') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ ('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   if symexist('RATEMKG_ROLE') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('RATEMKG_ROLE')) in('Y', 'YES') then do;
MPRINT(EMADVISECOLUMNS):   if _uname =: 'POLICY' then ROLE = 'POLICYID';
MPRINT(EMADVISECOLUMNS):   else if _uname in ('PARTITION', '_PARTIND_') then ROLE = 'PARTITION';
MPRINT(EMADVISECOLUMNS):   else if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   if _uname = 'EXPOSURE' then ROLE = 'EXPOSURE';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'YEAR' then ROLE = 'YEAR';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'WEIGHT' then ROLE = 'WEIGHT';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'OFFSET' then ROLE = 'OFFSET';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   if symexist('dmwb_product') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('dmwb_product')) = 'FACTORYMINER_DATASOURCE' then do;
MPRINT(EMADVISECOLUMNS):   if ROLE ^in('INPUT', 'TARGET', 'REJECTED', 'SEGMENT', 'FREQ', 'ID', 'KEY') then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2NAW70G;
MPRINT(EMADVISECOLUMNS):   set WORK.M2NAW70G;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= "Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= "Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower
limit" UPPERLIMIT= "Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= "Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS1.Ids_DATA noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Ids_CMeta_DATA out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS1.Stat_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Stat";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Stat: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   if ROLE in('INPUT', 'REJECTED') then do;
MPRINT(EM_DIAGRAM):   if upcase(NAME) in( 'AGE' 'AREA' 'CAR_USE' 'CHILDREN' 'CHILD_DRIV' 'CLAIM_AMOUNT' 'CLAIM_IND' 'CLM_FREQ' 'DISTANCE' 'EDU_LEVEL' 'GENDER' 'HOUSE_VAL' 'INCOME' 'JOB' 'MVR_PTS' 'REVOKED' 'STATE_CODE' 'STATUS' 'VEHICLE_AGE'
'VEHICLE_TYPE' 'VEHICLE_VAL' 'YOJ' '_DATAOBS_' ) then ROLE='INPUT';
MPRINT(EM_DIAGRAM):   else delete;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
NOTE: View EMWS1.STAT_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "February 25, 2017" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "14:08:45" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Report Log
Date:                February 25, 2017
Time:                14:08:45
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O0YMPJMY "C:\Users\Gaurav\Desktop\second sem\Data Mining\Project 2\Automobile Insurance Claim\Workspaces\EMWS1\Stat\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O0YMPJMY new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
