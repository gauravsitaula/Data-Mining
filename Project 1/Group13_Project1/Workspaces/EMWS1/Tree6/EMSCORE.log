MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "February 09, 2017" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "19:40:30" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                February 09, 2017
Time:                19:40:30
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O1KKJGYU "C:\Users\Gaurav\Desktop\second sem\Data Mining\Project 1\Group13_Project1\Workspaces\EMWS1\Tree6\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O1KKJGYU new;
MPRINT(EM_DIAGRAM):   run;
23303      %let EMEXCEPTIONSTRING=;
23304      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
23305      * SCORE: Tree6;
MPRINT(EM_DIAGRAM):   * SCORE: Tree6;
23306      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
23307      %let EM_ACTION = SCORE;
23308      %let syscc = 0;
23309      %macro main;
23310      
23311        %if %upcase(&EM_ACTION) = CREATE %then %do;
23312          filename temp catalog 'sashelp.emmodl.tree_create.source';
23313          %include temp;
23314          filename temp;
23315      
23316          %em_tree_create;
23317        %end;
23318      
23319         %else
23320         %if %upcase(&EM_ACTION) = TRAIN %then %do;
23321      
23322             filename temp catalog 'sashelp.emmodl.tree_train.source';
23323             %include temp;
23324             filename temp;
23325             %em_tree_train;
23326         %end;
23327      
23328        %else
23329        %if %upcase(&EM_ACTION) = SCORE %then %do;
23330          filename temp catalog 'sashelp.emmodl.tree_score.source';
23331          %include temp;
23332          filename temp;
23333      
23334          %em_tree_score;
23335      
23336        %end;
23337      
23338        %else
23339        %if %upcase(&EM_ACTION) = REPORT %then %do;
23340      
23341             filename temp catalog 'sashelp.emmodl.tree_report.source';
23342             %include temp;
23343             filename temp;
23344      
23345             %em_tree_report;
23346         %end;
23347      
23348        %else
23349        %if %upcase(&EM_ACTION) = OPENINT %then %do;
23350      
23351             filename temp catalog 'sashelp.emmodl.tree_actions.source';
23352             %include temp;
23353             filename temp;
23354             %EM_TREE_OPENTREEVIEWER;
23355      
23356         %end;
23357      
23358        %else
23359        %if %upcase(&EM_ACTION) = CLOSEINT %then %do;
23360      
23361             filename temp catalog 'sashelp.emmodl.tree_actions.source';
23362             %include temp;
23363             filename temp;
23364             %EM_TREE_CLOSETREEVIEWER;
23365      
23366         %end;
23367      
23368      
23369         %doendm:
23370      %mend main;
23371      
23372      %main;
MPRINT(EM_DIAGRAM):    
MPRINT(MAIN):   filename temp catalog 'sashelp.emmodl.tree_score.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMMODL.TREE_SCORE.SOURCE.
23374     +%macro em_tree_score;
23376     +   /* determine if multiple targets will be processed */
23377     +   %let em_tree_multipleTargets=N;
23378     +   %let em_tree_numTarget=1;
23379     +   %if "&EM_PROPERTY_USEMULTIPLETARGET" eq "Y" %then %do;
23380     +      /* determine if there are any ordinal target variables - if so, multiple targets are not supported */
23381     +      %if &EM_NUM_ORDINAL_TARGET gt 0 %then %do;
23382     +         %let em_tree_multipleTargets=N;
23383     +      %end;
23384     +      %else %do;
23385     +         /* create macro array of targets  */
23386     +         data _null_;
23387     +           set &EM_DATA_VARIABLESET(where=(ROLE='TARGET' AND LEVEL^='ORDINAL')) end=eof;
23388     +           call symput('em_tree_targetVars'!!strip(put(_N_, BEST.)), strip(Name));
23389     +           if eof then
23390     +             call symput('em_tree_numTarget', strip(put(_N_, BEST.)));
23391     +        run;
23393     +        %if &em_tree_numTarget gt 1 %then %do;
23394     +           %let em_tree_multipleTargets=Y;
23395     +        %end;
23396     +      %end;
23397     +   %end;
23399     +   /* build flow and publish scoring code */
23400     +   %EM_GETNAME(key=TREEFLOW, type=FILE, extension=sas);
23401     +   %EM_GETNAME(key=TREEPUBLISH, type=FILE, extension=sas);
23403     +   filename treeflow "&EM_USER_TREEFLOW";
23404     +   filename treepub "&EM_USER_TREEPUBLISH";
23406     +   filename flowref  "&EM_FILE_EMFLOWSCORECODE";
23407     +   filename pubref   "&EM_FILE_EMPUBLISHSCORECODE";
23409     +   %em_copyfile(infref=treeflow, outfref=flowref);
23410     +   %em_copyfile(infref=treepub, outfref=pubref);
23412     +   filename treeflow;
23413     +   filename treepub;
23415     +   /* if priors are used, add code to generate unadjusted residuals in export */
23416     +   %let useAdjPriors = N;
23417     +   data _null_;
23418     +     set &EM_DEC_DECMETA(where=(_TYPE_="DECPRIOR"));
23419     +     if USE="Y" then call symput('useAdjPriors', 'Y');
23420     +   run;
23421     +   %if (("&em_tree_multipleTargets" eq "N") AND ("&useAdjPriors" eq "Y")) %then %do;
23422     +      filename temp catalog 'sashelp.emutil.em_makeunadjustedresidualvars.source';
23423     +      %include temp;
23424     +      filename temp;
23426     +      %EM_GETNAME(key=adjResidualCode, type=FILE, extension=sas);
23427     +      filename adjref "&EM_USER_adjResidualCode";
23428     +      %makeUnadjustedResidualVars(target=%EM_TARGET, decmeta=&EM_DEC_DECMETA, fref=adjref);
23430     +      %em_copyfile(infref=adjref, outfref=flowref, append=Y);
23432     +      filename adjref;
23433     +   %end;
23435     +   /* LEAF */
23436     +   %if "&EM_PROPERTY_LEAFID" eq "Y" %then %do;
23437     +      data _null_;
23438     +        file flowref mod;
23439     +        put 'drop _LEAF_;';
23440     +      run;
23442     +      data _null_;
23443     +        file pubref mod;
23444     +        put 'drop _LEAF_;';
23445     +      run;
23447     +   %end;
23449     +   filename flowref;
23450     +   filename pubref;
23452     +   /* em_metachange code */
23453     +   %if "&EM_PROPERTY_LEAFID" eq "Y" %then %do;
23454     +     %EM_METACHANGE(name=_NODE_, role=&EM_PROPERTY_NODEROLE, LEVEL=NOMINAL);
23455     +   %end;
23457     +   /* variable selection based on importance stat    */
23458     +   %if "&EM_PROPERTY_VARSELECTION" eq "Y" %then %do;
23459     +     %EM_GETNAME(key=OUTIMPORT, type=DATA);
23460     +     %let dsid = %sysfunc(open(&EM_USER_OUTIMPORT(where=(IMPORTANCE<0.05))));
23461     +     %let varnum = %sysfunc(varnum(&dsid, NAME));
23462     +     %let obs = %sysfunc(fetch(&dsid));
23463     +     %do %while(&obs=0);
23464     +       %let temp = %nrbquote(%sysfunc(getvarc(&dsid, &varnum)));
23465     +       %let varname = %nrbquote(%sysfunc(tranwrd(&temp,  %str(%"),"")));
23466     +       %EM_METACHANGE(name=&varname, role=REJECTED);
23467     +       %let obs = %sysfunc(fetch(&dsid));
23468     +     %end;
23469     +     %if &dsid %then %let dsid=%sysfunc(close(&dsid));
23470     +   %end;
23472     +   /* set Q_ varaibles to role of ASSESS when in the presense of prior probabilities */
23473     +   %if %sysfunc(exist(&EM_DEC_DECMETA)) %then %do;
23474     +    %let tree_pred_vars = ;
23475     +    %let tree_pred_lvl =;
23476     +    %let numpred= 0;
23478     +    data _null_;
23479     +     set &EM_DEC_DECMETA(where=(_TYPE_="PREDICTED")) end=eof;
23480     +     call symput('tree_pred_vars'!!strip(put(_N_, BEST.)), strip(VARIABLE));
23481     +     call symput('tree_pred_lvl'!!strip(put(_N_, BEST.)), strip(LEVEL));
23482     +     if eof then
23483     +       call symput('numpred', strip(put(_N_, BEST.)));
23484     +    run;
23485     +   %end;
23487     +   %if &numpred ne 0 %then %do;
23488     +    %do i=1 %to &numpred;
23489     +      %let qpred = Q%substr(&&tree_pred_vars&i,2);
23490     +      %EM_METACHANGE(name=&qpred, role=ASSESS);
23491     +    %end;
23492     +   %end;
23494     +   /* determine if multiple targets will be processed */
23495     +   %let em_tree_multipleTargets=N;
23496     +   %let em_tree_numTarget=1;
23497     +   %if "&EM_PROPERTY_USEMULTIPLETARGET" eq "Y" %then %do;
23498     +      /* determine if there are any ordinal target variables - if so, multiple targets are not supported */
23499     +      %if &EM_NUM_ORDINAL_TARGET gt 0 %then %do;
23500     +         %let em_tree_multipleTargets=N;
23501     +      %end;
23502     +      %else %do;
23503     +        data _null_;
23504     +          set &EM_DATA_VARIABLESET(where=(ROLE='TARGET' AND LEVEL^='ORDINAL')) end=eof;
23505     +          if eof then
23506     +            call symput('em_tree_numTarget', strip(put(_N_, BEST.)));
23507     +        run;
23509     +        %if &em_tree_numTarget gt 1 %then %do;
23510     +           %let em_tree_multipleTargets=Y;
23511     +        %end;
23512     +     %end;
23513     +   %end;
23515     +   /* need to include this code to do the %em_report for OUTIMPORT here instead of in Report code so _loop data set is created when group processing */
23516     +   %if "&em_tree_multipleTargets" eq "N" %then %do;
23518     +      /* variable importance */
23519     +      %EM_GETNAME(key=OUTIMPORT, type=DATA);
23520     +      %if %sysfunc(exist(&EM_USER_OUTIMPORT)) eq 1 %then %do;
23522     +         %let validexist=0;
23523     +         %if (("&EM_IMPORT_VALIDATE" ne "") AND (%sysfunc(exist(&EM_IMPORT_VALIDATE)) or %sysfunc(exist(&EM_IMPORT_VALIDATE,VIEW)))) %then %do;
23524     +           %let validexist=1;
23525     +         %end;
23527     +         /* determine if vars exists - properties could indicate they are they but freeze=Y would mean the node wasn't retrained */
23528     +         /* and the columns may not be generated                                                                                 */
23529     +         %let em_tree_cvexists=;
23530     +         %let em_tree_surrexists=.;
23531     +         data _null_;
23532     +            set &EM_USER_OUTIMPORT (obs=2) end=eof;
23533     +            if eof then do ;
23534     +               call symput("em_tree_cvexists" , strip(put(cvimportance,best.))) ;
23535     +               call symput("em_tree_surrexists", strip(put(nsurrogates, best.)));
23536     +            end;
23537     +         run;
23539     +         data &EM_USER_OUTIMPORT;
23540     +            set &EM_USER_OUTIMPORT;
23542     +            /* format columns based on Precison value specified */
23543     +            format importance 15.&EM_PROPERTY_PRECISION
23544     +                 %if &validexist %then %do;
23545     +                   vimportance ratio 15.&EM_PROPERTY_PRECISION
23546     +                 %end;
23547     +                 %if "&EM_TREE_CVEXISTS" ne "." %then %do;
23548     +                   cvimportance vimportance ratio 15.&EM_PROPERTY_PRECISION
23549     +                 %end;
23550     +            ;
23551     +            label  NAME       = "%sysfunc(sasmsg(sashelp.dmine, meta_name_vlabel, noquote))"
23552     +                 LABEL        = "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, noquote))"
23553     +                 NRULES       = "%sysfunc(sasmsg(sashelp.dmine, rpt_nrules_vlabel, noquote))"
23554     +                 IMPORTANCE   = "%sysfunc(sasmsg(sashelp.dmine, rpt_importance_vlabel, noquote))"
23555     +                 %if "&em_tree_surrexists" ne "" %then %do;
23556     +                   NSURROGATES  = "%sysfunc(sasmsg(sashelp.dmine, rpt_nsurrogates_vlabel, noquote))"
23557     +                 %end;
23558     +                 %if &validexist %then %do;
23559     +                   VIMPORTANCE = "%sysfunc(sasmsg(sashelp.dmine, rpt_vimportance_vlabel, noquote))"
23560     +                   RATIO       = "%sysfunc(sasmsg(sashelp.dmine, rpt_ratio_vlabel, noquote))"
23561     +                 %end;
23562     +                 %if "&EM_TREE_CVEXISTS" ne "" %then %do;
23563     +                   VIMPORTANCE = "%sysfunc(sasmsg(sashelp.dmine, rpt_vimportance_vlabel, noquote))"
23564     +                   CVIMPORTANCE =  "%sysfunc(sasmsg(sashelp.dmine, rpt_cvimport_vlabel, noquote))"
23565     +                   CVRULES= "%sysfunc(sasmsg(sashelp.dmine, rpt_cvrules_vlabel, noquote))"
23566     +                   RATIO = "%sysfunc(sasmsg(sashelp.dmine, rpt_ratio_vlabel, noquote))"
23567     +                 %end;
23568     +            ;
23569     +         run;
23571     +         %EM_REPORT(key=OUTIMPORT, viewtype=DATA, block=MODEL, description=IMPORTANCE, autodisplay=N);
23572     +      %end;
23573     +   %end;
23575     +   %doendm:
23576     +%mend em_tree_score;
NOTE: %INCLUDE (level 1) ending.
MPRINT(MAIN):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(EM_TREE_SCORE):  ;
MPRINT(EM_TREE_SCORE):  ;
MPRINT(EM_TREE_SCORE):   filename treeflow "C:\Users\Gaurav\Desktop\second sem\Data Mining\Project 1\Group13_Project1\Workspaces\EMWS1\Tree6\TREEFLOW.sas";
MPRINT(EM_TREE_SCORE):   filename treepub "C:\Users\Gaurav\Desktop\second sem\Data Mining\Project 1\Group13_Project1\Workspaces\EMWS1\Tree6\TREEPUBLISH.sas";
MPRINT(EM_TREE_SCORE):   filename flowref "C:\Users\Gaurav\Desktop\second sem\Data Mining\Project 1\Group13_Project1\Workspaces\EMWS1\Tree6\EMFLOWSCORE.sas";
MPRINT(EM_TREE_SCORE):   filename pubref "C:\Users\Gaurav\Desktop\second sem\Data Mining\Project 1\Group13_Project1\Workspaces\EMWS1\Tree6\EMPUBLISHSCORE.sas";
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file flowref lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("treeflow",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file FLOWREF is:
      Filename=C:\Users\Gaurav\Desktop\second sem\Data Mining\Project 1\Group13_Project1\Workspaces\EMWS1\Tree6\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=0,
      Last Modified=09Feb2017:19:40:29,
      Create Time=09Feb2017:19:40:00

NOTE: 238 records were written to the file FLOWREF.
      The minimum record length was 1.
      The maximum record length was 65.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_TREE_SCORE):  ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file pubref lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("treepub",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;

NOTE: The file PUBREF is:
      Filename=C:\Users\Gaurav\Desktop\second sem\Data Mining\Project 1\Group13_Project1\Workspaces\EMWS1\Tree6\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=0,
      Last Modified=09Feb2017:19:40:29,
      Create Time=09Feb2017:19:40:00

NOTE: 216 records were written to the file PUBREF.
      The minimum record length was 1.
      The maximum record length was 65.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_TREE_SCORE):  ;
MPRINT(EM_TREE_SCORE):   filename treeflow;
NOTE: Fileref TREEFLOW has been deassigned.
MPRINT(EM_TREE_SCORE):   filename treepub;
NOTE: Fileref TREEPUB has been deassigned.
MPRINT(EM_TREE_SCORE):   data _null_;
MPRINT(EM_TREE_SCORE):   set EMWS1.Ids_LBWT_DM(where=(_TYPE_="DECPRIOR"));
MPRINT(EM_TREE_SCORE):   if USE="Y" then call symput('useAdjPriors', 'Y');
MPRINT(EM_TREE_SCORE):   run;

NOTE: There were 1 observations read from the data set EMWS1.IDS_LBWT_DM.
      WHERE _TYPE_='DECPRIOR';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_TREE_SCORE):   data _null_;
MPRINT(EM_TREE_SCORE):   file flowref mod;
MPRINT(EM_TREE_SCORE):   put 'drop _LEAF_;';
MPRINT(EM_TREE_SCORE):   run;

NOTE: The file FLOWREF is:
      Filename=C:\Users\Gaurav\Desktop\second sem\Data Mining\Project 1\Group13_Project1\Workspaces\EMWS1\Tree6\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=8602,
      Last Modified=09Feb2017:19:40:29,
      Create Time=09Feb2017:19:40:00

NOTE: 1 record was written to the file FLOWREF.
      The minimum record length was 12.
      The maximum record length was 12.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_TREE_SCORE):   data _null_;
MPRINT(EM_TREE_SCORE):   file pubref mod;
MPRINT(EM_TREE_SCORE):   put 'drop _LEAF_;';
MPRINT(EM_TREE_SCORE):   run;

NOTE: The file PUBREF is:
      Filename=C:\Users\Gaurav\Desktop\second sem\Data Mining\Project 1\Group13_Project1\Workspaces\EMWS1\Tree6\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=8039,
      Last Modified=09Feb2017:19:40:29,
      Create Time=09Feb2017:19:40:00

NOTE: 1 record was written to the file PUBREF.
      The minimum record length was 12.
      The maximum record length was 12.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_TREE_SCORE):   filename flowref;
NOTE: Fileref FLOWREF has been deassigned.
MPRINT(EM_TREE_SCORE):   filename pubref;
NOTE: Fileref PUBREF has been deassigned.
MPRINT(EM_METACHANGE):   data WORK.EM_METACHANGE;
MPRINT(EM_METACHANGE):   length KEY $32 DELETE $1 UNAME $32 ROLE $32 LEVEL $10 ORDER $8 COMMENT $64 LOWERLIMIT 8 UPPERLIMIT 8;
MPRINT(EM_METACHANGE):   KEY = upcase("CDELTA_TRAIN");
MPRINT(EM_METACHANGE):   UNAME = upcase("_NODE_");
MPRINT(EM_METACHANGE):   DELETE = upcase("N");
MPRINT(EM_METACHANGE):   ROLE = upcase("SEGMENT");
MPRINT(EM_METACHANGE):   LEVEL = upcase("NOMINAL");
MPRINT(EM_METACHANGE):   ORDER = upcase("");
MPRINT(EM_METACHANGE):   COMMENT = "";
MPRINT(EM_METACHANGE):   LOWERLIMIT = .;
MPRINT(EM_METACHANGE):   UPPERLIMIT = .;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   run;

NOTE: The data set WORK.EM_METACHANGE has 1 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_TREE_SCORE):  ;
MPRINT(EM_TREE_SCORE):  ;
MPRINT(EM_METACHANGE):   data WORK.EM_METACHANGE;
MPRINT(EM_METACHANGE):   set WORK.EM_METACHANGE end=eof;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   if eof then do;
MPRINT(EM_METACHANGE):   KEY = upcase("CDELTA_TRAIN");
MPRINT(EM_METACHANGE):   UNAME = upcase("FAGE                            ");
MPRINT(EM_METACHANGE):   DELETE = upcase("N");
MPRINT(EM_METACHANGE):   ROLE = upcase("REJECTED");
MPRINT(EM_METACHANGE):   LEVEL = upcase("");
MPRINT(EM_METACHANGE):   ORDER = upcase("");
MPRINT(EM_METACHANGE):   COMMENT = "";
MPRINT(EM_METACHANGE):   LOWERLIMIT = .;
MPRINT(EM_METACHANGE):   UPPERLIMIT = .;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   end;
MPRINT(EM_METACHANGE):   run;

NOTE: There were 1 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 2 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_TREE_SCORE):  ;
MPRINT(EM_METACHANGE):   data WORK.EM_METACHANGE;
MPRINT(EM_METACHANGE):   set WORK.EM_METACHANGE end=eof;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   if eof then do;
MPRINT(EM_METACHANGE):   KEY = upcase("CDELTA_TRAIN");
MPRINT(EM_METACHANGE):   UNAME = upcase("CIGNUM                          ");
MPRINT(EM_METACHANGE):   DELETE = upcase("N");
MPRINT(EM_METACHANGE):   ROLE = upcase("REJECTED");
MPRINT(EM_METACHANGE):   LEVEL = upcase("");
MPRINT(EM_METACHANGE):   ORDER = upcase("");
MPRINT(EM_METACHANGE):   COMMENT = "";
MPRINT(EM_METACHANGE):   LOWERLIMIT = .;
MPRINT(EM_METACHANGE):   UPPERLIMIT = .;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   end;
MPRINT(EM_METACHANGE):   run;

NOTE: There were 2 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 3 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_TREE_SCORE):  ;
MPRINT(EM_METACHANGE):   data WORK.EM_METACHANGE;
MPRINT(EM_METACHANGE):   set WORK.EM_METACHANGE end=eof;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   if eof then do;
MPRINT(EM_METACHANGE):   KEY = upcase("CDELTA_TRAIN");
MPRINT(EM_METACHANGE):   UNAME = upcase("DIABETES                        ");
MPRINT(EM_METACHANGE):   DELETE = upcase("N");
MPRINT(EM_METACHANGE):   ROLE = upcase("REJECTED");
MPRINT(EM_METACHANGE):   LEVEL = upcase("");
MPRINT(EM_METACHANGE):   ORDER = upcase("");
MPRINT(EM_METACHANGE):   COMMENT = "";
MPRINT(EM_METACHANGE):   LOWERLIMIT = .;
MPRINT(EM_METACHANGE):   UPPERLIMIT = .;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   end;
MPRINT(EM_METACHANGE):   run;

NOTE: There were 3 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 4 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_TREE_SCORE):  ;
MPRINT(EM_METACHANGE):   data WORK.EM_METACHANGE;
MPRINT(EM_METACHANGE):   set WORK.EM_METACHANGE end=eof;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   if eof then do;
MPRINT(EM_METACHANGE):   KEY = upcase("CDELTA_TRAIN");
MPRINT(EM_METACHANGE):   UNAME = upcase("TERMS                           ");
MPRINT(EM_METACHANGE):   DELETE = upcase("N");
MPRINT(EM_METACHANGE):   ROLE = upcase("REJECTED");
MPRINT(EM_METACHANGE):   LEVEL = upcase("");
MPRINT(EM_METACHANGE):   ORDER = upcase("");
MPRINT(EM_METACHANGE):   COMMENT = "";
MPRINT(EM_METACHANGE):   LOWERLIMIT = .;
MPRINT(EM_METACHANGE):   UPPERLIMIT = .;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   end;
MPRINT(EM_METACHANGE):   run;

NOTE: There were 4 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 5 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_TREE_SCORE):  ;
MPRINT(EM_METACHANGE):   data WORK.EM_METACHANGE;
MPRINT(EM_METACHANGE):   set WORK.EM_METACHANGE end=eof;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   if eof then do;
MPRINT(EM_METACHANGE):   KEY = upcase("CDELTA_TRAIN");
MPRINT(EM_METACHANGE):   UNAME = upcase("MAGE                            ");
MPRINT(EM_METACHANGE):   DELETE = upcase("N");
MPRINT(EM_METACHANGE):   ROLE = upcase("REJECTED");
MPRINT(EM_METACHANGE):   LEVEL = upcase("");
MPRINT(EM_METACHANGE):   ORDER = upcase("");
MPRINT(EM_METACHANGE):   COMMENT = "";
MPRINT(EM_METACHANGE):   LOWERLIMIT = .;
MPRINT(EM_METACHANGE):   UPPERLIMIT = .;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   end;
MPRINT(EM_METACHANGE):   run;

NOTE: There were 5 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 6 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_TREE_SCORE):  ;
MPRINT(EM_METACHANGE):   data WORK.EM_METACHANGE;
MPRINT(EM_METACHANGE):   set WORK.EM_METACHANGE end=eof;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   if eof then do;
MPRINT(EM_METACHANGE):   KEY = upcase("CDELTA_TRAIN");
MPRINT(EM_METACHANGE):   UNAME = upcase("YrsLastFetalDeath               ");
MPRINT(EM_METACHANGE):   DELETE = upcase("N");
MPRINT(EM_METACHANGE):   ROLE = upcase("REJECTED");
MPRINT(EM_METACHANGE):   LEVEL = upcase("");
MPRINT(EM_METACHANGE):   ORDER = upcase("");
MPRINT(EM_METACHANGE):   COMMENT = "";
MPRINT(EM_METACHANGE):   LOWERLIMIT = .;
MPRINT(EM_METACHANGE):   UPPERLIMIT = .;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   end;
MPRINT(EM_METACHANGE):   run;

NOTE: There were 6 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 7 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_TREE_SCORE):  ;
MPRINT(EM_METACHANGE):   data WORK.EM_METACHANGE;
MPRINT(EM_METACHANGE):   set WORK.EM_METACHANGE end=eof;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   if eof then do;
MPRINT(EM_METACHANGE):   KEY = upcase("CDELTA_TRAIN");
MPRINT(EM_METACHANGE):   UNAME = upcase("DRINKNUM                        ");
MPRINT(EM_METACHANGE):   DELETE = upcase("N");
MPRINT(EM_METACHANGE):   ROLE = upcase("REJECTED");
MPRINT(EM_METACHANGE):   LEVEL = upcase("");
MPRINT(EM_METACHANGE):   ORDER = upcase("");
MPRINT(EM_METACHANGE):   COMMENT = "";
MPRINT(EM_METACHANGE):   LOWERLIMIT = .;
MPRINT(EM_METACHANGE):   UPPERLIMIT = .;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   end;
MPRINT(EM_METACHANGE):   run;

NOTE: There were 7 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 8 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_TREE_SCORE):  ;
MPRINT(EM_METACHANGE):   data WORK.EM_METACHANGE;
MPRINT(EM_METACHANGE):   set WORK.EM_METACHANGE end=eof;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   if eof then do;
MPRINT(EM_METACHANGE):   KEY = upcase("CDELTA_TRAIN");
MPRINT(EM_METACHANGE):   UNAME = upcase("ACLUNG                          ");
MPRINT(EM_METACHANGE):   DELETE = upcase("N");
MPRINT(EM_METACHANGE):   ROLE = upcase("REJECTED");
MPRINT(EM_METACHANGE):   LEVEL = upcase("");
MPRINT(EM_METACHANGE):   ORDER = upcase("");
MPRINT(EM_METACHANGE):   COMMENT = "";
MPRINT(EM_METACHANGE):   LOWERLIMIT = .;
MPRINT(EM_METACHANGE):   UPPERLIMIT = .;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   end;
MPRINT(EM_METACHANGE):   run;

NOTE: There were 8 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 9 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_TREE_SCORE):  ;
MPRINT(EM_METACHANGE):   data WORK.EM_METACHANGE;
MPRINT(EM_METACHANGE):   set WORK.EM_METACHANGE end=eof;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   if eof then do;
MPRINT(EM_METACHANGE):   KEY = upcase("CDELTA_TRAIN");
MPRINT(EM_METACHANGE):   UNAME = upcase("AMNIO                           ");
MPRINT(EM_METACHANGE):   DELETE = upcase("N");
MPRINT(EM_METACHANGE):   ROLE = upcase("REJECTED");
MPRINT(EM_METACHANGE):   LEVEL = upcase("");
MPRINT(EM_METACHANGE):   ORDER = upcase("");
MPRINT(EM_METACHANGE):   COMMENT = "";
MPRINT(EM_METACHANGE):   LOWERLIMIT = .;
MPRINT(EM_METACHANGE):   UPPERLIMIT = .;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   end;
MPRINT(EM_METACHANGE):   run;

NOTE: There were 9 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 10 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_TREE_SCORE):  ;
MPRINT(EM_METACHANGE):   data WORK.EM_METACHANGE;
MPRINT(EM_METACHANGE):   set WORK.EM_METACHANGE end=eof;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   if eof then do;
MPRINT(EM_METACHANGE):   KEY = upcase("CDELTA_TRAIN");
MPRINT(EM_METACHANGE):   UNAME = upcase("ANEMIA                          ");
MPRINT(EM_METACHANGE):   DELETE = upcase("N");
MPRINT(EM_METACHANGE):   ROLE = upcase("REJECTED");
MPRINT(EM_METACHANGE):   LEVEL = upcase("");
MPRINT(EM_METACHANGE):   ORDER = upcase("");
MPRINT(EM_METACHANGE):   COMMENT = "";
MPRINT(EM_METACHANGE):   LOWERLIMIT = .;
MPRINT(EM_METACHANGE):   UPPERLIMIT = .;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   end;
MPRINT(EM_METACHANGE):   run;

NOTE: There were 10 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 11 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_TREE_SCORE):  ;
MPRINT(EM_METACHANGE):   data WORK.EM_METACHANGE;
MPRINT(EM_METACHANGE):   set WORK.EM_METACHANGE end=eof;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   if eof then do;
MPRINT(EM_METACHANGE):   KEY = upcase("CDELTA_TRAIN");
MPRINT(EM_METACHANGE):   UNAME = upcase("CARDIAC                         ");
MPRINT(EM_METACHANGE):   DELETE = upcase("N");
MPRINT(EM_METACHANGE):   ROLE = upcase("REJECTED");
MPRINT(EM_METACHANGE):   LEVEL = upcase("");
MPRINT(EM_METACHANGE):   ORDER = upcase("");
MPRINT(EM_METACHANGE):   COMMENT = "";
MPRINT(EM_METACHANGE):   LOWERLIMIT = .;
MPRINT(EM_METACHANGE):   UPPERLIMIT = .;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   end;
MPRINT(EM_METACHANGE):   run;

NOTE: There were 11 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 12 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_TREE_SCORE):  ;
MPRINT(EM_METACHANGE):   data WORK.EM_METACHANGE;
MPRINT(EM_METACHANGE):   set WORK.EM_METACHANGE end=eof;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   if eof then do;
MPRINT(EM_METACHANGE):   KEY = upcase("CDELTA_TRAIN");
MPRINT(EM_METACHANGE):   UNAME = upcase("PRENATAL                        ");
MPRINT(EM_METACHANGE):   DELETE = upcase("N");
MPRINT(EM_METACHANGE):   ROLE = upcase("REJECTED");
MPRINT(EM_METACHANGE):   LEVEL = upcase("");
MPRINT(EM_METACHANGE):   ORDER = upcase("");
MPRINT(EM_METACHANGE):   COMMENT = "";
MPRINT(EM_METACHANGE):   LOWERLIMIT = .;
MPRINT(EM_METACHANGE):   UPPERLIMIT = .;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   end;
MPRINT(EM_METACHANGE):   run;

NOTE: There were 12 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 13 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_TREE_SCORE):  ;
MPRINT(EM_METACHANGE):   data WORK.EM_METACHANGE;
MPRINT(EM_METACHANGE):   set WORK.EM_METACHANGE end=eof;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   if eof then do;
MPRINT(EM_METACHANGE):   KEY = upcase("CDELTA_TRAIN");
MPRINT(EM_METACHANGE):   UNAME = upcase("LOUTCOME                        ");
MPRINT(EM_METACHANGE):   DELETE = upcase("N");
MPRINT(EM_METACHANGE):   ROLE = upcase("REJECTED");
MPRINT(EM_METACHANGE):   LEVEL = upcase("");
MPRINT(EM_METACHANGE):   ORDER = upcase("");
MPRINT(EM_METACHANGE):   COMMENT = "";
MPRINT(EM_METACHANGE):   LOWERLIMIT = .;
MPRINT(EM_METACHANGE):   UPPERLIMIT = .;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   end;
MPRINT(EM_METACHANGE):   run;

NOTE: There were 13 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 14 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_TREE_SCORE):  ;
MPRINT(EM_METACHANGE):   data WORK.EM_METACHANGE;
MPRINT(EM_METACHANGE):   set WORK.EM_METACHANGE end=eof;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   if eof then do;
MPRINT(EM_METACHANGE):   KEY = upcase("CDELTA_TRAIN");
MPRINT(EM_METACHANGE):   UNAME = upcase("BDEAD                           ");
MPRINT(EM_METACHANGE):   DELETE = upcase("N");
MPRINT(EM_METACHANGE):   ROLE = upcase("REJECTED");
MPRINT(EM_METACHANGE):   LEVEL = upcase("");
MPRINT(EM_METACHANGE):   ORDER = upcase("");
MPRINT(EM_METACHANGE):   COMMENT = "";
MPRINT(EM_METACHANGE):   LOWERLIMIT = .;
MPRINT(EM_METACHANGE):   UPPERLIMIT = .;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   end;
MPRINT(EM_METACHANGE):   run;

NOTE: There were 14 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 15 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_TREE_SCORE):  ;
MPRINT(EM_METACHANGE):   data WORK.EM_METACHANGE;
MPRINT(EM_METACHANGE):   set WORK.EM_METACHANGE end=eof;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   if eof then do;
MPRINT(EM_METACHANGE):   KEY = upcase("CDELTA_TRAIN");
MPRINT(EM_METACHANGE):   UNAME = upcase("CHILDREN                        ");
MPRINT(EM_METACHANGE):   DELETE = upcase("N");
MPRINT(EM_METACHANGE):   ROLE = upcase("REJECTED");
MPRINT(EM_METACHANGE):   LEVEL = upcase("");
MPRINT(EM_METACHANGE):   ORDER = upcase("");
MPRINT(EM_METACHANGE):   COMMENT = "";
MPRINT(EM_METACHANGE):   LOWERLIMIT = .;
MPRINT(EM_METACHANGE):   UPPERLIMIT = .;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   end;
MPRINT(EM_METACHANGE):   run;

NOTE: There were 15 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 16 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_TREE_SCORE):  ;
MPRINT(EM_METACHANGE):   data WORK.EM_METACHANGE;
MPRINT(EM_METACHANGE):   set WORK.EM_METACHANGE end=eof;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   if eof then do;
MPRINT(EM_METACHANGE):   KEY = upcase("CDELTA_TRAIN");
MPRINT(EM_METACHANGE):   UNAME = upcase("ETHNICITYMOM                    ");
MPRINT(EM_METACHANGE):   DELETE = upcase("N");
MPRINT(EM_METACHANGE):   ROLE = upcase("REJECTED");
MPRINT(EM_METACHANGE):   LEVEL = upcase("");
MPRINT(EM_METACHANGE):   ORDER = upcase("");
MPRINT(EM_METACHANGE):   COMMENT = "";
MPRINT(EM_METACHANGE):   LOWERLIMIT = .;
MPRINT(EM_METACHANGE):   UPPERLIMIT = .;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   end;
MPRINT(EM_METACHANGE):   run;

NOTE: There were 16 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 17 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_TREE_SCORE):  ;
MPRINT(EM_METACHANGE):   data WORK.EM_METACHANGE;
MPRINT(EM_METACHANGE):   set WORK.EM_METACHANGE end=eof;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   if eof then do;
MPRINT(EM_METACHANGE):   KEY = upcase("CDELTA_TRAIN");
MPRINT(EM_METACHANGE):   UNAME = upcase("HEMOGLOB                        ");
MPRINT(EM_METACHANGE):   DELETE = upcase("N");
MPRINT(EM_METACHANGE):   ROLE = upcase("REJECTED");
MPRINT(EM_METACHANGE):   LEVEL = upcase("");
MPRINT(EM_METACHANGE):   ORDER = upcase("");
MPRINT(EM_METACHANGE):   COMMENT = "";
MPRINT(EM_METACHANGE):   LOWERLIMIT = .;
MPRINT(EM_METACHANGE):   UPPERLIMIT = .;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   end;
MPRINT(EM_METACHANGE):   run;

NOTE: There were 17 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 18 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_TREE_SCORE):  ;
MPRINT(EM_METACHANGE):   data WORK.EM_METACHANGE;
MPRINT(EM_METACHANGE):   set WORK.EM_METACHANGE end=eof;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   if eof then do;
MPRINT(EM_METACHANGE):   KEY = upcase("CDELTA_TRAIN");
MPRINT(EM_METACHANGE):   UNAME = upcase("HERPES                          ");
MPRINT(EM_METACHANGE):   DELETE = upcase("N");
MPRINT(EM_METACHANGE):   ROLE = upcase("REJECTED");
MPRINT(EM_METACHANGE):   LEVEL = upcase("");
MPRINT(EM_METACHANGE):   ORDER = upcase("");
MPRINT(EM_METACHANGE):   COMMENT = "";
MPRINT(EM_METACHANGE):   LOWERLIMIT = .;
MPRINT(EM_METACHANGE):   UPPERLIMIT = .;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   end;
MPRINT(EM_METACHANGE):   run;

NOTE: There were 18 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 19 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_TREE_SCORE):  ;
MPRINT(EM_METACHANGE):   data WORK.EM_METACHANGE;
MPRINT(EM_METACHANGE):   set WORK.EM_METACHANGE end=eof;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   if eof then do;
MPRINT(EM_METACHANGE):   KEY = upcase("CDELTA_TRAIN");
MPRINT(EM_METACHANGE):   UNAME = upcase("FEDUC                           ");
MPRINT(EM_METACHANGE):   DELETE = upcase("N");
MPRINT(EM_METACHANGE):   ROLE = upcase("REJECTED");
MPRINT(EM_METACHANGE):   LEVEL = upcase("");
MPRINT(EM_METACHANGE):   ORDER = upcase("");
MPRINT(EM_METACHANGE):   COMMENT = "";
MPRINT(EM_METACHANGE):   LOWERLIMIT = .;
MPRINT(EM_METACHANGE):   UPPERLIMIT = .;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   end;
MPRINT(EM_METACHANGE):   run;

NOTE: There were 19 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 20 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_TREE_SCORE):  ;
MPRINT(EM_METACHANGE):   data WORK.EM_METACHANGE;
MPRINT(EM_METACHANGE):   set WORK.EM_METACHANGE end=eof;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   if eof then do;
MPRINT(EM_METACHANGE):   KEY = upcase("CDELTA_TRAIN");
MPRINT(EM_METACHANGE):   UNAME = upcase("HYPERCH                         ");
MPRINT(EM_METACHANGE):   DELETE = upcase("N");
MPRINT(EM_METACHANGE):   ROLE = upcase("REJECTED");
MPRINT(EM_METACHANGE):   LEVEL = upcase("");
MPRINT(EM_METACHANGE):   ORDER = upcase("");
MPRINT(EM_METACHANGE):   COMMENT = "";
MPRINT(EM_METACHANGE):   LOWERLIMIT = .;
MPRINT(EM_METACHANGE):   UPPERLIMIT = .;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   end;
MPRINT(EM_METACHANGE):   run;

NOTE: There were 20 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 21 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_TREE_SCORE):  ;
MPRINT(EM_METACHANGE):   data WORK.EM_METACHANGE;
MPRINT(EM_METACHANGE):   set WORK.EM_METACHANGE end=eof;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   if eof then do;
MPRINT(EM_METACHANGE):   KEY = upcase("CDELTA_TRAIN");
MPRINT(EM_METACHANGE):   UNAME = upcase("MEDUC                           ");
MPRINT(EM_METACHANGE):   DELETE = upcase("N");
MPRINT(EM_METACHANGE):   ROLE = upcase("REJECTED");
MPRINT(EM_METACHANGE):   LEVEL = upcase("");
MPRINT(EM_METACHANGE):   ORDER = upcase("");
MPRINT(EM_METACHANGE):   COMMENT = "";
MPRINT(EM_METACHANGE):   LOWERLIMIT = .;
MPRINT(EM_METACHANGE):   UPPERLIMIT = .;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   end;
MPRINT(EM_METACHANGE):   run;

NOTE: There were 21 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 22 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_TREE_SCORE):  ;
MPRINT(EM_METACHANGE):   data WORK.EM_METACHANGE;
MPRINT(EM_METACHANGE):   set WORK.EM_METACHANGE end=eof;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   if eof then do;
MPRINT(EM_METACHANGE):   KEY = upcase("CDELTA_TRAIN");
MPRINT(EM_METACHANGE):   UNAME = upcase("CERVIX                          ");
MPRINT(EM_METACHANGE):   DELETE = upcase("N");
MPRINT(EM_METACHANGE):   ROLE = upcase("REJECTED");
MPRINT(EM_METACHANGE):   LEVEL = upcase("");
MPRINT(EM_METACHANGE):   ORDER = upcase("");
MPRINT(EM_METACHANGE):   COMMENT = "";
MPRINT(EM_METACHANGE):   LOWERLIMIT = .;
MPRINT(EM_METACHANGE):   UPPERLIMIT = .;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   end;
MPRINT(EM_METACHANGE):   run;

NOTE: There were 22 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 23 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_TREE_SCORE):  ;
MPRINT(EM_METACHANGE):   data WORK.EM_METACHANGE;
MPRINT(EM_METACHANGE):   set WORK.EM_METACHANGE end=eof;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   if eof then do;
MPRINT(EM_METACHANGE):   KEY = upcase("CDELTA_TRAIN");
MPRINT(EM_METACHANGE):   UNAME = upcase("PINFANT                         ");
MPRINT(EM_METACHANGE):   DELETE = upcase("N");
MPRINT(EM_METACHANGE):   ROLE = upcase("REJECTED");
MPRINT(EM_METACHANGE):   LEVEL = upcase("");
MPRINT(EM_METACHANGE):   ORDER = upcase("");
MPRINT(EM_METACHANGE):   COMMENT = "";
MPRINT(EM_METACHANGE):   LOWERLIMIT = .;
MPRINT(EM_METACHANGE):   UPPERLIMIT = .;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   end;
MPRINT(EM_METACHANGE):   run;

NOTE: There were 23 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 24 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_TREE_SCORE):  ;
MPRINT(EM_METACHANGE):   data WORK.EM_METACHANGE;
MPRINT(EM_METACHANGE):   set WORK.EM_METACHANGE end=eof;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   if eof then do;
MPRINT(EM_METACHANGE):   KEY = upcase("CDELTA_TRAIN");
MPRINT(EM_METACHANGE):   UNAME = upcase("TOTALP                          ");
MPRINT(EM_METACHANGE):   DELETE = upcase("N");
MPRINT(EM_METACHANGE):   ROLE = upcase("REJECTED");
MPRINT(EM_METACHANGE):   LEVEL = upcase("");
MPRINT(EM_METACHANGE):   ORDER = upcase("");
MPRINT(EM_METACHANGE):   COMMENT = "";
MPRINT(EM_METACHANGE):   LOWERLIMIT = .;
MPRINT(EM_METACHANGE):   UPPERLIMIT = .;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   end;
MPRINT(EM_METACHANGE):   run;

NOTE: There were 24 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 25 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_TREE_SCORE):  ;
MPRINT(EM_METACHANGE):   data WORK.EM_METACHANGE;
MPRINT(EM_METACHANGE):   set WORK.EM_METACHANGE end=eof;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   if eof then do;
MPRINT(EM_METACHANGE):   KEY = upcase("CDELTA_TRAIN");
MPRINT(EM_METACHANGE):   UNAME = upcase("RENAL                           ");
MPRINT(EM_METACHANGE):   DELETE = upcase("N");
MPRINT(EM_METACHANGE):   ROLE = upcase("REJECTED");
MPRINT(EM_METACHANGE):   LEVEL = upcase("");
MPRINT(EM_METACHANGE):   ORDER = upcase("");
MPRINT(EM_METACHANGE):   COMMENT = "";
MPRINT(EM_METACHANGE):   LOWERLIMIT = .;
MPRINT(EM_METACHANGE):   UPPERLIMIT = .;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   end;
MPRINT(EM_METACHANGE):   run;

NOTE: There were 25 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 26 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.06 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_TREE_SCORE):  ;
MPRINT(EM_METACHANGE):   data WORK.EM_METACHANGE;
MPRINT(EM_METACHANGE):   set WORK.EM_METACHANGE end=eof;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   if eof then do;
MPRINT(EM_METACHANGE):   KEY = upcase("CDELTA_TRAIN");
MPRINT(EM_METACHANGE):   UNAME = upcase("RHSEN                           ");
MPRINT(EM_METACHANGE):   DELETE = upcase("N");
MPRINT(EM_METACHANGE):   ROLE = upcase("REJECTED");
MPRINT(EM_METACHANGE):   LEVEL = upcase("");
MPRINT(EM_METACHANGE):   ORDER = upcase("");
MPRINT(EM_METACHANGE):   COMMENT = "";
MPRINT(EM_METACHANGE):   LOWERLIMIT = .;
MPRINT(EM_METACHANGE):   UPPERLIMIT = .;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   end;
MPRINT(EM_METACHANGE):   run;

NOTE: There were 26 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 27 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_TREE_SCORE):  ;
MPRINT(EM_METACHANGE):   data WORK.EM_METACHANGE;
MPRINT(EM_METACHANGE):   set WORK.EM_METACHANGE end=eof;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   if eof then do;
MPRINT(EM_METACHANGE):   KEY = upcase("CDELTA_TRAIN");
MPRINT(EM_METACHANGE):   UNAME = upcase("ULTRA                           ");
MPRINT(EM_METACHANGE):   DELETE = upcase("N");
MPRINT(EM_METACHANGE):   ROLE = upcase("REJECTED");
MPRINT(EM_METACHANGE):   LEVEL = upcase("");
MPRINT(EM_METACHANGE):   ORDER = upcase("");
MPRINT(EM_METACHANGE):   COMMENT = "";
MPRINT(EM_METACHANGE):   LOWERLIMIT = .;
MPRINT(EM_METACHANGE):   UPPERLIMIT = .;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   end;
MPRINT(EM_METACHANGE):   run;

NOTE: There were 27 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 28 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_TREE_SCORE):  ;
MPRINT(EM_METACHANGE):   data WORK.EM_METACHANGE;
MPRINT(EM_METACHANGE):   set WORK.EM_METACHANGE end=eof;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   if eof then do;
MPRINT(EM_METACHANGE):   KEY = upcase("CDELTA_TRAIN");
MPRINT(EM_METACHANGE):   UNAME = upcase("UTERINE                         ");
MPRINT(EM_METACHANGE):   DELETE = upcase("N");
MPRINT(EM_METACHANGE):   ROLE = upcase("REJECTED");
MPRINT(EM_METACHANGE):   LEVEL = upcase("");
MPRINT(EM_METACHANGE):   ORDER = upcase("");
MPRINT(EM_METACHANGE):   COMMENT = "";
MPRINT(EM_METACHANGE):   LOWERLIMIT = .;
MPRINT(EM_METACHANGE):   UPPERLIMIT = .;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   end;
MPRINT(EM_METACHANGE):   run;

NOTE: There were 28 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 29 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_TREE_SCORE):  ;
MPRINT(EM_METACHANGE):   data WORK.EM_METACHANGE;
MPRINT(EM_METACHANGE):   set WORK.EM_METACHANGE end=eof;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   if eof then do;
MPRINT(EM_METACHANGE):   KEY = upcase("CDELTA_TRAIN");
MPRINT(EM_METACHANGE):   UNAME = upcase("MARITAL                         ");
MPRINT(EM_METACHANGE):   DELETE = upcase("N");
MPRINT(EM_METACHANGE):   ROLE = upcase("REJECTED");
MPRINT(EM_METACHANGE):   LEVEL = upcase("");
MPRINT(EM_METACHANGE):   ORDER = upcase("");
MPRINT(EM_METACHANGE):   COMMENT = "";
MPRINT(EM_METACHANGE):   LOWERLIMIT = .;
MPRINT(EM_METACHANGE):   UPPERLIMIT = .;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   end;
MPRINT(EM_METACHANGE):   run;

NOTE: There were 29 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 30 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_TREE_SCORE):  ;
MPRINT(EM_METACHANGE):   data WORK.EM_METACHANGE;
MPRINT(EM_METACHANGE):   set WORK.EM_METACHANGE end=eof;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   if eof then do;
MPRINT(EM_METACHANGE):   KEY = upcase("CDELTA_TRAIN");
MPRINT(EM_METACHANGE):   UNAME = upcase("drinker                         ");
MPRINT(EM_METACHANGE):   DELETE = upcase("N");
MPRINT(EM_METACHANGE):   ROLE = upcase("REJECTED");
MPRINT(EM_METACHANGE):   LEVEL = upcase("");
MPRINT(EM_METACHANGE):   ORDER = upcase("");
MPRINT(EM_METACHANGE):   COMMENT = "";
MPRINT(EM_METACHANGE):   LOWERLIMIT = .;
MPRINT(EM_METACHANGE):   UPPERLIMIT = .;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   end;
MPRINT(EM_METACHANGE):   run;

NOTE: There were 30 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 31 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_TREE_SCORE):  ;
MPRINT(EM_TREE_SCORE):   data _null_;
MPRINT(EM_TREE_SCORE):   set EMWS1.Ids_LBWT_DM(where=(_TYPE_="PREDICTED")) end=eof;
MPRINT(EM_TREE_SCORE):   call symput('tree_pred_vars'!!strip(put(_N_, BEST.)), strip(VARIABLE));
MPRINT(EM_TREE_SCORE):   call symput('tree_pred_lvl'!!strip(put(_N_, BEST.)), strip(LEVEL));
MPRINT(EM_TREE_SCORE):   if eof then call symput('numpred', strip(put(_N_, BEST.)));
MPRINT(EM_TREE_SCORE):   run;

NOTE: There were 2 observations read from the data set EMWS1.IDS_LBWT_DM.
      WHERE _TYPE_='PREDICTED';
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_METACHANGE):   data WORK.EM_METACHANGE;
MPRINT(EM_METACHANGE):   set WORK.EM_METACHANGE end=eof;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   if eof then do;
MPRINT(EM_METACHANGE):   KEY = upcase("CDELTA_TRAIN");
MPRINT(EM_METACHANGE):   UNAME = upcase("Q_LBWT1");
MPRINT(EM_METACHANGE):   DELETE = upcase("N");
MPRINT(EM_METACHANGE):   ROLE = upcase("ASSESS");
MPRINT(EM_METACHANGE):   LEVEL = upcase("");
MPRINT(EM_METACHANGE):   ORDER = upcase("");
MPRINT(EM_METACHANGE):   COMMENT = "";
MPRINT(EM_METACHANGE):   LOWERLIMIT = .;
MPRINT(EM_METACHANGE):   UPPERLIMIT = .;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   end;
MPRINT(EM_METACHANGE):   run;

NOTE: There were 31 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 32 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_TREE_SCORE):  ;
MPRINT(EM_METACHANGE):   data WORK.EM_METACHANGE;
MPRINT(EM_METACHANGE):   set WORK.EM_METACHANGE end=eof;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   if eof then do;
MPRINT(EM_METACHANGE):   KEY = upcase("CDELTA_TRAIN");
MPRINT(EM_METACHANGE):   UNAME = upcase("Q_LBWT0");
MPRINT(EM_METACHANGE):   DELETE = upcase("N");
MPRINT(EM_METACHANGE):   ROLE = upcase("ASSESS");
MPRINT(EM_METACHANGE):   LEVEL = upcase("");
MPRINT(EM_METACHANGE):   ORDER = upcase("");
MPRINT(EM_METACHANGE):   COMMENT = "";
MPRINT(EM_METACHANGE):   LOWERLIMIT = .;
MPRINT(EM_METACHANGE):   UPPERLIMIT = .;
MPRINT(EM_METACHANGE):   output;
MPRINT(EM_METACHANGE):   end;
MPRINT(EM_METACHANGE):   run;

NOTE: There were 32 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 33 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_TREE_SCORE):  ;
MPRINT(EM_TREE_SCORE):  ;
MPRINT(EM_TREE_SCORE):   data _null_;
MPRINT(EM_TREE_SCORE):   set EMWS1.Tree6_OUTIMPORT (obs=2) end=eof;
MPRINT(EM_TREE_SCORE):   if eof then do ;
MPRINT(EM_TREE_SCORE):   call symput("em_tree_cvexists" , strip(put(cvimportance,best.))) ;
MPRINT(EM_TREE_SCORE):   call symput("em_tree_surrexists", strip(put(nsurrogates, best.)));
MPRINT(EM_TREE_SCORE):   end;
MPRINT(EM_TREE_SCORE):   run;

NOTE: Variable cvimportance is uninitialized.
NOTE: Variable nsurrogates is uninitialized.
NOTE: There were 2 observations read from the data set EMWS1.TREE6_OUTIMPORT.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_TREE_SCORE):   data EMWS1.Tree6_OUTIMPORT;
MPRINT(EM_TREE_SCORE):   set EMWS1.Tree6_OUTIMPORT;
MPRINT(EM_TREE_SCORE):   format importance 15.4 vimportance ratio 15.4 ;
MPRINT(EM_TREE_SCORE):   label NAME = "Variable Name" LABEL = "Label" NRULES = "Number of Splitting Rules" IMPORTANCE = "Importance" NSURROGATES = "Number of Surrogate Rules" VIMPORTANCE = "Validation Importance" RATIO = "Ratio of Validation to Training 
Importance" VIMPORTANCE = "Validation Importance" CVIMPORTANCE = "Relative Importance" CVRULES= "Number of Rules in CV Trees" RATIO = "Ratio of Validation to Training Importance" ;
MPRINT(EM_TREE_SCORE):   run;

NOTE: Variable NSURROGATES is uninitialized.
NOTE: Variable CVIMPORTANCE is uninitialized.
NOTE: Variable CVRULES is uninitialized.
NOTE: There were 37 observations read from the data set EMWS1.TREE6_OUTIMPORT.
NOTE: The data set EMWS1.TREE6_OUTIMPORT has 37 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT):   data WORK.EM_USER_REPORT;
MPRINT(EM_REPORT):   retain id 0;
MPRINT(EM_REPORT):   id + 1;
MPRINT(EM_REPORT):   length VIEW 8 NAME $32 VALUE $400;
MPRINT(EM_REPORT):   NAME = "KEY";
MPRINT(EM_REPORT):   VALUE = "OUTIMPORT";
MPRINT(EM_REPORT):   VIEW = 0.59907183963762;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VIEWTYPE";
MPRINT(EM_REPORT):   VALUE = "DATA";
MPRINT(EM_REPORT):   VIEW = 0.59907183963762;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "AUTODISPLAY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.59907183963762;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SPK";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.59907183963762;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COMPARE";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.59907183963762;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LOCALIZE";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.59907183963762;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZEROWX";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.59907183963762;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZEROWY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.59907183963762;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZECOLX";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.59907183963762;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZECOLY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.59907183963762;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NROWS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59907183963762;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NCOLS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59907183963762;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISCRETEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59907183963762;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISCRETEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59907183963762;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59907183963762;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59907183963762;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICETYPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59907183963762;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ABSOLUTEVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59907183963762;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SORTORDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59907183963762;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SORTORDERY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59907183963762;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ORIENTATION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59907183963762;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "METHOD";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59907183963762;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DIRECTION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59907183963762;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BYSET";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59907183963762;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "RENDERMODE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59907183963762;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DESCRIPTION";
MPRINT(EM_REPORT):   VALUE = "IMPORTANCE";
MPRINT(EM_REPORT):   VIEW = 0.59907183963762;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "X";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59907183963762;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EXCLUDEVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59907183963762;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Z";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59907183963762;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59907183963762;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59907183963762;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "AXIS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59907183963762;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQ";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59907183963762;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "GROUP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59907183963762;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SUBGROUP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59907183963762;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BLOCK";
MPRINT(EM_REPORT):   VALUE = "MODEL";
MPRINT(EM_REPORT):   VIEW = 0.59907183963762;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59907183963762;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COLORINDEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59907183963762;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TIPTEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59907183963762;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59907183963762;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TOOLTIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59907183963762;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "REPORTID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59907183963762;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "IDVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59907183963762;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59907183963762;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SIZE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59907183963762;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59907183963762;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59907183963762;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59907183963762;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VIEWS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59907183963762;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "PARENT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59907183963762;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59907183963762;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ABOVETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59907183963762;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BELOWTEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59907183963762;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESIZE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59907183963762;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "STATS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59907183963762;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "CLASSDIST";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59907183963762;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "INTDIST";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59907183963762;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FOLDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59907183963762;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YPLOTTYPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59907183963762;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XREF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59907183963762;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XREF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59907183963762;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YREF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59907183963762;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2REF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59907183963762;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YREF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59907183963762;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2REF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59907183963762;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "GROUPINDEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59907183963762;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "JOIN";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59907183963762;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59907183963762;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59907183963762;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59907183963762;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NAME";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59907183963762;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "HEIGHT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59907183963762;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "WIDTH";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59907183963762;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XAXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59907183963762;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2AXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59907183963762;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YAXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59907183963762;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISPLAYXLABEL";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.59907183963762;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISPLAYYLABEL";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.59907183963762;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "CHOICETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59907183963762;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SEGMENTVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59907183963762;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LOWERBAND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59907183963762;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "UPPERBAND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59907183963762;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YLINE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59907183963762;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKKEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59907183963762;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEKEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59907183963762;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59907183963762;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59907183963762;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODECOLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59907183963762;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESHAPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59907183963762;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESHAPEVAR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59907183963762;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODELABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59907183963762;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODETIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59907183963762;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59907183963762;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59907183963762;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59907183963762;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59907183963762;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKCOLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59907183963762;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKWIDTH";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59907183963762;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKTIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59907183963762;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59907183963762;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59907183963762;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59907183963762;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59907183963762;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "MATRIXVAR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59907183963762;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "RESPONSE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59907183963762;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SERIES";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59907183963762;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DESCARG";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59907183963762;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SLIDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59907183963762;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "MarkerSize";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59907183963762;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Marker";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59907183963762;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y1";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59907183963762;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59907183963762;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y3";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59907183963762;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y4";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59907183963762;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y5";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59907183963762;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y6";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59907183963762;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y7";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59907183963762;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y8";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59907183963762;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y9";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59907183963762;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y10";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59907183963762;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y11";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59907183963762;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y12";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59907183963762;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y13";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59907183963762;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y14";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59907183963762;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y15";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59907183963762;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y16";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59907183963762;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TITLE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59907183963762;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LEGEND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59907183963762;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LEGENDTITLE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59907183963762;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SHAPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59907183963762;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "METHOD";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59907183963762;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NOBINMISS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.59907183963762;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   run;

NOTE: The data set WORK.EM_USER_REPORT has 132 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_TREE_SCORE):  ;
MPRINT(MAIN):  ;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * End SCORE: Tree6;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
23577      
23578      *------------------------------------------------------------*;
23579      * End SCORE: Tree6;
23580      *------------------------------------------------------------*;

23581      proc sort data=WORK.EM_METACHANGE;
MPRINT(EM_DIAGRAM):    proc sort data=WORK.EM_METACHANGE;
23582      by key uname;
MPRINT(EM_DIAGRAM):   by key uname;
23583      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 33 observations and 9 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

23584      filename x "C:\Users\Gaurav\Desktop\second sem\Data Mining\Project 1\Group13_Project1\Workspaces\EMWS1\Tree6\CDELTA_TRAIN.sas";
MPRINT(EM_DIAGRAM):    filename x "C:\Users\Gaurav\Desktop\second sem\Data Mining\Project 1\Group13_Project1\Workspaces\EMWS1\Tree6\CDELTA_TRAIN.sas";
23585      data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
23586      file x;
MPRINT(EM_DIAGRAM):   file x;
23587      put 'if upcase(NAME) = "ACLUNG" then do;';
MPRINT(EM_DIAGRAM):   put 'if upcase(NAME) = "ACLUNG" then do;';
23588      put 'ROLE = "REJECTED";';
MPRINT(EM_DIAGRAM):   put 'ROLE = "REJECTED";';
23589      put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
23590      put 'else ';
MPRINT(EM_DIAGRAM):   put 'else ';
23591      put 'if upcase(NAME) = "AMNIO" then do;';
MPRINT(EM_DIAGRAM):   put 'if upcase(NAME) = "AMNIO" then do;';
23592      put 'ROLE = "REJECTED";';
MPRINT(EM_DIAGRAM):   put 'ROLE = "REJECTED";';
23593      put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
23594      put 'else ';
MPRINT(EM_DIAGRAM):   put 'else ';
23595      put 'if upcase(NAME) = "ANEMIA" then do;';
MPRINT(EM_DIAGRAM):   put 'if upcase(NAME) = "ANEMIA" then do;';
23596      put 'ROLE = "REJECTED";';
MPRINT(EM_DIAGRAM):   put 'ROLE = "REJECTED";';
23597      put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
23598      put 'else ';
MPRINT(EM_DIAGRAM):   put 'else ';
23599      put 'if upcase(NAME) = "BDEAD" then do;';
MPRINT(EM_DIAGRAM):   put 'if upcase(NAME) = "BDEAD" then do;';
23600      put 'ROLE = "REJECTED";';
MPRINT(EM_DIAGRAM):   put 'ROLE = "REJECTED";';
23601      put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
23602      put 'else ';
MPRINT(EM_DIAGRAM):   put 'else ';
23603      put 'if upcase(NAME) = "CARDIAC" then do;';
MPRINT(EM_DIAGRAM):   put 'if upcase(NAME) = "CARDIAC" then do;';
23604      put 'ROLE = "REJECTED";';
MPRINT(EM_DIAGRAM):   put 'ROLE = "REJECTED";';
23605      put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
23606      put 'else ';
MPRINT(EM_DIAGRAM):   put 'else ';
23607      put 'if upcase(NAME) = "CERVIX" then do;';
MPRINT(EM_DIAGRAM):   put 'if upcase(NAME) = "CERVIX" then do;';
23608      put 'ROLE = "REJECTED";';
MPRINT(EM_DIAGRAM):   put 'ROLE = "REJECTED";';
23609      put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
23610      put 'else ';
MPRINT(EM_DIAGRAM):   put 'else ';
23611      put 'if upcase(NAME) = "CHILDREN" then do;';
MPRINT(EM_DIAGRAM):   put 'if upcase(NAME) = "CHILDREN" then do;';
23612      put 'ROLE = "REJECTED";';
MPRINT(EM_DIAGRAM):   put 'ROLE = "REJECTED";';
23613      put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
23614      put 'else ';
MPRINT(EM_DIAGRAM):   put 'else ';
23615      put 'if upcase(NAME) = "CIGNUM" then do;';
MPRINT(EM_DIAGRAM):   put 'if upcase(NAME) = "CIGNUM" then do;';
23616      put 'ROLE = "REJECTED";';
MPRINT(EM_DIAGRAM):   put 'ROLE = "REJECTED";';
23617      put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
23618      put 'else ';
MPRINT(EM_DIAGRAM):   put 'else ';
23619      put 'if upcase(NAME) = "DIABETES" then do;';
MPRINT(EM_DIAGRAM):   put 'if upcase(NAME) = "DIABETES" then do;';
23620      put 'ROLE = "REJECTED";';
MPRINT(EM_DIAGRAM):   put 'ROLE = "REJECTED";';
23621      put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
23622      put 'else ';
MPRINT(EM_DIAGRAM):   put 'else ';
23623      put 'if upcase(NAME) = "DRINKER" then do;';
MPRINT(EM_DIAGRAM):   put 'if upcase(NAME) = "DRINKER" then do;';
23624      put 'ROLE = "REJECTED";';
MPRINT(EM_DIAGRAM):   put 'ROLE = "REJECTED";';
23625      put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
23626      put 'else ';
MPRINT(EM_DIAGRAM):   put 'else ';
23627      put 'if upcase(NAME) = "DRINKNUM" then do;';
MPRINT(EM_DIAGRAM):   put 'if upcase(NAME) = "DRINKNUM" then do;';
23628      put 'ROLE = "REJECTED";';
MPRINT(EM_DIAGRAM):   put 'ROLE = "REJECTED";';
23629      put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
23630      put 'else ';
MPRINT(EM_DIAGRAM):   put 'else ';
23631      put 'if upcase(NAME) = "ETHNICITYMOM" then do;';
MPRINT(EM_DIAGRAM):   put 'if upcase(NAME) = "ETHNICITYMOM" then do;';
23632      put 'ROLE = "REJECTED";';
MPRINT(EM_DIAGRAM):   put 'ROLE = "REJECTED";';
23633      put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
23634      put 'else ';
MPRINT(EM_DIAGRAM):   put 'else ';
23635      put 'if upcase(NAME) = "FAGE" then do;';
MPRINT(EM_DIAGRAM):   put 'if upcase(NAME) = "FAGE" then do;';
23636      put 'ROLE = "REJECTED";';
MPRINT(EM_DIAGRAM):   put 'ROLE = "REJECTED";';
23637      put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
23638      put 'else ';
MPRINT(EM_DIAGRAM):   put 'else ';
23639      put 'if upcase(NAME) = "FEDUC" then do;';
MPRINT(EM_DIAGRAM):   put 'if upcase(NAME) = "FEDUC" then do;';
23640      put 'ROLE = "REJECTED";';
MPRINT(EM_DIAGRAM):   put 'ROLE = "REJECTED";';
23641      put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
23642      put 'else ';
MPRINT(EM_DIAGRAM):   put 'else ';
23643      put 'if upcase(NAME) = "HEMOGLOB" then do;';
MPRINT(EM_DIAGRAM):   put 'if upcase(NAME) = "HEMOGLOB" then do;';
23644      put 'ROLE = "REJECTED";';
MPRINT(EM_DIAGRAM):   put 'ROLE = "REJECTED";';
23645      put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
23646      put 'else ';
MPRINT(EM_DIAGRAM):   put 'else ';
23647      put 'if upcase(NAME) = "HERPES" then do;';
MPRINT(EM_DIAGRAM):   put 'if upcase(NAME) = "HERPES" then do;';
23648      put 'ROLE = "REJECTED";';
MPRINT(EM_DIAGRAM):   put 'ROLE = "REJECTED";';
23649      put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
23650      put 'else ';
MPRINT(EM_DIAGRAM):   put 'else ';
23651      put 'if upcase(NAME) = "HYPERCH" then do;';
MPRINT(EM_DIAGRAM):   put 'if upcase(NAME) = "HYPERCH" then do;';
23652      put 'ROLE = "REJECTED";';
MPRINT(EM_DIAGRAM):   put 'ROLE = "REJECTED";';
23653      put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
23654      put 'else ';
MPRINT(EM_DIAGRAM):   put 'else ';
23655      put 'if upcase(NAME) = "LOUTCOME" then do;';
MPRINT(EM_DIAGRAM):   put 'if upcase(NAME) = "LOUTCOME" then do;';
23656      put 'ROLE = "REJECTED";';
MPRINT(EM_DIAGRAM):   put 'ROLE = "REJECTED";';
23657      put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
23658      put 'else ';
MPRINT(EM_DIAGRAM):   put 'else ';
23659      put 'if upcase(NAME) = "MAGE" then do;';
MPRINT(EM_DIAGRAM):   put 'if upcase(NAME) = "MAGE" then do;';
23660      put 'ROLE = "REJECTED";';
MPRINT(EM_DIAGRAM):   put 'ROLE = "REJECTED";';
23661      put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
23662      put 'else ';
MPRINT(EM_DIAGRAM):   put 'else ';
23663      put 'if upcase(NAME) = "MARITAL" then do;';
MPRINT(EM_DIAGRAM):   put 'if upcase(NAME) = "MARITAL" then do;';
23664      put 'ROLE = "REJECTED";';
MPRINT(EM_DIAGRAM):   put 'ROLE = "REJECTED";';
23665      put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
23666      put 'else ';
MPRINT(EM_DIAGRAM):   put 'else ';
23667      put 'if upcase(NAME) = "MEDUC" then do;';
MPRINT(EM_DIAGRAM):   put 'if upcase(NAME) = "MEDUC" then do;';
23668      put 'ROLE = "REJECTED";';
MPRINT(EM_DIAGRAM):   put 'ROLE = "REJECTED";';
23669      put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
23670      put 'else ';
MPRINT(EM_DIAGRAM):   put 'else ';
23671      put 'if upcase(NAME) = "PINFANT" then do;';
MPRINT(EM_DIAGRAM):   put 'if upcase(NAME) = "PINFANT" then do;';
23672      put 'ROLE = "REJECTED";';
MPRINT(EM_DIAGRAM):   put 'ROLE = "REJECTED";';
23673      put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
23674      put 'else ';
MPRINT(EM_DIAGRAM):   put 'else ';
23675      put 'if upcase(NAME) = "PRENATAL" then do;';
MPRINT(EM_DIAGRAM):   put 'if upcase(NAME) = "PRENATAL" then do;';
23676      put 'ROLE = "REJECTED";';
MPRINT(EM_DIAGRAM):   put 'ROLE = "REJECTED";';
23677      put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
23678      put 'else ';
MPRINT(EM_DIAGRAM):   put 'else ';
23679      put 'if upcase(NAME) = "Q_LBWT0" then do;';
MPRINT(EM_DIAGRAM):   put 'if upcase(NAME) = "Q_LBWT0" then do;';
23680      put 'ROLE = "ASSESS";';
MPRINT(EM_DIAGRAM):   put 'ROLE = "ASSESS";';
23681      put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
23682      put 'else ';
MPRINT(EM_DIAGRAM):   put 'else ';
23683      put 'if upcase(NAME) = "Q_LBWT1" then do;';
MPRINT(EM_DIAGRAM):   put 'if upcase(NAME) = "Q_LBWT1" then do;';
23684      put 'ROLE = "ASSESS";';
MPRINT(EM_DIAGRAM):   put 'ROLE = "ASSESS";';
23685      put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
23686      put 'else ';
MPRINT(EM_DIAGRAM):   put 'else ';
23687      put 'if upcase(NAME) = "RENAL" then do;';
MPRINT(EM_DIAGRAM):   put 'if upcase(NAME) = "RENAL" then do;';
23688      put 'ROLE = "REJECTED";';
MPRINT(EM_DIAGRAM):   put 'ROLE = "REJECTED";';
23689      put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
23690      put 'else ';
MPRINT(EM_DIAGRAM):   put 'else ';
23691      put 'if upcase(NAME) = "RHSEN" then do;';
MPRINT(EM_DIAGRAM):   put 'if upcase(NAME) = "RHSEN" then do;';
23692      put 'ROLE = "REJECTED";';
MPRINT(EM_DIAGRAM):   put 'ROLE = "REJECTED";';
23693      put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
23694      put 'else ';
MPRINT(EM_DIAGRAM):   put 'else ';
23695      put 'if upcase(NAME) = "TERMS" then do;';
MPRINT(EM_DIAGRAM):   put 'if upcase(NAME) = "TERMS" then do;';
23696      put 'ROLE = "REJECTED";';
MPRINT(EM_DIAGRAM):   put 'ROLE = "REJECTED";';
23697      put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
23698      put 'else ';
MPRINT(EM_DIAGRAM):   put 'else ';
23699      put 'if upcase(NAME) = "TOTALP" then do;';
MPRINT(EM_DIAGRAM):   put 'if upcase(NAME) = "TOTALP" then do;';
23700      put 'ROLE = "REJECTED";';
MPRINT(EM_DIAGRAM):   put 'ROLE = "REJECTED";';
23701      put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
23702      put 'else ';
MPRINT(EM_DIAGRAM):   put 'else ';
23703      put 'if upcase(NAME) = "ULTRA" then do;';
MPRINT(EM_DIAGRAM):   put 'if upcase(NAME) = "ULTRA" then do;';
23704      put 'ROLE = "REJECTED";';
MPRINT(EM_DIAGRAM):   put 'ROLE = "REJECTED";';
23705      put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
23706      put 'else ';
MPRINT(EM_DIAGRAM):   put 'else ';
23707      put 'if upcase(NAME) = "UTERINE" then do;';
MPRINT(EM_DIAGRAM):   put 'if upcase(NAME) = "UTERINE" then do;';
23708      put 'ROLE = "REJECTED";';
MPRINT(EM_DIAGRAM):   put 'ROLE = "REJECTED";';
23709      put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
23710      put 'else ';
MPRINT(EM_DIAGRAM):   put 'else ';
23711      put 'if upcase(NAME) = "YRSLASTFETALDEATH" then do;';
MPRINT(EM_DIAGRAM):   put 'if upcase(NAME) = "YRSLASTFETALDEATH" then do;';
23712      put 'ROLE = "REJECTED";';
MPRINT(EM_DIAGRAM):   put 'ROLE = "REJECTED";';
23713      put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
23714      put 'else ';
MPRINT(EM_DIAGRAM):   put 'else ';
23715      put 'if upcase(NAME) = "_NODE_" then do;';
MPRINT(EM_DIAGRAM):   put 'if upcase(NAME) = "_NODE_" then do;';
23716      put 'ROLE = "SEGMENT";';
MPRINT(EM_DIAGRAM):   put 'ROLE = "SEGMENT";';
23717      put 'LEVEL = "NOMINAL";';
MPRINT(EM_DIAGRAM):   put 'LEVEL = "NOMINAL";';
23718      put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
23719      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file X is:
      Filename=C:\Users\Gaurav\Desktop\second sem\Data Mining\Project 1\Group13_Project1\Workspaces\EMWS1\Tree6\CDELTA_TRAIN.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=0,
      Last Modified=09Feb2017:19:40:31,
      Create Time=09Feb2017:19:40:00

NOTE: 132 records were written to the file X.
      The minimum record length was 4.
      The maximum record length was 46.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

23720      filename x;
MPRINT(EM_DIAGRAM):   filename x;
NOTE: Fileref X has been deassigned.
23721      filename emflow "C:\Users\Gaurav\Desktop\second sem\Data Mining\Project 1\Group13_Project1\Workspaces\EMWS1\Tree6\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow "C:\Users\Gaurav\Desktop\second sem\Data Mining\Project 1\Group13_Project1\Workspaces\EMWS1\Tree6\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Tree6: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
23722      *------------------------------------------------------------*;
23723      * Tree6: Scoring DATA data;
23724      *------------------------------------------------------------*;
23725      data EMWS1.Tree6_TRAIN
23726      / view=EMWS1.Tree6_TRAIN
23727      ;
MPRINT(EM_DIAGRAM):   data EMWS1.Tree6_TRAIN / view=EMWS1.Tree6_TRAIN ;
23728      set EMWS1.Part_TRAIN
23729      ;
MPRINT(EM_DIAGRAM):   set EMWS1.Part_TRAIN ;
23730      %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file C:\Users\Gaurav\Desktop\second sem\Data Mining\Project 1\Group13_Project1\Workspaces\EMWS1\Tree6\EMFLOWSCORE.sas.
23731     +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
23732     +******             DECISION TREE SCORING CODE             ******;
MPRINT(EM_DIAGRAM):   ****** DECISION TREE SCORING CODE ******;
23733     +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
23734     +
23735     +******         LENGTHS OF NEW CHARACTER VARIABLES         ******;
MPRINT(EM_DIAGRAM):   ****** LENGTHS OF NEW CHARACTER VARIABLES ******;
23736     +LENGTH F_LBWT  $   12;
MPRINT(EM_DIAGRAM):   LENGTH F_LBWT $ 12;
23737     +LENGTH I_LBWT  $   12;
MPRINT(EM_DIAGRAM):   LENGTH I_LBWT $ 12;
23738     +LENGTH _WARN_  $    4;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $ 4;
23739     +
23740     +******              LABELS FOR NEW VARIABLES              ******;
MPRINT(EM_DIAGRAM):   ****** LABELS FOR NEW VARIABLES ******;
23741     +label _NODE_ = 'Node' ;
MPRINT(EM_DIAGRAM):   label _NODE_ = 'Node' ;
23742     +label _LEAF_ = 'Leaf' ;
MPRINT(EM_DIAGRAM):   label _LEAF_ = 'Leaf' ;
23743     +label P_LBWT0 = 'Predicted: LBWT=0' ;
MPRINT(EM_DIAGRAM):   label P_LBWT0 = 'Predicted: LBWT=0' ;
23744     +label P_LBWT1 = 'Predicted: LBWT=1' ;
MPRINT(EM_DIAGRAM):   label P_LBWT1 = 'Predicted: LBWT=1' ;
23745     +label Q_LBWT0 = 'Unadjusted P: LBWT=0' ;
MPRINT(EM_DIAGRAM):   label Q_LBWT0 = 'Unadjusted P: LBWT=0' ;
23746     +label Q_LBWT1 = 'Unadjusted P: LBWT=1' ;
MPRINT(EM_DIAGRAM):   label Q_LBWT1 = 'Unadjusted P: LBWT=1' ;
23747     +label V_LBWT0 = 'Validated: LBWT=0' ;
MPRINT(EM_DIAGRAM):   label V_LBWT0 = 'Validated: LBWT=0' ;
23748     +label V_LBWT1 = 'Validated: LBWT=1' ;
MPRINT(EM_DIAGRAM):   label V_LBWT1 = 'Validated: LBWT=1' ;
23749     +label R_LBWT0 = 'Residual: LBWT=0' ;
MPRINT(EM_DIAGRAM):   label R_LBWT0 = 'Residual: LBWT=0' ;
23750     +label R_LBWT1 = 'Residual: LBWT=1' ;
MPRINT(EM_DIAGRAM):   label R_LBWT1 = 'Residual: LBWT=1' ;
23751     +label F_LBWT = 'From: LBWT' ;
MPRINT(EM_DIAGRAM):   label F_LBWT = 'From: LBWT' ;
23752     +label I_LBWT = 'Into: LBWT' ;
MPRINT(EM_DIAGRAM):   label I_LBWT = 'Into: LBWT' ;
23753     +label U_LBWT = 'Unnormalized Into: LBWT' ;
MPRINT(EM_DIAGRAM):   label U_LBWT = 'Unnormalized Into: LBWT' ;
23754     +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
23755     +
23756     +
23757     +******      TEMPORARY VARIABLES FOR FORMATTED VALUES      ******;
MPRINT(EM_DIAGRAM):   ****** TEMPORARY VARIABLES FOR FORMATTED VALUES ******;
23758     +LENGTH _ARBFMT_12 $     12; DROP _ARBFMT_12;
MPRINT(EM_DIAGRAM):   LENGTH _ARBFMT_12 $ 12;
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_12;
23759     +_ARBFMT_12 = ' '; /* Initialize to avoid warning. */
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = ' ';
23760     +
23761     +
23762     +_ARBFMT_12 = PUT( LBWT , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( LBWT , BEST12.);
23763     + %DMNORMCP( _ARBFMT_12, F_LBWT );
MPRINT(DMNORMCP):   F_LBWT=dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   ****** ASSIGN OBSERVATION TO NODE ******;
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( ETHNICITYDAD , BEST12.);
23764     +
23765     +******             ASSIGN OBSERVATION TO NODE             ******;
23766     +_ARBFMT_12 = PUT( ETHNICITYDAD , BEST12.);
23767     + %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('9' ,'5' ,'2' ) THEN DO;
MPRINT(EM_DIAGRAM):   _NODE_ = 2;
MPRINT(EM_DIAGRAM):   _LEAF_ = 1;
MPRINT(EM_DIAGRAM):   P_LBWT0 = 0.37105643994211;
MPRINT(EM_DIAGRAM):   P_LBWT1 = 0.62894356005788;
23768     +IF _ARBFMT_12 IN ('9' ,'5' ,'2' ) THEN DO;
MPRINT(EM_DIAGRAM):   Q_LBWT0 = 0.37105643994211;
23769     +  _NODE_  =                    2;
MPRINT(EM_DIAGRAM):   Q_LBWT1 = 0.62894356005788;
23770     +  _LEAF_  =                    1;
MPRINT(EM_DIAGRAM):   V_LBWT0 = 0.38846480067854;
23771     +  P_LBWT0  =     0.37105643994211;
MPRINT(EM_DIAGRAM):   V_LBWT1 = 0.61153519932145;
23772     +  P_LBWT1  =     0.62894356005788;
MPRINT(EM_DIAGRAM):   I_LBWT = '1' ;
23773     +  Q_LBWT0  =     0.37105643994211;
MPRINT(EM_DIAGRAM):   U_LBWT = 1;
23774     +  Q_LBWT1  =     0.62894356005788;
MPRINT(EM_DIAGRAM):   END;
23775     +  V_LBWT0  =     0.38846480067854;
23776     +  V_LBWT1  =     0.61153519932145;
MPRINT(EM_DIAGRAM):   ELSE DO;
23777     +  I_LBWT  = '1' ;
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( HYPERPR , BEST12.);
23778     +  U_LBWT  =                    1;
23779     +  END;
23780     +ELSE DO;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
23781     +  _ARBFMT_12 = PUT( HYPERPR , BEST12.);
23782     +   %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('1' ) THEN DO;
MPRINT(EM_DIAGRAM):   _NODE_ = 6;
MPRINT(EM_DIAGRAM):   _LEAF_ = 2;
MPRINT(EM_DIAGRAM):   P_LBWT0 = 0.26923076923076;
MPRINT(EM_DIAGRAM):   P_LBWT1 = 0.73076923076923;
23783     +  IF _ARBFMT_12 IN ('1' ) THEN DO;
MPRINT(EM_DIAGRAM):   Q_LBWT0 = 0.26923076923076;
23784     +    _NODE_  =                    6;
MPRINT(EM_DIAGRAM):   Q_LBWT1 = 0.73076923076923;
23785     +    _LEAF_  =                    2;
MPRINT(EM_DIAGRAM):   V_LBWT0 = 0.26896551724137;
23786     +    P_LBWT0  =     0.26923076923076;
MPRINT(EM_DIAGRAM):   V_LBWT1 = 0.73103448275862;
23787     +    P_LBWT1  =     0.73076923076923;
MPRINT(EM_DIAGRAM):   I_LBWT = '1' ;
23788     +    Q_LBWT0  =     0.26923076923076;
MPRINT(EM_DIAGRAM):   U_LBWT = 1;
23789     +    Q_LBWT1  =     0.73076923076923;
MPRINT(EM_DIAGRAM):   END;
23790     +    V_LBWT0  =     0.26896551724137;
23791     +    V_LBWT1  =     0.73103448275862;
MPRINT(EM_DIAGRAM):   ELSE DO;
23792     +    I_LBWT  = '1' ;
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( smoker , BEST12.);
23793     +    U_LBWT  =                    1;
23794     +    END;
23795     +  ELSE DO;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
23796     +    _ARBFMT_12 = PUT( smoker , BEST12.);
23797     +     %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('0' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(YrsLastLiveBirth ) AND 1.5 <= YrsLastLiveBirth AND YrsLastLiveBirth < 3.5 THEN DO;
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( PRETERM , BEST12.);
23798     +    IF _ARBFMT_12 IN ('0' ) THEN DO;
23799     +      IF  NOT MISSING(YrsLastLiveBirth ) AND
23800     +                         1.5 <= YrsLastLiveBirth  AND
23801     +        YrsLastLiveBirth  <                  3.5 THEN DO;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
23802     +        _ARBFMT_12 = PUT( PRETERM , BEST12.);
23803     +         %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('1' ) THEN DO;
MPRINT(EM_DIAGRAM):   _NODE_ = 31;
MPRINT(EM_DIAGRAM):   _LEAF_ = 7;
MPRINT(EM_DIAGRAM):   P_LBWT0 = 0.375;
MPRINT(EM_DIAGRAM):   P_LBWT1 = 0.625;
23804     +        IF _ARBFMT_12 IN ('1' ) THEN DO;
MPRINT(EM_DIAGRAM):   Q_LBWT0 = 0.375;
23805     +          _NODE_  =                   31;
MPRINT(EM_DIAGRAM):   Q_LBWT1 = 0.625;
23806     +          _LEAF_  =                    7;
MPRINT(EM_DIAGRAM):   V_LBWT0 = 0.375;
23807     +          P_LBWT0  =                0.375;
MPRINT(EM_DIAGRAM):   V_LBWT1 = 0.625;
23808     +          P_LBWT1  =                0.625;
MPRINT(EM_DIAGRAM):   I_LBWT = '1' ;
23809     +          Q_LBWT0  =                0.375;
MPRINT(EM_DIAGRAM):   U_LBWT = 1;
23810     +          Q_LBWT1  =                0.625;
MPRINT(EM_DIAGRAM):   END;
23811     +          V_LBWT0  =                0.375;
23812     +          V_LBWT1  =                0.625;
MPRINT(EM_DIAGRAM):   ELSE DO;
23813     +          I_LBWT  = '1' ;
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( HYDRAM , BEST12.);
23814     +          U_LBWT  =                    1;
23815     +          END;
23816     +        ELSE DO;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
23817     +          _ARBFMT_12 = PUT( HYDRAM , BEST12.);
23818     +           %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('1' ) THEN DO;
MPRINT(EM_DIAGRAM):   _NODE_ = 39;
MPRINT(EM_DIAGRAM):   _LEAF_ = 8;
MPRINT(EM_DIAGRAM):   P_LBWT0 = 0.45;
MPRINT(EM_DIAGRAM):   P_LBWT1 = 0.55;
23819     +          IF _ARBFMT_12 IN ('1' ) THEN DO;
MPRINT(EM_DIAGRAM):   Q_LBWT0 = 0.45;
23820     +            _NODE_  =                   39;
MPRINT(EM_DIAGRAM):   Q_LBWT1 = 0.55;
23821     +            _LEAF_  =                    8;
MPRINT(EM_DIAGRAM):   V_LBWT0 = 0.44444444444444;
23822     +            P_LBWT0  =                 0.45;
MPRINT(EM_DIAGRAM):   V_LBWT1 = 0.55555555555555;
23823     +            P_LBWT1  =                 0.55;
MPRINT(EM_DIAGRAM):   I_LBWT = '1' ;
23824     +            Q_LBWT0  =                 0.45;
MPRINT(EM_DIAGRAM):   U_LBWT = 1;
23825     +            Q_LBWT1  =                 0.55;
MPRINT(EM_DIAGRAM):   END;
23826     +            V_LBWT0  =     0.44444444444444;
23827     +            V_LBWT1  =     0.55555555555555;
MPRINT(EM_DIAGRAM):   ELSE DO;
23828     +            I_LBWT  = '1' ;
MPRINT(EM_DIAGRAM):   _NODE_ = 40;
23829     +            U_LBWT  =                    1;
MPRINT(EM_DIAGRAM):   _LEAF_ = 9;
23830     +            END;
MPRINT(EM_DIAGRAM):   P_LBWT0 = 0.78947368421052;
23831     +          ELSE DO;
MPRINT(EM_DIAGRAM):   P_LBWT1 = 0.21052631578947;
MPRINT(EM_DIAGRAM):   Q_LBWT0 = 0.78947368421052;
23832     +            _NODE_  =                   40;
MPRINT(EM_DIAGRAM):   Q_LBWT1 = 0.21052631578947;
23833     +            _LEAF_  =                    9;
MPRINT(EM_DIAGRAM):   V_LBWT0 = 0.76844494892168;
23834     +            P_LBWT0  =     0.78947368421052;
MPRINT(EM_DIAGRAM):   V_LBWT1 = 0.23155505107832;
23835     +            P_LBWT1  =     0.21052631578947;
MPRINT(EM_DIAGRAM):   I_LBWT = '0' ;
23836     +            Q_LBWT0  =     0.78947368421052;
MPRINT(EM_DIAGRAM):   U_LBWT = 0;
23837     +            Q_LBWT1  =     0.21052631578947;
MPRINT(EM_DIAGRAM):   END;
23838     +            V_LBWT0  =     0.76844494892168;
MPRINT(EM_DIAGRAM):   END;
23839     +            V_LBWT1  =     0.23155505107832;
MPRINT(EM_DIAGRAM):   END;
23840     +            I_LBWT  = '0' ;
23841     +            U_LBWT  =                    0;
23842     +            END;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(YrsLastLiveBirth ) AND 3.5 <= YrsLastLiveBirth THEN DO;
23843     +          END;
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( ECLAMP , BEST12.);
23844     +        END;
23845     +      ELSE IF  NOT MISSING(YrsLastLiveBirth ) AND
23846     +                         3.5 <= YrsLastLiveBirth  THEN DO;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
23847     +        _ARBFMT_12 = PUT( ECLAMP , BEST12.);
23848     +         %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('1' ) THEN DO;
MPRINT(EM_DIAGRAM):   _NODE_ = 33;
MPRINT(EM_DIAGRAM):   _LEAF_ = 10;
MPRINT(EM_DIAGRAM):   P_LBWT0 = 0;
MPRINT(EM_DIAGRAM):   P_LBWT1 = 1;
23849     +        IF _ARBFMT_12 IN ('1' ) THEN DO;
MPRINT(EM_DIAGRAM):   Q_LBWT0 = 0;
23850     +          _NODE_  =                   33;
MPRINT(EM_DIAGRAM):   Q_LBWT1 = 1;
23851     +          _LEAF_  =                   10;
MPRINT(EM_DIAGRAM):   V_LBWT0 = 0.2;
23852     +          P_LBWT0  =                    0;
MPRINT(EM_DIAGRAM):   V_LBWT1 = 0.8;
23853     +          P_LBWT1  =                    1;
MPRINT(EM_DIAGRAM):   I_LBWT = '1' ;
23854     +          Q_LBWT0  =                    0;
MPRINT(EM_DIAGRAM):   U_LBWT = 1;
23855     +          Q_LBWT1  =                    1;
MPRINT(EM_DIAGRAM):   END;
23856     +          V_LBWT0  =                  0.2;
23857     +          V_LBWT1  =                  0.8;
MPRINT(EM_DIAGRAM):   ELSE DO;
23858     +          I_LBWT  = '1' ;
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( HYDRAM , BEST12.);
23859     +          U_LBWT  =                    1;
23860     +          END;
23861     +        ELSE DO;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
23862     +          _ARBFMT_12 = PUT( HYDRAM , BEST12.);
23863     +           %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('1' ) THEN DO;
MPRINT(EM_DIAGRAM):   _NODE_ = 41;
MPRINT(EM_DIAGRAM):   _LEAF_ = 11;
MPRINT(EM_DIAGRAM):   P_LBWT0 = 0.28;
MPRINT(EM_DIAGRAM):   P_LBWT1 = 0.72;
23864     +          IF _ARBFMT_12 IN ('1' ) THEN DO;
MPRINT(EM_DIAGRAM):   Q_LBWT0 = 0.28;
23865     +            _NODE_  =                   41;
MPRINT(EM_DIAGRAM):   Q_LBWT1 = 0.72;
23866     +            _LEAF_  =                   11;
MPRINT(EM_DIAGRAM):   V_LBWT0 = 0.17391304347826;
23867     +            P_LBWT0  =                 0.28;
MPRINT(EM_DIAGRAM):   V_LBWT1 = 0.82608695652173;
23868     +            P_LBWT1  =                 0.72;
MPRINT(EM_DIAGRAM):   I_LBWT = '1' ;
23869     +            Q_LBWT0  =                 0.28;
MPRINT(EM_DIAGRAM):   U_LBWT = 1;
23870     +            Q_LBWT1  =                 0.72;
MPRINT(EM_DIAGRAM):   END;
23871     +            V_LBWT0  =     0.17391304347826;
23872     +            V_LBWT1  =     0.82608695652173;
MPRINT(EM_DIAGRAM):   ELSE DO;
23873     +            I_LBWT  = '1' ;
MPRINT(EM_DIAGRAM):   _NODE_ = 42;
23874     +            U_LBWT  =                    1;
MPRINT(EM_DIAGRAM):   _LEAF_ = 12;
23875     +            END;
MPRINT(EM_DIAGRAM):   P_LBWT0 = 0.7076167076167;
23876     +          ELSE DO;
MPRINT(EM_DIAGRAM):   P_LBWT1 = 0.29238329238329;
MPRINT(EM_DIAGRAM):   Q_LBWT0 = 0.7076167076167;
23877     +            _NODE_  =                   42;
MPRINT(EM_DIAGRAM):   Q_LBWT1 = 0.29238329238329;
23878     +            _LEAF_  =                   12;
MPRINT(EM_DIAGRAM):   V_LBWT0 = 0.72417982989064;
23879     +            P_LBWT0  =      0.7076167076167;
MPRINT(EM_DIAGRAM):   V_LBWT1 = 0.27582017010935;
23880     +            P_LBWT1  =     0.29238329238329;
MPRINT(EM_DIAGRAM):   I_LBWT = '0' ;
23881     +            Q_LBWT0  =      0.7076167076167;
MPRINT(EM_DIAGRAM):   U_LBWT = 0;
23882     +            Q_LBWT1  =     0.29238329238329;
MPRINT(EM_DIAGRAM):   END;
23883     +            V_LBWT0  =     0.72417982989064;
MPRINT(EM_DIAGRAM):   END;
23884     +            V_LBWT1  =     0.27582017010935;
MPRINT(EM_DIAGRAM):   END;
23885     +            I_LBWT  = '0' ;
23886     +            U_LBWT  =                    0;
MPRINT(EM_DIAGRAM):   ELSE DO;
23887     +            END;
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( HYDRAM , BEST12.);
23888     +          END;
23889     +        END;
23890     +      ELSE DO;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
23891     +        _ARBFMT_12 = PUT( HYDRAM , BEST12.);
23892     +         %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('1' ) THEN DO;
MPRINT(EM_DIAGRAM):   _NODE_ = 29;
MPRINT(EM_DIAGRAM):   _LEAF_ = 4;
MPRINT(EM_DIAGRAM):   P_LBWT0 = 0.22857142857142;
MPRINT(EM_DIAGRAM):   P_LBWT1 = 0.77142857142857;
23893     +        IF _ARBFMT_12 IN ('1' ) THEN DO;
MPRINT(EM_DIAGRAM):   Q_LBWT0 = 0.22857142857142;
23894     +          _NODE_  =                   29;
MPRINT(EM_DIAGRAM):   Q_LBWT1 = 0.77142857142857;
23895     +          _LEAF_  =                    4;
MPRINT(EM_DIAGRAM):   V_LBWT0 = 0.26530612244897;
23896     +          P_LBWT0  =     0.22857142857142;
MPRINT(EM_DIAGRAM):   V_LBWT1 = 0.73469387755102;
23897     +          P_LBWT1  =     0.77142857142857;
MPRINT(EM_DIAGRAM):   I_LBWT = '1' ;
23898     +          Q_LBWT0  =     0.22857142857142;
MPRINT(EM_DIAGRAM):   U_LBWT = 1;
23899     +          Q_LBWT1  =     0.77142857142857;
MPRINT(EM_DIAGRAM):   END;
23900     +          V_LBWT0  =     0.26530612244897;
23901     +          V_LBWT1  =     0.73469387755102;
MPRINT(EM_DIAGRAM):   ELSE DO;
23902     +          I_LBWT  = '1' ;
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( ECLAMP , BEST12.);
23903     +          U_LBWT  =                    1;
23904     +          END;
23905     +        ELSE DO;
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
23906     +          _ARBFMT_12 = PUT( ECLAMP , BEST12.);
23907     +           %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('1' ) THEN DO;
MPRINT(EM_DIAGRAM):   _NODE_ = 38;
MPRINT(EM_DIAGRAM):   _LEAF_ = 6;
MPRINT(EM_DIAGRAM):   P_LBWT0 = 0.05263157894736;
MPRINT(EM_DIAGRAM):   P_LBWT1 = 0.94736842105263;
23908     +          IF _ARBFMT_12 IN ('1' ) THEN DO;
MPRINT(EM_DIAGRAM):   Q_LBWT0 = 0.05263157894736;
23909     +            _NODE_  =                   38;
MPRINT(EM_DIAGRAM):   Q_LBWT1 = 0.94736842105263;
23910     +            _LEAF_  =                    6;
MPRINT(EM_DIAGRAM):   V_LBWT0 = 0.09375;
23911     +            P_LBWT0  =     0.05263157894736;
MPRINT(EM_DIAGRAM):   V_LBWT1 = 0.90625;
23912     +            P_LBWT1  =     0.94736842105263;
MPRINT(EM_DIAGRAM):   I_LBWT = '1' ;
23913     +            Q_LBWT0  =     0.05263157894736;
MPRINT(EM_DIAGRAM):   U_LBWT = 1;
23914     +            Q_LBWT1  =     0.94736842105263;
MPRINT(EM_DIAGRAM):   END;
23915     +            V_LBWT0  =              0.09375;
23916     +            V_LBWT1  =              0.90625;
MPRINT(EM_DIAGRAM):   ELSE DO;
23917     +            I_LBWT  = '1' ;
MPRINT(EM_DIAGRAM):   _NODE_ = 37;
23918     +            U_LBWT  =                    1;
MPRINT(EM_DIAGRAM):   _LEAF_ = 5;
23919     +            END;
MPRINT(EM_DIAGRAM):   P_LBWT0 = 0.6065239551478;
23920     +          ELSE DO;
MPRINT(EM_DIAGRAM):   P_LBWT1 = 0.39347604485219;
MPRINT(EM_DIAGRAM):   Q_LBWT0 = 0.6065239551478;
23921     +            _NODE_  =                   37;
MPRINT(EM_DIAGRAM):   Q_LBWT1 = 0.39347604485219;
23922     +            _LEAF_  =                    5;
MPRINT(EM_DIAGRAM):   V_LBWT0 = 0.60348468848996;
23923     +            P_LBWT0  =      0.6065239551478;
MPRINT(EM_DIAGRAM):   V_LBWT1 = 0.39651531151003;
23924     +            P_LBWT1  =     0.39347604485219;
MPRINT(EM_DIAGRAM):   I_LBWT = '0' ;
23925     +            Q_LBWT0  =      0.6065239551478;
MPRINT(EM_DIAGRAM):   U_LBWT = 0;
23926     +            Q_LBWT1  =     0.39347604485219;
MPRINT(EM_DIAGRAM):   END;
23927     +            V_LBWT0  =     0.60348468848996;
MPRINT(EM_DIAGRAM):   END;
23928     +            V_LBWT1  =     0.39651531151003;
MPRINT(EM_DIAGRAM):   END;
23929     +            I_LBWT  = '0' ;
MPRINT(EM_DIAGRAM):   END;
23930     +            U_LBWT  =                    0;
23931     +            END;
MPRINT(EM_DIAGRAM):   ELSE DO;
23932     +          END;
MPRINT(EM_DIAGRAM):   _NODE_ = 12;
23933     +        END;
MPRINT(EM_DIAGRAM):   _LEAF_ = 3;
23934     +      END;
MPRINT(EM_DIAGRAM):   P_LBWT0 = 0.43401015228426;
23935     +    ELSE DO;
MPRINT(EM_DIAGRAM):   P_LBWT1 = 0.56598984771573;
MPRINT(EM_DIAGRAM):   Q_LBWT0 = 0.43401015228426;
23936     +      _NODE_  =                   12;
MPRINT(EM_DIAGRAM):   Q_LBWT1 = 0.56598984771573;
23937     +      _LEAF_  =                    3;
MPRINT(EM_DIAGRAM):   V_LBWT0 = 0.39927623642943;
23938     +      P_LBWT0  =     0.43401015228426;
MPRINT(EM_DIAGRAM):   V_LBWT1 = 0.60072376357056;
23939     +      P_LBWT1  =     0.56598984771573;
MPRINT(EM_DIAGRAM):   I_LBWT = '1' ;
23940     +      Q_LBWT0  =     0.43401015228426;
MPRINT(EM_DIAGRAM):   U_LBWT = 1;
23941     +      Q_LBWT1  =     0.56598984771573;
MPRINT(EM_DIAGRAM):   END;
23942     +      V_LBWT0  =     0.39927623642943;
MPRINT(EM_DIAGRAM):   END;
23943     +      V_LBWT1  =     0.60072376357056;
MPRINT(EM_DIAGRAM):   END;
23944     +      I_LBWT  = '1' ;
23945     +      U_LBWT  =                    1;
MPRINT(EM_DIAGRAM):   ***** RESIDUALS R_ *************;
23946     +      END;
23947     +    END;
MPRINT(EM_DIAGRAM):   IF F_LBWT NE '0' AND F_LBWT NE '1' THEN DO;
23948     +  END;
MPRINT(EM_DIAGRAM):   R_LBWT0 = .;
23949     +
MPRINT(EM_DIAGRAM):   R_LBWT1 = .;
23950     +*****  RESIDUALS R_ *************;
MPRINT(EM_DIAGRAM):   END;
23951     +IF  F_LBWT  NE '0'
23952     +AND F_LBWT  NE '1'  THEN DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
23953     +        R_LBWT0  = .;
MPRINT(EM_DIAGRAM):   R_LBWT0 = -P_LBWT0 ;
23954     +        R_LBWT1  = .;
MPRINT(EM_DIAGRAM):   R_LBWT1 = -P_LBWT1 ;
23955     + END;
MPRINT(EM_DIAGRAM):   SELECT( F_LBWT );
23956     + ELSE DO;
MPRINT(EM_DIAGRAM):   WHEN( '0' ) R_LBWT0 = R_LBWT0 +1;
MPRINT(EM_DIAGRAM):   WHEN( '1' ) R_LBWT1 = R_LBWT1 +1;
23957     +       R_LBWT0  =  -P_LBWT0 ;
MPRINT(EM_DIAGRAM):   END;
23958     +       R_LBWT1  =  -P_LBWT1 ;
MPRINT(EM_DIAGRAM):   END;
23959     +       SELECT( F_LBWT  );
23960     +          WHEN( '0'  ) R_LBWT0  = R_LBWT0  +1;
MPRINT(EM_DIAGRAM):   ****************************************************************;
23961     +          WHEN( '1'  ) R_LBWT1  = R_LBWT1  +1;
MPRINT(EM_DIAGRAM):   ****** END OF DECISION TREE SCORING CODE ******;
23962     +       END;
MPRINT(EM_DIAGRAM):   ****************************************************************;
23963     + END;
23964     +
MPRINT(EM_DIAGRAM):   drop _LEAF_;
23965     +****************************************************************;
23966     +******          END OF DECISION TREE SCORING CODE         ******;
23967     +****************************************************************;
23968     +
23969     +drop _LEAF_;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
23970      run;

NOTE: DATA STEP view saved on file EMWS1.TREE6_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
23971      quit;
23972      filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
23973      filename emflow "C:\Users\Gaurav\Desktop\second sem\Data Mining\Project 1\Group13_Project1\Workspaces\EMWS1\Tree6\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow "C:\Users\Gaurav\Desktop\second sem\Data Mining\Project 1\Group13_Project1\Workspaces\EMWS1\Tree6\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Tree6: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
23974      *------------------------------------------------------------*;
23975      * Tree6: Scoring VALIDATE data;
23976      *------------------------------------------------------------*;
23977      data EMWS1.Tree6_VALIDATE
23978      / view=EMWS1.Tree6_VALIDATE
23979      ;
MPRINT(EM_DIAGRAM):   data EMWS1.Tree6_VALIDATE / view=EMWS1.Tree6_VALIDATE ;
23980      set EMWS1.Part_VALIDATE
23981      ;
MPRINT(EM_DIAGRAM):   set EMWS1.Part_VALIDATE ;
23982      %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file C:\Users\Gaurav\Desktop\second sem\Data Mining\Project 1\Group13_Project1\Workspaces\EMWS1\Tree6\EMFLOWSCORE.sas.
23983     +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
23984     +******             DECISION TREE SCORING CODE             ******;
MPRINT(EM_DIAGRAM):   ****** DECISION TREE SCORING CODE ******;
23985     +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
23986     +
23987     +******         LENGTHS OF NEW CHARACTER VARIABLES         ******;
MPRINT(EM_DIAGRAM):   ****** LENGTHS OF NEW CHARACTER VARIABLES ******;
23988     +LENGTH F_LBWT  $   12;
MPRINT(EM_DIAGRAM):   LENGTH F_LBWT $ 12;
23989     +LENGTH I_LBWT  $   12;
MPRINT(EM_DIAGRAM):   LENGTH I_LBWT $ 12;
23990     +LENGTH _WARN_  $    4;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $ 4;
23991     +
23992     +******              LABELS FOR NEW VARIABLES              ******;
MPRINT(EM_DIAGRAM):   ****** LABELS FOR NEW VARIABLES ******;
23993     +label _NODE_ = 'Node' ;
MPRINT(EM_DIAGRAM):   label _NODE_ = 'Node' ;
23994     +label _LEAF_ = 'Leaf' ;
MPRINT(EM_DIAGRAM):   label _LEAF_ = 'Leaf' ;
23995     +label P_LBWT0 = 'Predicted: LBWT=0' ;
MPRINT(EM_DIAGRAM):   label P_LBWT0 = 'Predicted: LBWT=0' ;
23996     +label P_LBWT1 = 'Predicted: LBWT=1' ;
MPRINT(EM_DIAGRAM):   label P_LBWT1 = 'Predicted: LBWT=1' ;
23997     +label Q_LBWT0 = 'Unadjusted P: LBWT=0' ;
MPRINT(EM_DIAGRAM):   label Q_LBWT0 = 'Unadjusted P: LBWT=0' ;
23998     +label Q_LBWT1 = 'Unadjusted P: LBWT=1' ;
MPRINT(EM_DIAGRAM):   label Q_LBWT1 = 'Unadjusted P: LBWT=1' ;
23999     +label V_LBWT0 = 'Validated: LBWT=0' ;
MPRINT(EM_DIAGRAM):   label V_LBWT0 = 'Validated: LBWT=0' ;
24000     +label V_LBWT1 = 'Validated: LBWT=1' ;
MPRINT(EM_DIAGRAM):   label V_LBWT1 = 'Validated: LBWT=1' ;
24001     +label R_LBWT0 = 'Residual: LBWT=0' ;
MPRINT(EM_DIAGRAM):   label R_LBWT0 = 'Residual: LBWT=0' ;
24002     +label R_LBWT1 = 'Residual: LBWT=1' ;
MPRINT(EM_DIAGRAM):   label R_LBWT1 = 'Residual: LBWT=1' ;
24003     +label F_LBWT = 'From: LBWT' ;
MPRINT(EM_DIAGRAM):   label F_LBWT = 'From: LBWT' ;
24004     +label I_LBWT = 'Into: LBWT' ;
MPRINT(EM_DIAGRAM):   label I_LBWT = 'Into: LBWT' ;
24005     +label U_LBWT = 'Unnormalized Into: LBWT' ;
MPRINT(EM_DIAGRAM):   label U_LBWT = 'Unnormalized Into: LBWT' ;
24006     +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
24007     +
24008     +
24009     +******      TEMPORARY VARIABLES FOR FORMATTED VALUES      ******;
MPRINT(EM_DIAGRAM):   ****** TEMPORARY VARIABLES FOR FORMATTED VALUES ******;
24010     +LENGTH _ARBFMT_12 $     12; DROP _ARBFMT_12;
MPRINT(EM_DIAGRAM):   LENGTH _ARBFMT_12 $ 12;
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_12;
24011     +_ARBFMT_12 = ' '; /* Initialize to avoid warning. */
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = ' ';
24012     +
24013     +
24014     +_ARBFMT_12 = PUT( LBWT , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( LBWT , BEST12.);
24015     + %DMNORMCP( _ARBFMT_12, F_LBWT );
MPRINT(DMNORMCP):   F_LBWT=dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
24016     +
24017     +******             ASSIGN OBSERVATION TO NODE             ******;
MPRINT(EM_DIAGRAM):   ****** ASSIGN OBSERVATION TO NODE ******;
24018     +_ARBFMT_12 = PUT( ETHNICITYDAD , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( ETHNICITYDAD , BEST12.);
24019     + %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
24020     +IF _ARBFMT_12 IN ('9' ,'5' ,'2' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('9' ,'5' ,'2' ) THEN DO;
24021     +  _NODE_  =                    2;
MPRINT(EM_DIAGRAM):   _NODE_ = 2;
24022     +  _LEAF_  =                    1;
MPRINT(EM_DIAGRAM):   _LEAF_ = 1;
24023     +  P_LBWT0  =     0.37105643994211;
MPRINT(EM_DIAGRAM):   P_LBWT0 = 0.37105643994211;
24024     +  P_LBWT1  =     0.62894356005788;
MPRINT(EM_DIAGRAM):   P_LBWT1 = 0.62894356005788;
24025     +  Q_LBWT0  =     0.37105643994211;
MPRINT(EM_DIAGRAM):   Q_LBWT0 = 0.37105643994211;
24026     +  Q_LBWT1  =     0.62894356005788;
MPRINT(EM_DIAGRAM):   Q_LBWT1 = 0.62894356005788;
24027     +  V_LBWT0  =     0.38846480067854;
MPRINT(EM_DIAGRAM):   V_LBWT0 = 0.38846480067854;
24028     +  V_LBWT1  =     0.61153519932145;
MPRINT(EM_DIAGRAM):   V_LBWT1 = 0.61153519932145;
24029     +  I_LBWT  = '1' ;
MPRINT(EM_DIAGRAM):   I_LBWT = '1' ;
24030     +  U_LBWT  =                    1;
MPRINT(EM_DIAGRAM):   U_LBWT = 1;
24031     +  END;
MPRINT(EM_DIAGRAM):   END;
24032     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
24033     +  _ARBFMT_12 = PUT( HYPERPR , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( HYPERPR , BEST12.);
24034     +   %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
24035     +  IF _ARBFMT_12 IN ('1' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('1' ) THEN DO;
24036     +    _NODE_  =                    6;
MPRINT(EM_DIAGRAM):   _NODE_ = 6;
24037     +    _LEAF_  =                    2;
MPRINT(EM_DIAGRAM):   _LEAF_ = 2;
24038     +    P_LBWT0  =     0.26923076923076;
MPRINT(EM_DIAGRAM):   P_LBWT0 = 0.26923076923076;
24039     +    P_LBWT1  =     0.73076923076923;
MPRINT(EM_DIAGRAM):   P_LBWT1 = 0.73076923076923;
24040     +    Q_LBWT0  =     0.26923076923076;
MPRINT(EM_DIAGRAM):   Q_LBWT0 = 0.26923076923076;
24041     +    Q_LBWT1  =     0.73076923076923;
MPRINT(EM_DIAGRAM):   Q_LBWT1 = 0.73076923076923;
24042     +    V_LBWT0  =     0.26896551724137;
MPRINT(EM_DIAGRAM):   V_LBWT0 = 0.26896551724137;
24043     +    V_LBWT1  =     0.73103448275862;
MPRINT(EM_DIAGRAM):   V_LBWT1 = 0.73103448275862;
24044     +    I_LBWT  = '1' ;
MPRINT(EM_DIAGRAM):   I_LBWT = '1' ;
24045     +    U_LBWT  =                    1;
MPRINT(EM_DIAGRAM):   U_LBWT = 1;
24046     +    END;
MPRINT(EM_DIAGRAM):   END;
24047     +  ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
24048     +    _ARBFMT_12 = PUT( smoker , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( smoker , BEST12.);
24049     +     %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
24050     +    IF _ARBFMT_12 IN ('0' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('0' ) THEN DO;
24051     +      IF  NOT MISSING(YrsLastLiveBirth ) AND
24052     +                         1.5 <= YrsLastLiveBirth  AND
24053     +        YrsLastLiveBirth  <                  3.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(YrsLastLiveBirth ) AND 1.5 <= YrsLastLiveBirth AND YrsLastLiveBirth < 3.5 THEN DO;
24054     +        _ARBFMT_12 = PUT( PRETERM , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( PRETERM , BEST12.);
24055     +         %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
24056     +        IF _ARBFMT_12 IN ('1' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('1' ) THEN DO;
24057     +          _NODE_  =                   31;
MPRINT(EM_DIAGRAM):   _NODE_ = 31;
24058     +          _LEAF_  =                    7;
MPRINT(EM_DIAGRAM):   _LEAF_ = 7;
24059     +          P_LBWT0  =                0.375;
MPRINT(EM_DIAGRAM):   P_LBWT0 = 0.375;
24060     +          P_LBWT1  =                0.625;
MPRINT(EM_DIAGRAM):   P_LBWT1 = 0.625;
24061     +          Q_LBWT0  =                0.375;
MPRINT(EM_DIAGRAM):   Q_LBWT0 = 0.375;
24062     +          Q_LBWT1  =                0.625;
MPRINT(EM_DIAGRAM):   Q_LBWT1 = 0.625;
24063     +          V_LBWT0  =                0.375;
MPRINT(EM_DIAGRAM):   V_LBWT0 = 0.375;
24064     +          V_LBWT1  =                0.625;
MPRINT(EM_DIAGRAM):   V_LBWT1 = 0.625;
24065     +          I_LBWT  = '1' ;
MPRINT(EM_DIAGRAM):   I_LBWT = '1' ;
24066     +          U_LBWT  =                    1;
MPRINT(EM_DIAGRAM):   U_LBWT = 1;
24067     +          END;
MPRINT(EM_DIAGRAM):   END;
24068     +        ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
24069     +          _ARBFMT_12 = PUT( HYDRAM , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( HYDRAM , BEST12.);
24070     +           %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
24071     +          IF _ARBFMT_12 IN ('1' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('1' ) THEN DO;
24072     +            _NODE_  =                   39;
MPRINT(EM_DIAGRAM):   _NODE_ = 39;
24073     +            _LEAF_  =                    8;
MPRINT(EM_DIAGRAM):   _LEAF_ = 8;
24074     +            P_LBWT0  =                 0.45;
MPRINT(EM_DIAGRAM):   P_LBWT0 = 0.45;
24075     +            P_LBWT1  =                 0.55;
MPRINT(EM_DIAGRAM):   P_LBWT1 = 0.55;
24076     +            Q_LBWT0  =                 0.45;
MPRINT(EM_DIAGRAM):   Q_LBWT0 = 0.45;
24077     +            Q_LBWT1  =                 0.55;
MPRINT(EM_DIAGRAM):   Q_LBWT1 = 0.55;
24078     +            V_LBWT0  =     0.44444444444444;
MPRINT(EM_DIAGRAM):   V_LBWT0 = 0.44444444444444;
24079     +            V_LBWT1  =     0.55555555555555;
MPRINT(EM_DIAGRAM):   V_LBWT1 = 0.55555555555555;
24080     +            I_LBWT  = '1' ;
MPRINT(EM_DIAGRAM):   I_LBWT = '1' ;
24081     +            U_LBWT  =                    1;
MPRINT(EM_DIAGRAM):   U_LBWT = 1;
24082     +            END;
MPRINT(EM_DIAGRAM):   END;
24083     +          ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
24084     +            _NODE_  =                   40;
MPRINT(EM_DIAGRAM):   _NODE_ = 40;
24085     +            _LEAF_  =                    9;
MPRINT(EM_DIAGRAM):   _LEAF_ = 9;
24086     +            P_LBWT0  =     0.78947368421052;
MPRINT(EM_DIAGRAM):   P_LBWT0 = 0.78947368421052;
24087     +            P_LBWT1  =     0.21052631578947;
MPRINT(EM_DIAGRAM):   P_LBWT1 = 0.21052631578947;
24088     +            Q_LBWT0  =     0.78947368421052;
MPRINT(EM_DIAGRAM):   Q_LBWT0 = 0.78947368421052;
24089     +            Q_LBWT1  =     0.21052631578947;
MPRINT(EM_DIAGRAM):   Q_LBWT1 = 0.21052631578947;
24090     +            V_LBWT0  =     0.76844494892168;
MPRINT(EM_DIAGRAM):   V_LBWT0 = 0.76844494892168;
24091     +            V_LBWT1  =     0.23155505107832;
MPRINT(EM_DIAGRAM):   V_LBWT1 = 0.23155505107832;
24092     +            I_LBWT  = '0' ;
MPRINT(EM_DIAGRAM):   I_LBWT = '0' ;
24093     +            U_LBWT  =                    0;
MPRINT(EM_DIAGRAM):   U_LBWT = 0;
24094     +            END;
MPRINT(EM_DIAGRAM):   END;
24095     +          END;
MPRINT(EM_DIAGRAM):   END;
24096     +        END;
MPRINT(EM_DIAGRAM):   END;
24097     +      ELSE IF  NOT MISSING(YrsLastLiveBirth ) AND
24098     +                         3.5 <= YrsLastLiveBirth  THEN DO;
MPRINT(EM_DIAGRAM):   ELSE IF NOT MISSING(YrsLastLiveBirth ) AND 3.5 <= YrsLastLiveBirth THEN DO;
24099     +        _ARBFMT_12 = PUT( ECLAMP , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( ECLAMP , BEST12.);
24100     +         %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
24101     +        IF _ARBFMT_12 IN ('1' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('1' ) THEN DO;
24102     +          _NODE_  =                   33;
MPRINT(EM_DIAGRAM):   _NODE_ = 33;
24103     +          _LEAF_  =                   10;
MPRINT(EM_DIAGRAM):   _LEAF_ = 10;
24104     +          P_LBWT0  =                    0;
MPRINT(EM_DIAGRAM):   P_LBWT0 = 0;
24105     +          P_LBWT1  =                    1;
MPRINT(EM_DIAGRAM):   P_LBWT1 = 1;
24106     +          Q_LBWT0  =                    0;
MPRINT(EM_DIAGRAM):   Q_LBWT0 = 0;
24107     +          Q_LBWT1  =                    1;
MPRINT(EM_DIAGRAM):   Q_LBWT1 = 1;
24108     +          V_LBWT0  =                  0.2;
MPRINT(EM_DIAGRAM):   V_LBWT0 = 0.2;
24109     +          V_LBWT1  =                  0.8;
MPRINT(EM_DIAGRAM):   V_LBWT1 = 0.8;
24110     +          I_LBWT  = '1' ;
MPRINT(EM_DIAGRAM):   I_LBWT = '1' ;
24111     +          U_LBWT  =                    1;
MPRINT(EM_DIAGRAM):   U_LBWT = 1;
24112     +          END;
MPRINT(EM_DIAGRAM):   END;
24113     +        ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
24114     +          _ARBFMT_12 = PUT( HYDRAM , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( HYDRAM , BEST12.);
24115     +           %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
24116     +          IF _ARBFMT_12 IN ('1' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('1' ) THEN DO;
24117     +            _NODE_  =                   41;
MPRINT(EM_DIAGRAM):   _NODE_ = 41;
24118     +            _LEAF_  =                   11;
MPRINT(EM_DIAGRAM):   _LEAF_ = 11;
24119     +            P_LBWT0  =                 0.28;
MPRINT(EM_DIAGRAM):   P_LBWT0 = 0.28;
24120     +            P_LBWT1  =                 0.72;
MPRINT(EM_DIAGRAM):   P_LBWT1 = 0.72;
24121     +            Q_LBWT0  =                 0.28;
MPRINT(EM_DIAGRAM):   Q_LBWT0 = 0.28;
24122     +            Q_LBWT1  =                 0.72;
MPRINT(EM_DIAGRAM):   Q_LBWT1 = 0.72;
24123     +            V_LBWT0  =     0.17391304347826;
MPRINT(EM_DIAGRAM):   V_LBWT0 = 0.17391304347826;
24124     +            V_LBWT1  =     0.82608695652173;
MPRINT(EM_DIAGRAM):   V_LBWT1 = 0.82608695652173;
24125     +            I_LBWT  = '1' ;
MPRINT(EM_DIAGRAM):   I_LBWT = '1' ;
24126     +            U_LBWT  =                    1;
MPRINT(EM_DIAGRAM):   U_LBWT = 1;
24127     +            END;
MPRINT(EM_DIAGRAM):   END;
24128     +          ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
24129     +            _NODE_  =                   42;
MPRINT(EM_DIAGRAM):   _NODE_ = 42;
24130     +            _LEAF_  =                   12;
MPRINT(EM_DIAGRAM):   _LEAF_ = 12;
24131     +            P_LBWT0  =      0.7076167076167;
MPRINT(EM_DIAGRAM):   P_LBWT0 = 0.7076167076167;
24132     +            P_LBWT1  =     0.29238329238329;
MPRINT(EM_DIAGRAM):   P_LBWT1 = 0.29238329238329;
24133     +            Q_LBWT0  =      0.7076167076167;
MPRINT(EM_DIAGRAM):   Q_LBWT0 = 0.7076167076167;
24134     +            Q_LBWT1  =     0.29238329238329;
MPRINT(EM_DIAGRAM):   Q_LBWT1 = 0.29238329238329;
24135     +            V_LBWT0  =     0.72417982989064;
MPRINT(EM_DIAGRAM):   V_LBWT0 = 0.72417982989064;
24136     +            V_LBWT1  =     0.27582017010935;
MPRINT(EM_DIAGRAM):   V_LBWT1 = 0.27582017010935;
24137     +            I_LBWT  = '0' ;
MPRINT(EM_DIAGRAM):   I_LBWT = '0' ;
24138     +            U_LBWT  =                    0;
MPRINT(EM_DIAGRAM):   U_LBWT = 0;
24139     +            END;
MPRINT(EM_DIAGRAM):   END;
24140     +          END;
MPRINT(EM_DIAGRAM):   END;
24141     +        END;
MPRINT(EM_DIAGRAM):   END;
24142     +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
24143     +        _ARBFMT_12 = PUT( HYDRAM , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( HYDRAM , BEST12.);
24144     +         %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
24145     +        IF _ARBFMT_12 IN ('1' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('1' ) THEN DO;
24146     +          _NODE_  =                   29;
MPRINT(EM_DIAGRAM):   _NODE_ = 29;
24147     +          _LEAF_  =                    4;
MPRINT(EM_DIAGRAM):   _LEAF_ = 4;
24148     +          P_LBWT0  =     0.22857142857142;
MPRINT(EM_DIAGRAM):   P_LBWT0 = 0.22857142857142;
24149     +          P_LBWT1  =     0.77142857142857;
MPRINT(EM_DIAGRAM):   P_LBWT1 = 0.77142857142857;
24150     +          Q_LBWT0  =     0.22857142857142;
MPRINT(EM_DIAGRAM):   Q_LBWT0 = 0.22857142857142;
24151     +          Q_LBWT1  =     0.77142857142857;
MPRINT(EM_DIAGRAM):   Q_LBWT1 = 0.77142857142857;
24152     +          V_LBWT0  =     0.26530612244897;
MPRINT(EM_DIAGRAM):   V_LBWT0 = 0.26530612244897;
24153     +          V_LBWT1  =     0.73469387755102;
MPRINT(EM_DIAGRAM):   V_LBWT1 = 0.73469387755102;
24154     +          I_LBWT  = '1' ;
MPRINT(EM_DIAGRAM):   I_LBWT = '1' ;
24155     +          U_LBWT  =                    1;
MPRINT(EM_DIAGRAM):   U_LBWT = 1;
24156     +          END;
MPRINT(EM_DIAGRAM):   END;
24157     +        ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
24158     +          _ARBFMT_12 = PUT( ECLAMP , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( ECLAMP , BEST12.);
24159     +           %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
24160     +          IF _ARBFMT_12 IN ('1' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('1' ) THEN DO;
24161     +            _NODE_  =                   38;
MPRINT(EM_DIAGRAM):   _NODE_ = 38;
24162     +            _LEAF_  =                    6;
MPRINT(EM_DIAGRAM):   _LEAF_ = 6;
24163     +            P_LBWT0  =     0.05263157894736;
MPRINT(EM_DIAGRAM):   P_LBWT0 = 0.05263157894736;
24164     +            P_LBWT1  =     0.94736842105263;
MPRINT(EM_DIAGRAM):   P_LBWT1 = 0.94736842105263;
24165     +            Q_LBWT0  =     0.05263157894736;
MPRINT(EM_DIAGRAM):   Q_LBWT0 = 0.05263157894736;
24166     +            Q_LBWT1  =     0.94736842105263;
MPRINT(EM_DIAGRAM):   Q_LBWT1 = 0.94736842105263;
24167     +            V_LBWT0  =              0.09375;
MPRINT(EM_DIAGRAM):   V_LBWT0 = 0.09375;
24168     +            V_LBWT1  =              0.90625;
MPRINT(EM_DIAGRAM):   V_LBWT1 = 0.90625;
24169     +            I_LBWT  = '1' ;
MPRINT(EM_DIAGRAM):   I_LBWT = '1' ;
24170     +            U_LBWT  =                    1;
MPRINT(EM_DIAGRAM):   U_LBWT = 1;
24171     +            END;
MPRINT(EM_DIAGRAM):   END;
24172     +          ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
24173     +            _NODE_  =                   37;
MPRINT(EM_DIAGRAM):   _NODE_ = 37;
24174     +            _LEAF_  =                    5;
MPRINT(EM_DIAGRAM):   _LEAF_ = 5;
24175     +            P_LBWT0  =      0.6065239551478;
MPRINT(EM_DIAGRAM):   P_LBWT0 = 0.6065239551478;
24176     +            P_LBWT1  =     0.39347604485219;
MPRINT(EM_DIAGRAM):   P_LBWT1 = 0.39347604485219;
24177     +            Q_LBWT0  =      0.6065239551478;
MPRINT(EM_DIAGRAM):   Q_LBWT0 = 0.6065239551478;
24178     +            Q_LBWT1  =     0.39347604485219;
MPRINT(EM_DIAGRAM):   Q_LBWT1 = 0.39347604485219;
24179     +            V_LBWT0  =     0.60348468848996;
MPRINT(EM_DIAGRAM):   V_LBWT0 = 0.60348468848996;
24180     +            V_LBWT1  =     0.39651531151003;
MPRINT(EM_DIAGRAM):   V_LBWT1 = 0.39651531151003;
24181     +            I_LBWT  = '0' ;
MPRINT(EM_DIAGRAM):   I_LBWT = '0' ;
24182     +            U_LBWT  =                    0;
MPRINT(EM_DIAGRAM):   U_LBWT = 0;
24183     +            END;
MPRINT(EM_DIAGRAM):   END;
24184     +          END;
MPRINT(EM_DIAGRAM):   END;
24185     +        END;
MPRINT(EM_DIAGRAM):   END;
24186     +      END;
MPRINT(EM_DIAGRAM):   END;
24187     +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
24188     +      _NODE_  =                   12;
MPRINT(EM_DIAGRAM):   _NODE_ = 12;
24189     +      _LEAF_  =                    3;
MPRINT(EM_DIAGRAM):   _LEAF_ = 3;
24190     +      P_LBWT0  =     0.43401015228426;
MPRINT(EM_DIAGRAM):   P_LBWT0 = 0.43401015228426;
24191     +      P_LBWT1  =     0.56598984771573;
MPRINT(EM_DIAGRAM):   P_LBWT1 = 0.56598984771573;
24192     +      Q_LBWT0  =     0.43401015228426;
MPRINT(EM_DIAGRAM):   Q_LBWT0 = 0.43401015228426;
24193     +      Q_LBWT1  =     0.56598984771573;
MPRINT(EM_DIAGRAM):   Q_LBWT1 = 0.56598984771573;
24194     +      V_LBWT0  =     0.39927623642943;
MPRINT(EM_DIAGRAM):   V_LBWT0 = 0.39927623642943;
24195     +      V_LBWT1  =     0.60072376357056;
MPRINT(EM_DIAGRAM):   V_LBWT1 = 0.60072376357056;
24196     +      I_LBWT  = '1' ;
MPRINT(EM_DIAGRAM):   I_LBWT = '1' ;
24197     +      U_LBWT  =                    1;
MPRINT(EM_DIAGRAM):   U_LBWT = 1;
24198     +      END;
MPRINT(EM_DIAGRAM):   END;
24199     +    END;
MPRINT(EM_DIAGRAM):   END;
24200     +  END;
MPRINT(EM_DIAGRAM):   END;
24201     +
24202     +*****  RESIDUALS R_ *************;
MPRINT(EM_DIAGRAM):   ***** RESIDUALS R_ *************;
24203     +IF  F_LBWT  NE '0'
24204     +AND F_LBWT  NE '1'  THEN DO;
MPRINT(EM_DIAGRAM):   IF F_LBWT NE '0' AND F_LBWT NE '1' THEN DO;
24205     +        R_LBWT0  = .;
MPRINT(EM_DIAGRAM):   R_LBWT0 = .;
24206     +        R_LBWT1  = .;
MPRINT(EM_DIAGRAM):   R_LBWT1 = .;
24207     + END;
MPRINT(EM_DIAGRAM):   END;
24208     + ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
24209     +       R_LBWT0  =  -P_LBWT0 ;
MPRINT(EM_DIAGRAM):   R_LBWT0 = -P_LBWT0 ;
24210     +       R_LBWT1  =  -P_LBWT1 ;
MPRINT(EM_DIAGRAM):   R_LBWT1 = -P_LBWT1 ;
24211     +       SELECT( F_LBWT  );
MPRINT(EM_DIAGRAM):   SELECT( F_LBWT );
24212     +          WHEN( '0'  ) R_LBWT0  = R_LBWT0  +1;
MPRINT(EM_DIAGRAM):   WHEN( '0' ) R_LBWT0 = R_LBWT0 +1;
24213     +          WHEN( '1'  ) R_LBWT1  = R_LBWT1  +1;
MPRINT(EM_DIAGRAM):   WHEN( '1' ) R_LBWT1 = R_LBWT1 +1;
24214     +       END;
MPRINT(EM_DIAGRAM):   END;
24215     + END;
MPRINT(EM_DIAGRAM):   END;
24216     +
24217     +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
24218     +******          END OF DECISION TREE SCORING CODE         ******;
MPRINT(EM_DIAGRAM):   ****** END OF DECISION TREE SCORING CODE ******;
24219     +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
24220     +
24221     +drop _LEAF_;
MPRINT(EM_DIAGRAM):   drop _LEAF_;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
24222      run;

NOTE: DATA STEP view saved on file EMWS1.TREE6_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
24223      quit;
24224      filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
NOTE: View EMWS1.TREE6_TRAIN.VIEW used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      
24226      proc sort data=WORK.EM_USER_REPORT;
MPRINT(EM_DIAGRAM):     proc sort data=WORK.EM_USER_REPORT;
24227      by ID VIEW;
MPRINT(EM_DIAGRAM):   by ID VIEW;
24228      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 132 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 132 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

24229      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
24230      * Tree6: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Tree6: Computing metadata for TRAIN data;
24231      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS1.TREE6_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta "C:\Users\Gaurav\Desktop\second sem\Data Mining\Project 1\Group13_Project1\Workspaces\EMWS1\Tree6\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS1.Tree6_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS1.Tree6_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS1.Tree6_TRAIN out=WORK.M3M0XR3J noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3M0XR3J;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 36 INFORMAT $36 INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M3M0XR3J(keep=name type length label format formatl formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne '' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then format = strip(format)!!strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(format)!!strip(put(formatl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then informat = strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(informat)!!strip(put(informl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3M0XR3J;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M3M0XR3J;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M32I79YQ NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M32I79YQ;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M32I79YQ;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M05TNW01(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M32I79YQ;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M32I79YQ;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M32I79YQ;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" "MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" "QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" 
"YEAR" "YYMMDD" "YYMON" "YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" "EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" "NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" "SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if compress(tempfmt, '0123456789.', '') = '' then formattype='NUM';
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = "DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_PARTIND_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('Q') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ ('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   if symexist('RATEMKG_ROLE') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('RATEMKG_ROLE')) in('Y', 'YES') then do;
MPRINT(EMADVISECOLUMNS):   if _uname =: 'POLICY' then ROLE = 'POLICYID';
MPRINT(EMADVISECOLUMNS):   else if _uname in ('PARTITION', '_PARTIND_') then ROLE = 'PARTITION';
MPRINT(EMADVISECOLUMNS):   else if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   if _uname = 'EXPOSURE' then ROLE = 'EXPOSURE';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'YEAR' then ROLE = 'YEAR';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'WEIGHT' then ROLE = 'WEIGHT';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'OFFSET' then ROLE = 'OFFSET';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   if symexist('dmwb_product') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('dmwb_product')) = 'FACTORYMINER_DATASOURCE' then do;
MPRINT(EMADVISECOLUMNS):   if ROLE ^in('INPUT', 'TARGET', 'REJECTED', 'SEGMENT', 'FREQ', 'ID', 'KEY') then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M32I79YQ;
MPRINT(EMADVISECOLUMNS):   set WORK.M32I79YQ;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= "Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= "Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower 
limit" UPPERLIMIT= "Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= "Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS1.Part_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Part_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS1.Tree6_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Tree6";
MPRINT(EM_DIAGRAM):   length model $200;
MPRINT(EM_DIAGRAM):   label MODEL = "Model Node";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("LBWT") model = "Tree6";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Tree6: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   if upcase(NAME) = "ACLUNG" then do;
MPRINT(EM_DIAGRAM):   ROLE = "REJECTED";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = "AMNIO" then do;
MPRINT(EM_DIAGRAM):   ROLE = "REJECTED";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = "ANEMIA" then do;
MPRINT(EM_DIAGRAM):   ROLE = "REJECTED";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = "BDEAD" then do;
MPRINT(EM_DIAGRAM):   ROLE = "REJECTED";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = "CARDIAC" then do;
MPRINT(EM_DIAGRAM):   ROLE = "REJECTED";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = "CERVIX" then do;
MPRINT(EM_DIAGRAM):   ROLE = "REJECTED";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = "CHILDREN" then do;
MPRINT(EM_DIAGRAM):   ROLE = "REJECTED";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = "CIGNUM" then do;
MPRINT(EM_DIAGRAM):   ROLE = "REJECTED";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = "DIABETES" then do;
MPRINT(EM_DIAGRAM):   ROLE = "REJECTED";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = "DRINKER" then do;
MPRINT(EM_DIAGRAM):   ROLE = "REJECTED";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = "DRINKNUM" then do;
MPRINT(EM_DIAGRAM):   ROLE = "REJECTED";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = "ETHNICITYMOM" then do;
MPRINT(EM_DIAGRAM):   ROLE = "REJECTED";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = "FAGE" then do;
MPRINT(EM_DIAGRAM):   ROLE = "REJECTED";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = "FEDUC" then do;
MPRINT(EM_DIAGRAM):   ROLE = "REJECTED";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = "HEMOGLOB" then do;
MPRINT(EM_DIAGRAM):   ROLE = "REJECTED";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = "HERPES" then do;
MPRINT(EM_DIAGRAM):   ROLE = "REJECTED";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = "HYPERCH" then do;
MPRINT(EM_DIAGRAM):   ROLE = "REJECTED";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = "LOUTCOME" then do;
MPRINT(EM_DIAGRAM):   ROLE = "REJECTED";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = "MAGE" then do;
MPRINT(EM_DIAGRAM):   ROLE = "REJECTED";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = "MARITAL" then do;
MPRINT(EM_DIAGRAM):   ROLE = "REJECTED";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = "MEDUC" then do;
MPRINT(EM_DIAGRAM):   ROLE = "REJECTED";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = "PINFANT" then do;
MPRINT(EM_DIAGRAM):   ROLE = "REJECTED";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = "PRENATAL" then do;
MPRINT(EM_DIAGRAM):   ROLE = "REJECTED";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = "Q_LBWT0" then do;
MPRINT(EM_DIAGRAM):   ROLE = "ASSESS";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = "Q_LBWT1" then do;
MPRINT(EM_DIAGRAM):   ROLE = "ASSESS";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = "RENAL" then do;
MPRINT(EM_DIAGRAM):   ROLE = "REJECTED";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = "RHSEN" then do;
MPRINT(EM_DIAGRAM):   ROLE = "REJECTED";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = "TERMS" then do;
MPRINT(EM_DIAGRAM):   ROLE = "REJECTED";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = "TOTALP" then do;
MPRINT(EM_DIAGRAM):   ROLE = "REJECTED";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = "ULTRA" then do;
MPRINT(EM_DIAGRAM):   ROLE = "REJECTED";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = "UTERINE" then do;
MPRINT(EM_DIAGRAM):   ROLE = "REJECTED";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = "YRSLASTFETALDEATH" then do;
MPRINT(EM_DIAGRAM):   ROLE = "REJECTED";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(NAME) = "_NODE_" then do;
MPRINT(EM_DIAGRAM):   ROLE = "SEGMENT";
MPRINT(EM_DIAGRAM):   LEVEL = "NOMINAL";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
24708      data EMWS1.Tree6_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS1.Tree6_EMINFO;
24709      length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
24710      input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
24711      cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS1.TREE6_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   run;
24715      run;
24716      proc sort data = EMWS1.Tree6_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS1.Tree6_EMINFO NOTHREADS;
24717      by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
24718      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS1.TREE6_EMINFO.
NOTE: The data set EMWS1.TREE6_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

24719      proc sort data = EMWS1.Ids_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS1.Ids_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
24720      by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
24721      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS1.IDS_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

24722      proc sort data = EMWS1.Tree6_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS1.Tree6_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
24723      by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
24724      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS1.TREE6_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

24725      data EMWS1.Tree6_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS1.Tree6_EMINFO;
24726      merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
24727      by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
24728      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS1.TREE6_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

24729      proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
24730      delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
24731      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
24732      quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

NOTE: View EMWS1.TREE6_TRAIN.VIEW used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      
NOTE: View EMWS1.TREE6_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
