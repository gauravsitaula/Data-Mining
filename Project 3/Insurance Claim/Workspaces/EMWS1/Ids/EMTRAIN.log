MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "April 27, 2017" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "12:33:35" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Training Log
Date:                April 27, 2017
Time:                12:33:35
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O16WMOHV "C:\Users\Gaurav\Desktop\second sem\Data Mining\Project 3\Insurance Claim\Workspaces\EMWS1\Ids\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O16WMOHV new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG "C:\Users\Gaurav\Desktop\second sem\Data Mining\Project 3\Insurance Claim\Workspaces\EMWS1\Ids\EMLOG.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "April 27, 2017" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "12:33:35" );
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                Gaurav";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70125477";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_8HOME";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.04.01M3P062415";
MPRINT(EM_DIAGRAM):   put "EM Version:          14.1";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\Users\Gaurav\Desktop\second sem\Data Mining\Project 3\Insurance Claim\Workspaces\EMWS1\Ids\EMTRAIN.log" encoding="UTF-8" NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _LOGIN "C:\Users\Gaurav\Desktop\second sem\Data Mining\Project 3\Insurance Claim\Workspaces\EMWS1\Ids\EMSCORE.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\Users\Gaurav\Desktop\second sem\Data Mining\Project 3\Insurance Claim\Workspaces\EMWS1\Ids\EMREPORT.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT "C:\Users\Gaurav\Desktop\second sem\Data Mining\Project 3\Insurance Claim\Workspaces\EMWS1\Ids\EMOUTPUT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "April 27, 2017" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "12:33:35" );
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                Gaurav";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\Gaurav\Desktop\second sem\Data Mining\Project 3\Insurance Claim\Workspaces\EMWS1\Ids\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\Gaurav\Desktop\second sem\Data Mining\Project 3\Insurance Claim\Workspaces\EMWS1\Ids\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\Users\Gaurav\Desktop\second sem\Data Mining\Project 3\Insurance Claim\Workspaces\EMWS1\Ids\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\Users\Gaurav\Desktop\second sem\Data Mining\Project 3\Insurance Claim\Workspaces\EMWS1\Ids\EMRUNSTATUS.xml' encoding="UTF-8" NOBOM;
20951      proc freq data=EMWS1.Ids_VariableSet noprint;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS1.Ids_VariableSet noprint;
20952      table ROLE*LEVEL/out=WORK.IdsMETA;
MPRINT(EM_DIAGRAM):   table ROLE*LEVEL/out=WORK.IdsMETA;
20953      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 7 observations read from the data set EMWS1.IDS_VARIABLESET.
NOTE: The data set WORK.IDSMETA has 5 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.18 seconds
      cpu time            0.01 seconds
      

20954      proc print data=WORK.IdsMETA label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.IdsMETA label noobs;
20955      var ROLE LEVEL COUNT;
MPRINT(EM_DIAGRAM):   var ROLE LEVEL COUNT;
20956      label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL = "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label ROLE = "Role" LEVEL = "Measurement Level" COUNT = "Frequency Count";
20957      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
20958      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Variable Summary";
MPRINT(EM_DIAGRAM):   run;
20959      run;

NOTE: There were 5 observations read from the data set WORK.IDSMETA.
NOTE: The PROCEDURE PRINT printed page 1.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

20960      title10;
MPRINT(EM_DIAGRAM):   title10;
20961      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
20962      rc = libref("INSUR");
MPRINT(EM_DIAGRAM):   rc = libref("INSUR");
20963      call symput('_librc', strip(put(rc, best.)));
MPRINT(EM_DIAGRAM):   call symput('_librc', strip(put(rc, best.)));
20964      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

20965      %let _engineTable =;
20966      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
20967      dsid = open("INSUR.SUBROGATENEW");
MPRINT(EM_DIAGRAM):   dsid = open("INSUR.SUBROGATENEW");
20968      if dsid then do;
MPRINT(EM_DIAGRAM):   if dsid then do;
20969      call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EM_DIAGRAM):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
20970      dsid = close(dsid);
MPRINT(EM_DIAGRAM):   dsid = close(dsid);
20971      end;
MPRINT(EM_DIAGRAM):   end;
20972      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

20973      %let _lasrFile=;
20974      %let _sasiolaFile=;
20975      data null_;
MPRINT(EM_DIAGRAM):    data null_;
20976      length lasrfile sasiolaFile $2000;
MPRINT(EM_DIAGRAM):   length lasrfile sasiolaFile $2000;
20977      LASRFile = pathname("EMWS1")!!"\"!!"HPDM\"!!"hpdmlasr";
MPRINT(EM_DIAGRAM):   LASRFile = pathname("EMWS1")!!"\"!!"HPDM\"!!"hpdmlasr";
20978      SASIOLAFile = pathname("EMWS1")!!"\"!!"HPDM\"!!'sasiola.sas';
MPRINT(EM_DIAGRAM):   SASIOLAFile = pathname("EMWS1")!!"\"!!"HPDM\"!!'sasiola.sas';
20979      call symput('_lasrFile', strip(lasrfile));
MPRINT(EM_DIAGRAM):   call symput('_lasrFile', strip(lasrfile));
20980      call symput('_sasiolaFile', strip(sasiolafile));
MPRINT(EM_DIAGRAM):   call symput('_sasiolaFile', strip(sasiolafile));
20981      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK.NULL_ has 1 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
      

20982      %let _UseGrid = 0;
20983      %hpdm_performance(data=INSUR.SUBROGATENEW, isGrid=_UseGrid);
MPRINT(EM_DIAGRAM):   
MPRINT(HPDM_PERFORMANCE):  ;
PERFORMANCE  DETAILS
MPRINT(EM_DIAGRAM):  ;
20984      %put &_UseGrid;
0
20985      %let em_idskey =;
20986      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
20987      set EMWS1.Ids_VariableSet;
MPRINT(EM_DIAGRAM):   set EMWS1.Ids_VariableSet;
20988      where ROLE = 'KEY';
MPRINT(EM_DIAGRAM):   where ROLE = 'KEY';
20989      call symput('em_idskey', strip(tranwrd(name, '"', '""')));
MPRINT(EM_DIAGRAM):   call symput('em_idskey', strip(tranwrd(name, '"', '""')));
20990      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS1.IDS_VARIABLESET.
      WHERE ROLE='KEY';
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

20991      %let emexceptionstring=;
20992      %EmAdviseColumns(INSUR.SUBROGATENEW, adviseMode=BASIC, applyIntervalLevelLowerLimit=N, applyMaxPercentMissing=N, applyMaxClassLevels=N, identifyEmptyColumns=N, maxLevelDetection=0, outdata=EMWS1.Ids_EMCMETADEFAULT, newdataflag=N);
MPRINT(EM_DIAGRAM):   
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;

20993      %let SYSCC = 0;
20994      %let _dsidTable = 0;
20995      %let _engineTable =;
20996      data _null_;
MPRINT(EMADVISECOLUMNS):    data _null_;
20997      dsid = open('INSUR.SUBROGATENEW');
MPRINT(EMADVISECOLUMNS):   dsid = open('INSUR.SUBROGATENEW');
20998      call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
20999      if dsid then do;
MPRINT(EMADVISECOLUMNS):   if dsid then do;
21000      call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
21001      dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
21002      end;
MPRINT(EMADVISECOLUMNS):   end;
21003      run;
MPRINT(EMADVISECOLUMNS):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

21004      options fmterr;
MPRINT(EMADVISECOLUMNS):    options fmterr;
21005      data _metaTestView;
MPRINT(EMADVISECOLUMNS):   data _metaTestView;
21006      set INSUR.SUBROGATENEW;
MPRINT(EMADVISECOLUMNS):   set INSUR.SUBROGATENEW;
21007      if _N_=1 then do;
MPRINT(EMADVISECOLUMNS):   if _N_=1 then do;
21008      output;
MPRINT(EMADVISECOLUMNS):   output;
21009      stop;
MPRINT(EMADVISECOLUMNS):   stop;
21010      end;
MPRINT(EMADVISECOLUMNS):   end;
21011      run;
MPRINT(EMADVISECOLUMNS):   run;

NOTE: There were 1 observations read from the data set INSUR.SUBROGATENEW.
NOTE: The data set WORK._METATESTVIEW has 1 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.08 seconds
      cpu time            0.07 seconds
      

21012      proc contents data=INSUR.SUBROGATENEW
21013      out=WORK.M2A_J7YY noprint;
MPRINT(EMADVISECOLUMNS):    proc contents data=INSUR.SUBROGATENEW out=WORK.M2A_J7YY noprint;
21014      run;
MPRINT(EMADVISECOLUMNS):   run;

NOTE: The data set WORK.M2A_J7YY has 7 observations and 41 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

21015      data WORK.M2A_J7YY;
MPRINT(EMADVISECOLUMNS):    data WORK.M2A_J7YY;
21016      length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 36 INFORMAT $36 INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 36 INFORMAT $36 INDEX $ 1 INDEXTYPE $ 9;
21017      label NAME =;
MPRINT(EMADVISECOLUMNS):   label NAME =;
21018      set WORK.M2A_J7YY(keep=name type length label format formatl formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   set WORK.M2A_J7YY(keep=name type length label format formatl formatd informat informl informd idxusage rename=(type=itype));
21019      if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
21020      else type = 'C';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
21021      if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
21022      if format ne '' then do;
MPRINT(EMADVISECOLUMNS):   if format ne '' then do;
21023      if type='N' then format = strip(format)!!strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   if type='N' then format = strip(format)!!strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
21024      else format = strip(format)!!strip(put(formatl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   else format = strip(format)!!strip(put(formatl, best12.))!!'.';
21025      end;
MPRINT(EMADVISECOLUMNS):   end;
21026      else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
21027      end;
MPRINT(EMADVISECOLUMNS):   end;
21028      else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
21029      if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
21030      if informat ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then do;
21031      if type='N' then informat = strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   if type='N' then informat = strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
21032      else informat = strip(informat)!!strip(put(informl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   else informat = strip(informat)!!strip(put(informl, best12.))!!'.';
21033      end;
MPRINT(EMADVISECOLUMNS):   end;
21034      else informat = strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
21035      end;
MPRINT(EMADVISECOLUMNS):   end;
21036      else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
21037      if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
21038      else index = "Y";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
21039      indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
21040      drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
21041      run;
MPRINT(EMADVISECOLUMNS):   run;

NOTE: There were 7 observations read from the data set WORK.M2A_J7YY.
NOTE: The data set WORK.M2A_J7YY has 7 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

21042      data WORK.M0LCGHKE;
MPRINT(EMADVISECOLUMNS):    data WORK.M0LCGHKE;
21043      length UNAME $64;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
21044      set WORK.M0LCGHKE;
MPRINT(EMADVISECOLUMNS):   set WORK.M0LCGHKE;
21045      UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
21046      run;
MPRINT(EMADVISECOLUMNS):   run;

NOTE: There were 7 observations read from the data set WORK.M0LCGHKE.
NOTE: The data set WORK.M0LCGHKE has 7 observations and 22 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.01 seconds
      

21047      data WORK.M2A_J7YY;
MPRINT(EMADVISECOLUMNS):    data WORK.M2A_J7YY;
21048      length UNAME $64;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
21049      set WORK.M2A_J7YY;
MPRINT(EMADVISECOLUMNS):   set WORK.M2A_J7YY;
21050      UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
21051      run;
MPRINT(EMADVISECOLUMNS):   run;

NOTE: There were 7 observations read from the data set WORK.M2A_J7YY.
NOTE: The data set WORK.M2A_J7YY has 7 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M2A_J7YY NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort data=WORK.M0LCGHKE NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   data WORK.M0LCGHKE;
MPRINT(EMADVISECOLUMNS):   merge WORK.M0LCGHKE(in=_a) WORK.M2A_J7YY(in=_b);
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   if _a and ^_b then delete;
MPRINT(EMADVISECOLUMNS):   run;
21063      data WORK.M0LCGHKE;
MPRINT(EMADVISECOLUMNS):    data WORK.M0LCGHKE;
21064      drop UNAME;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
21065      set WORK.M0LCGHKE;
MPRINT(EMADVISECOLUMNS):   set WORK.M0LCGHKE;
21066      run;
MPRINT(EMADVISECOLUMNS):   run;

NOTE: There were 7 observations read from the data set WORK.M0LCGHKE.
NOTE: The data set WORK.M0LCGHKE has 7 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(EMADVISECOLUMNS):    data WORK.M1RWR213(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M0LCGHKE;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0LCGHKE;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M0LCGHKE;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" "MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" "QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" 
"YEAR" "YYMMDD" "YYMON" "YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" "EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" "NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" "SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if compress(tempfmt, '0123456789.', '') = '' then formattype='NUM';
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = "DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_PARTIND_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('Q') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ ('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   if symexist('RATEMKG_ROLE') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('RATEMKG_ROLE')) in('Y', 'YES') then do;
MPRINT(EMADVISECOLUMNS):   if _uname =: 'POLICY' then ROLE = 'POLICYID';
MPRINT(EMADVISECOLUMNS):   else if _uname in ('PARTITION', '_PARTIND_') then ROLE = 'PARTITION';
MPRINT(EMADVISECOLUMNS):   else if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   if _uname = 'EXPOSURE' then ROLE = 'EXPOSURE';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'YEAR' then ROLE = 'YEAR';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'WEIGHT' then ROLE = 'WEIGHT';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'OFFSET' then ROLE = 'OFFSET';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   if symexist('dmwb_product') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('dmwb_product')) = 'FACTORYMINER_DATASOURCE' then do;
MPRINT(EMADVISECOLUMNS):   if ROLE ^in('INPUT', 'TARGET', 'REJECTED', 'SEGMENT', 'FREQ', 'ID', 'KEY') then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0LCGHKE;
MPRINT(EMADVISECOLUMNS):   set WORK.M0LCGHKE;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= "Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= "Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower 
limit" UPPERLIMIT= "Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= "Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           1.05 seconds
      cpu time            0.67 seconds
      

MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;

21317      %EmAdviseTable(INSUR.SUBROGATENEW, outdata=EMWS1.Ids_EMTMETADEFAULT, newdataflag=N);
MPRINT(EM_DIAGRAM):   
MPRINT(EMADVISETABLE):   proc display c=sashelp.emmeta.advisetable.scl;
MPRINT(EMADVISETABLE):   run;

21318      %let SYSCC = 0;
21319      data EMWS1.Ids_EMTMETADEFAULT;
MPRINT(EMADVISETABLE):    data EMWS1.Ids_EMTMETADEFAULT;
21320      set EMWS1.Ids_EMTMETADEFAULT;
MPRINT(EMADVISETABLE):   set EMWS1.Ids_EMTMETADEFAULT;
21321      length LIBNAME $8;
MPRINT(EMADVISETABLE):   length LIBNAME $8;
21322      LIBNAME = "INSUR";
MPRINT(EMADVISETABLE):   LIBNAME = "INSUR";
21323      run;
MPRINT(EMADVISETABLE):   run;

NOTE: There were 1 observations read from the data set EMWS1.IDS_EMTMETADEFAULT.
NOTE: The data set EMWS1.IDS_EMTMETADEFAULT has 1 observations and 15 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(EMADVISETABLE):    data _null_;
MPRINT(EMADVISETABLE):   dsid = open("INSUR.SUBROGATENEW");
MPRINT(EMADVISETABLE):   call symput("_DSID", put(dsid,BEST.));
MPRINT(EMADVISETABLE):   if dsid > 0 then dsid = close(dsid);
MPRINT(EMADVISETABLE):   run;
MPRINT(EMADVISETABLE):    ods output enginehost=em_tablehost;
MPRINT(EMADVISETABLE):   ods listing close;
MPRINT(EMADVISETABLE):   proc contents data=INSUR.SUBROGATENEW;
MPRINT(EMADVISETABLE):   run;
MPRINT(EMADVISETABLE):   ods listing;
MPRINT(EMADVISETABLE):    data WORK.M0EB794U;
MPRINT(EMADVISETABLE):   length MEMNAME $ 32 MEMTYPE $ 8 MEMLABEL $ 256 TYPEMEM $ 8 ENGINE $ 8 CRDATE 8 MODATE 8 NOBS 8 NCOLS 8 NBYTES 8 ROLE $ 20 USEEXTERNALDATA $1 SAMPLINGRATE 8 SEGMENT $ 20;
MPRINT(EMADVISETABLE):   set WORK.M0EB794U(obs=1);
MPRINT(EMADVISETABLE):   nobs = 3037;
MPRINT(EMADVISETABLE):   ncols = 7;
MPRINT(EMADVISETABLE):   nbytes = 1115136;
MPRINT(EMADVISETABLE):   memname = "SUBROGATENEW";
MPRINT(EMADVISETABLE):   memtype = "DATA    ";
MPRINT(EMADVISETABLE):   memlabel = "";
MPRINT(EMADVISETABLE):   typemem = "DATA    ";
MPRINT(EMADVISETABLE):   engine = "BASE    ";
MPRINT(EMADVISETABLE):   crdate = 1808263223.016;
MPRINT(EMADVISETABLE):   modate = 1808263223.016;
MPRINT(EMADVISETABLE):   format crdate datetime16.;
MPRINT(EMADVISETABLE):   format modate datetime16.;
MPRINT(EMADVISETABLE):   if role = ' ' then role = 'TRAIN';
MPRINT(EMADVISETABLE):   output;
MPRINT(EMADVISETABLE):   run;
NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.38 seconds
      cpu time            0.24 seconds
      

MPRINT(EMADVISETABLE):   
MPRINT(EM_DIAGRAM):  ;

21352      data EMWS1.Ids_EMCMETADEFAULT;
MPRINT(EM_DIAGRAM):    data EMWS1.Ids_EMCMETADEFAULT;
21353      set EMWS1.Ids_EMCMETADEFAULT;
MPRINT(EM_DIAGRAM):   set EMWS1.Ids_EMCMETADEFAULT;
21354      label DROP = "%sysfunc(sasmsg(sashelp.dmine, meta_drop_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label DROP = "Drop";
21355      if DROP='' then DROP='N';
MPRINT(EM_DIAGRAM):   if DROP='' then DROP='N';
21356      if type='C' and level='INTERVAL' then level='NOMINAL';
MPRINT(EM_DIAGRAM):   if type='C' and level='INTERVAL' then level='NOMINAL';
21357      if type='C' and role='FREQ' then role='INPUT';
MPRINT(EM_DIAGRAM):   if type='C' and role='FREQ' then role='INPUT';
21358      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 7 observations read from the data set EMWS1.IDS_EMCMETADEFAULT.
NOTE: The data set EMWS1.IDS_EMCMETADEFAULT has 7 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

21359      proc sort data=EMWS1.Ids_EMCMETADEFAULT;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS1.Ids_EMCMETADEFAULT;
21360      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
21361      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 7 observations read from the data set EMWS1.IDS_EMCMETADEFAULT.
NOTE: The data set EMWS1.IDS_EMCMETADEFAULT has 7 observations and 21 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

21362      proc sort data=EMWS1.Ids_VariableSet;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Ids_VariableSet;
21363      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
21364      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 7 observations read from the data set EMWS1.IDS_VARIABLESET.
NOTE: The data set EMWS1.IDS_VARIABLESET has 7 observations and 21 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

21365      data EMWS1.Ids_VariableSet;
MPRINT(EM_DIAGRAM):   data EMWS1.Ids_VariableSet;
21366      merge EMWS1.Ids_EMCMETADEFAULT(in=_a) EMWS1.Ids_VariableSet(keep=NAME ROLE LEVEL ORDER DROP TYPE LOWERLIMIT UPPERLIMIT rename=(TYPE=OLDTYPE) in=_b);
MPRINT(EM_DIAGRAM):   merge EMWS1.Ids_EMCMETADEFAULT(in=_a) EMWS1.Ids_VariableSet(keep=NAME ROLE LEVEL ORDER DROP TYPE LOWERLIMIT UPPERLIMIT rename=(TYPE=OLDTYPE) in=_b);
21367      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
21368      if ^_a and _b then delete;
MPRINT(EM_DIAGRAM):   if ^_a and _b then delete;
21369      if type='C' and level='INTERVAL' then level='NOMINAL';
MPRINT(EM_DIAGRAM):   if type='C' and level='INTERVAL' then level='NOMINAL';
21370      if type='C' and role='FREQ' then role='INPUT';
MPRINT(EM_DIAGRAM):   if type='C' and role='FREQ' then role='INPUT';
21371      if (type ne oldtype) and (_a and _b) then do;
MPRINT(EM_DIAGRAM):   if (type ne oldtype) and (_a and _b) then do;
21372      if type ='N' then level='INTERVAL';
MPRINT(EM_DIAGRAM):   if type ='N' then level='INTERVAL';
21373      end;
MPRINT(EM_DIAGRAM):   end;
21374      drop oldtype;
MPRINT(EM_DIAGRAM):   drop oldtype;
21375      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 7 observations read from the data set EMWS1.IDS_EMCMETADEFAULT.
NOTE: There were 7 observations read from the data set EMWS1.IDS_VARIABLESET.
NOTE: The data set EMWS1.IDS_VARIABLESET has 7 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
      

21376      data EMWS1.Ids_CMeta_DATA;
MPRINT(EM_DIAGRAM):    data EMWS1.Ids_CMeta_DATA;
21377      set WORK.M2I8J_CM;
MPRINT(EM_DIAGRAM):   set WORK.M2I8J_CM;
21378      drop DROP;
MPRINT(EM_DIAGRAM):   drop DROP;
21379      where DROP='N';
MPRINT(EM_DIAGRAM):   where DROP='N';
21380      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 7 observations read from the data set WORK.M2I8J_CM.
      WHERE DROP='N';
NOTE: The data set EMWS1.IDS_CMETA_DATA has 7 observations and 20 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

*------------------------------------------------------------* 
Ids: Using "INSUR.SUBROGATENEW" data source 
*------------------------------------------------------------* 
21381      filename _code catalog 'sashelp.emutil.emsample.source';
MPRINT(EM_DIAGRAM):    filename _code catalog 'sashelp.emutil.emsample.source';
21382      %include _code;
21441      filename _code;
MPRINT(EM_DIAGRAM):   filename _code;
NOTE: Fileref _CODE has been deassigned.
21442      %emSample (DATA=INSUR.SUBROGATENEW, OUTPUT=EMWS1.Ids_DATA, METADATA=EMWS1.Ids_VariableSet, sizeType=PERCENT, size=20, GridTable=0);
MPRINT(EMSAMPLE):   filename _exsamp catalog 'sashelp.emutil.exploresample.source';
MPRINT(EMSAMPLE):   filename _exsamp;
NOTE: Fileref _EXSAMP has been deassigned.
MPRINT(EXPLORESAMPLE):   filename x catalog 'sashelp.emutil.exploreobs.source';
MPRINT(EXPLORESAMPLE):   filename x;
NOTE: Fileref X has been deassigned.
MPRINT(HPDM_PERFORMANCE):  ;
PERFORMANCE  DETAILS
MPRINT(EXPLORESAMPLE):  ;
MPRINT(EXPLORESAMPLE):   data _null_;
MPRINT(EXPLORESAMPLE):   set EMWS1.Ids_VariableSet end=eof;
MPRINT(EXPLORESAMPLE):   where (ROLE in('TARGET', 'SEGMENT')) and (LEVEL ne 'INTERVAL');
MPRINT(EXPLORESAMPLE):   call symput('VVStratVar_'!!strip(put(_N_, best.)), "'"!!tranwrd(trim(NAME), "'", "''")!!"'n");
MPRINT(EXPLORESAMPLE):   call symput('StratVar_'!!strip(put(_N_, best.)), trim(NAME));
MPRINT(EXPLORESAMPLE):   if eof then call symput('StratNum', strip(put(_N_, best.)));
MPRINT(EXPLORESAMPLE):   run;

NOTE: There were 1 observations read from the data set EMWS1.IDS_VARIABLESET.
      WHERE ROLE in ('SEGMENT', 'TARGET') and (LEVEL not = 'INTERVAL');
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

*------------------------------------------------------------*
* Stratified sample
*------------------------------------------------------------*
MPRINT(EXPLORESAMPLE):   proc freq data=INSUR.SUBROGATENEW noprint;
MPRINT(EXPLORESAMPLE):   table 'SubroFlag'n /out=STRATASUMMARY (rename=(count=_npop_ percent=_pctpop_)) missing;
MPRINT(EXPLORESAMPLE):   run;

NOTE: There were 3037 observations read from the data set INSUR.SUBROGATENEW.
NOTE: The data set WORK.STRATASUMMARY has 2 observations and 3 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.06 seconds
      cpu time            0.01 seconds
      

MPRINT(EXPLORESAMPLE):   quit;
MPRINT(EXPLORESAMPLE):   proc sort data=STRATASUMMARY out=STRATASUMMARY;
MPRINT(EXPLORESAMPLE):   by descending _npop_;
MPRINT(EXPLORESAMPLE):   run;

NOTE: There were 2 observations read from the data set WORK.STRATASUMMARY.
NOTE: The data set WORK.STRATASUMMARY has 2 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.04 seconds
      cpu time            0.01 seconds
      

MPRINT(EXPLORESAMPLE):   data STRATASUMMARY;
MPRINT(EXPLORESAMPLE):   set STRATASUMMARY;
MPRINT(EXPLORESAMPLE):   STRATA_SIZE = int(607 * (_npop_ / 3037) + 0.5);
MPRINT(EXPLORESAMPLE):   run;

NOTE: There were 2 observations read from the data set WORK.STRATASUMMARY.
NOTE: The data set WORK.STRATASUMMARY has 2 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EXPLORESAMPLE):   data STRATASUMMARY;
MPRINT(EXPLORESAMPLE):   set STRATASUMMARY;
MPRINT(EXPLORESAMPLE):   run;

NOTE: There were 2 observations read from the data set WORK.STRATASUMMARY.
NOTE: The data set WORK.STRATASUMMARY has 2 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(EXPLORESAMPLE):   data _null_;
MPRINT(EXPLORESAMPLE):   set STRATASUMMARY end=eof;
MPRINT(EXPLORESAMPLE):   length string $4000;
MPRINT(EXPLORESAMPLE):   retain obsnum 0;
MPRINT(EXPLORESAMPLE):   if _N_=1 then do;
MPRINT(EXPLORESAMPLE):   call execute("data EMWS1.Ids_DATA ;");
MPRINT(EXPLORESAMPLE):   call execute("set INSUR.SUBROGATENEW ;");
MPRINT(EXPLORESAMPLE):   end;
MPRINT(EXPLORESAMPLE):   if _N_>1 then call execute("else ");
MPRINT(EXPLORESAMPLE):   obsnum = obsnum+1;
MPRINT(EXPLORESAMPLE):   call execute("if ");
MPRINT(EXPLORESAMPLE):   call execute("'SubroFlag'n ="!!strip(put('SubroFlag'n, best.)));
MPRINT(EXPLORESAMPLE):   call execute("then do;");
MPRINT(EXPLORESAMPLE):   call execute("   _N"!!strip(put(obsnum, z6.))!!"+1;");
MPRINT(EXPLORESAMPLE):   call execute("if _S"!!strip(put(obsnum, z6.))!!'<'!!strip(put(STRATA_SIZE, best.))!!" then do;");
MPRINT(EXPLORESAMPLE):   call execute("   if ranuni(12345)*("!!strip(put(_npop_, best.))!!' - _N'!!strip(put(obsnum, z6.))!!')');
MPRINT(EXPLORESAMPLE):   call execute("         <=("!!strip(put(STRATA_SIZE, best.))!!' - _S'!!strip(put(obsnum, z6.))!!') then do;');
MPRINT(EXPLORESAMPLE):   call execute("   _S"!!strip(put(obsnum, z6.))!!"+1;");
MPRINT(EXPLORESAMPLE):   call execute("   output;");
MPRINT(EXPLORESAMPLE):   call execute("   end;");
MPRINT(EXPLORESAMPLE):   call execute("end;");
MPRINT(EXPLORESAMPLE):   call execute("end;");
MPRINT(EXPLORESAMPLE):   call execute("drop "!!"_S"!!strip(put(obsnum, z6.))!!' _N'!!strip(put(obsnum, z6.))!!";");
MPRINT(EXPLORESAMPLE):   if eof then do;
MPRINT(EXPLORESAMPLE):   call execute("run;");
MPRINT(EXPLORESAMPLE):   end;
MPRINT(EXPLORESAMPLE):   run;

NOTE: Variable string is uninitialized.
MPRINT(EXPLORESAMPLE):   data EMWS1.Ids_DATA ;
MPRINT(EXPLORESAMPLE):   set INSUR.SUBROGATENEW ;
MPRINT(EXPLORESAMPLE):   then do;
MPRINT(EXPLORESAMPLE):   _N000001+1;
MPRINT(EXPLORESAMPLE):   if _S000001<380 then do;
MPRINT(EXPLORESAMPLE):   <=(380 - _S000001) then do;
MPRINT(EXPLORESAMPLE):   _S000001+1;
MPRINT(EXPLORESAMPLE):   output;
MPRINT(EXPLORESAMPLE):   end;
MPRINT(EXPLORESAMPLE):   end;
MPRINT(EXPLORESAMPLE):   end;
MPRINT(EXPLORESAMPLE):   drop _S000001 _N000001;
MPRINT(EXPLORESAMPLE):   then do;
MPRINT(EXPLORESAMPLE):   _N000002+1;
MPRINT(EXPLORESAMPLE):   if _S000002<227 then do;
MPRINT(EXPLORESAMPLE):   <=(227 - _S000002) then do;
MPRINT(EXPLORESAMPLE):   _S000002+1;
MPRINT(EXPLORESAMPLE):   output;
MPRINT(EXPLORESAMPLE):   end;
MPRINT(EXPLORESAMPLE):   end;
MPRINT(EXPLORESAMPLE):   end;
MPRINT(EXPLORESAMPLE):   drop _S000002 _N000002;
MPRINT(EXPLORESAMPLE):   run;
NOTE: There were 2 observations read from the data set WORK.STRATASUMMARY.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

NOTE: CALL EXECUTE generated line.
1         + data EMWS1.Ids_DATA ;
2         + set INSUR.SUBROGATENEW ;
3         + if
4         + 'SubroFlag'n =0
5         + then do;
6         +    _N000001+1;
7         + if _S000001<380 then do;
8         +    if ranuni(12345)*(1902 - _N000001)
9         +          <=(380 - _S000001) then do;
10        +    _S000001+1;
11        +    output;
12        +    end;
13        + end;
14        + end;
15        + drop _S000001 _N000001;
16        + else
17        + if
18        + 'SubroFlag'n =1
19        + then do;
20        +    _N000002+1;
21        + if _S000002<227 then do;
22        +    if ranuni(12345)*(1135 - _N000002)
23        +          <=(227 - _S000002) then do;
24        +    _S000002+1;
25        +    output;
26        +    end;
27        + end;
28        + end;
29        + drop _S000002 _N000002;
30        + run;

NOTE: There were 3037 observations read from the data set INSUR.SUBROGATENEW.
NOTE: The data set EMWS1.IDS_DATA has 607 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.05 seconds
      cpu time            0.03 seconds
      

MPRINT(EXPLORESAMPLE):   proc datasets lib=work nolist;
MPRINT(EXPLORESAMPLE):   delete STRATASUMMARY;
MPRINT(EXPLORESAMPLE):   run;

NOTE: Deleting WORK.STRATASUMMARY (memtype=DATA).
MPRINT(EXPLORESAMPLE):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

MPRINT(EMSAMPLE):  ;
MPRINT(EM_DIAGRAM):  ;

22137      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
22138      * Ids: Creating DATA data;
MPRINT(EM_DIAGRAM):   * Ids: Creating DATA data;
22139      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
22140      data WORK.IDSOUTPUT;
MPRINT(EM_DIAGRAM):   data WORK.IDSOUTPUT;
22141      length ATTRIBUTE $20 LABEL $50 VALUE $50;
MPRINT(EM_DIAGRAM):   length ATTRIBUTE $20 LABEL $50 VALUE $50;
22142      label LABEL= "%sysfunc(sasmsg(sashelp.dmine, rpt_attribute_vlabel,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label LABEL= "Attribute";
22143      label VALUE= "%sysfunc(sasmsg(sashelp.dmine, rpt_value_vlabel,       NOQUOTE))";
MPRINT(EM_DIAGRAM):   label VALUE= "Value";
22144      ATTRIBUTE = 'OUTPUT';
MPRINT(EM_DIAGRAM):   ATTRIBUTE = 'OUTPUT';
22145      LABEL = "%sysfunc(sasmsg(sashelp.dmine, rpt_labeloutput_value , NOQUOTE))";
MPRINT(EM_DIAGRAM):   LABEL = "Output Table";
22146      VALUE = "EMWS1.Ids_DATA";
MPRINT(EM_DIAGRAM):   VALUE = "EMWS1.Ids_DATA";
22147      output;
MPRINT(EM_DIAGRAM):   output;
22148      ATTRIBUTE = 'OUTPUTTYPE';
MPRINT(EM_DIAGRAM):   ATTRIBUTE = 'OUTPUTTYPE';
22149      LABEL = "%sysfunc(sasmsg(sashelp.dmine, rpt_labeloutputtype_value, NOQUOTE))";
MPRINT(EM_DIAGRAM):   LABEL = "Output Type";
22150      VALUE = "Data";
MPRINT(EM_DIAGRAM):   VALUE = "Data";
22151      output;
MPRINT(EM_DIAGRAM):   output;
22152      ATTRIBUTE = 'DROPVARS';
MPRINT(EM_DIAGRAM):   ATTRIBUTE = 'DROPVARS';
22153      LABEL = "%sysfunc(sasmsg(sashelp.dmine, rpt_labeldropvars_value, NOQUOTE))";
MPRINT(EM_DIAGRAM):   LABEL = "Dropped Variables";
22154      VALUE = "0";
MPRINT(EM_DIAGRAM):   VALUE = "0";
22155      output;
MPRINT(EM_DIAGRAM):   output;
22156      ATTRIBUTE = 'ROLE';
MPRINT(EM_DIAGRAM):   ATTRIBUTE = 'ROLE';
22157      LABEL = "%sysfunc(sasmsg(sashelp.dmine, rpt_labelrole_value , NOQUOTE))";
MPRINT(EM_DIAGRAM):   LABEL = "Data Mining Role";
22158      VALUE = "Raw";
MPRINT(EM_DIAGRAM):   VALUE = "Raw";
22159      output;
MPRINT(EM_DIAGRAM):   output;
22160      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK.IDSOUTPUT has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
      

22161      proc print data=WORK.IDSOUTPUT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=WORK.IDSOUTPUT noobs label;
22162      var label value;
MPRINT(EM_DIAGRAM):   var label value;
22163      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
22164      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_outTableAttr_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Output Table Attributes";
MPRINT(EM_DIAGRAM):   run;
22165      run;

NOTE: There were 4 observations read from the data set WORK.IDSOUTPUT.
NOTE: The PROCEDURE PRINT printed page 2.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

22166      title10;
MPRINT(EM_DIAGRAM):   title10;
22167      proc contents noprint data=INSUR.SUBROGATENEW out=WORK.IDSCONTENT(drop=NAME TYPE LENGTH VARNUM LABEL FORMAT FORMATL FORMATD INFORMAT INFORML INFORMD JUST NPOS);
MPRINT(EM_DIAGRAM):    proc contents noprint data=INSUR.SUBROGATENEW out=WORK.IDSCONTENT(drop=NAME TYPE LENGTH VARNUM LABEL FORMAT FORMATL FORMATD INFORMAT INFORML INFORMD JUST NPOS);
22168      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK.IDSCONTENT has 7 observations and 28 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

22169      data WORK.IDSCONTENT;
MPRINT(EM_DIAGRAM):   data WORK.IDSCONTENT;
22170      set WORK.IDSCONTENT end=eof;
MPRINT(EM_DIAGRAM):   set WORK.IDSCONTENT end=eof;
22171      if eof then do;
MPRINT(EM_DIAGRAM):   if eof then do;
22172      NVARS = _n_;
MPRINT(EM_DIAGRAM):   NVARS = _n_;
22173      output;
MPRINT(EM_DIAGRAM):   output;
22174      end;
MPRINT(EM_DIAGRAM):   end;
22175      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 7 observations read from the data set WORK.IDSCONTENT.
NOTE: The data set WORK.IDSCONTENT has 1 observations and 29 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

22176      data WORK.IDSOUTPUT(keep=ATTRIBUTE LABEL VALUE);
MPRINT(EM_DIAGRAM):   data WORK.IDSOUTPUT(keep=ATTRIBUTE LABEL VALUE);
22177      length ATTRIBUTE $20 LABEL $50 VALUE $80;
MPRINT(EM_DIAGRAM):   length ATTRIBUTE $20 LABEL $50 VALUE $80;
22178      label LABEL= "%sysfunc(sasmsg(sashelp.dmine, rpt_attribute_vlabel,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label LABEL= "Attribute";
22179      label VALUE= "%sysfunc(sasmsg(sashelp.dmine, rpt_value_vlabel,       NOQUOTE))";
MPRINT(EM_DIAGRAM):   label VALUE= "Value";
22180      ;
MPRINT(EM_DIAGRAM):   ;
22181      dsid = open("WORK.IDSCONTENT");
MPRINT(EM_DIAGRAM):   dsid = open("WORK.IDSCONTENT");
22182      rc = fetch(dsid);
MPRINT(EM_DIAGRAM):   rc = fetch(dsid);
22183      nvars = attrn(dsid, 'NVARS');
MPRINT(EM_DIAGRAM):   nvars = attrn(dsid, 'NVARS');
22184      nobs = attrn(dsid, 'NOBS');
MPRINT(EM_DIAGRAM):   nobs = attrn(dsid, 'NOBS');
22185      ATTRIBUTE = 'DATASOURCE';
MPRINT(EM_DIAGRAM):   ATTRIBUTE = 'DATASOURCE';
22186      LABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_datasource_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   LABEL = "Data Source";
22187      VALUE="subrogatenew";
MPRINT(EM_DIAGRAM):   VALUE="subrogatenew";
22188      output;
MPRINT(EM_DIAGRAM):   output;
22189      ATTRIBUTE = '';
MPRINT(EM_DIAGRAM):   ATTRIBUTE = '';
22190      LABEL = '';
MPRINT(EM_DIAGRAM):   LABEL = '';
22191      VALUE='';
MPRINT(EM_DIAGRAM):   VALUE='';
22192      output;
MPRINT(EM_DIAGRAM):   output;
22193      do i=1 to nvars;
MPRINT(EM_DIAGRAM):   do i=1 to nvars;
22194      ATTRIBUTE = varname(dsid, i);
MPRINT(EM_DIAGRAM):   ATTRIBUTE = varname(dsid, i);
22195      LABEL = varlabel(dsid, i);
MPRINT(EM_DIAGRAM):   LABEL = varlabel(dsid, i);
22196      if vartype(dsid,i)='C' then do;
MPRINT(EM_DIAGRAM):   if vartype(dsid,i)='C' then do;
22197      VALUE = getvarc(dsid, i);
MPRINT(EM_DIAGRAM):   VALUE = getvarc(dsid, i);
22198      end;
MPRINT(EM_DIAGRAM):   end;
22199      else do;
MPRINT(EM_DIAGRAM):   else do;
22200      NVALUE = getvarn(dsid, i);
MPRINT(EM_DIAGRAM):   NVALUE = getvarn(dsid, i);
22201      if ATTRIBUTE in('CRDATE', 'MODATE') then VALUE = left(put(NVALUE, NLDATM20.));
MPRINT(EM_DIAGRAM):   if ATTRIBUTE in('CRDATE', 'MODATE') then VALUE = left(put(NVALUE, NLDATM20.));
22202      else VALUE = left(put(NVALUE, BEST12.));
MPRINT(EM_DIAGRAM):   else VALUE = left(put(NVALUE, BEST12.));
22203      end;
MPRINT(EM_DIAGRAM):   end;
22204      if ATTRIBUTE = 'NVARS' then do;
MPRINT(EM_DIAGRAM):   if ATTRIBUTE = 'NVARS' then do;
22205      LABEL = "%sysfunc(sasmsg(sashelp.dmine, rpt_labelvariables_value, NOQUOTE))";
MPRINT(EM_DIAGRAM):   LABEL = "Variables";
22206      end;
MPRINT(EM_DIAGRAM):   end;
22207      output;
MPRINT(EM_DIAGRAM):   output;
22208      end;
MPRINT(EM_DIAGRAM):   end;
22209      dsid=close(dsid);
MPRINT(EM_DIAGRAM):   dsid=close(dsid);
22210      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK.IDSOUTPUT has 31 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
      

22211      proc print data=WORK.IDSOUTPUT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=WORK.IDSOUTPUT noobs label;
22212      var label value;
MPRINT(EM_DIAGRAM):   var label value;
22213      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
22214      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_inTableAttr_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Input Table Attributes";
MPRINT(EM_DIAGRAM):   run;
22215      run;

NOTE: There were 31 observations read from the data set WORK.IDSOUTPUT.
NOTE: The PROCEDURE PRINT printed page 3.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):    proc dmdb data=INSUR.SUBROGATENEW maxlevel=32 classOut=WORK._IDS_DMDBClass ;
MPRINT(EM_DIAGRAM):   class "SubroFlag"n (DESC) ;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc sort data=WORK._IDS_DMDBClass;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ids: Determine decision variables for SubroFlag;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   data WORK.Ids_SCORE;
MPRINT(EM_DIAGRAM):   set INSUR.SUBROGATENEW;
MPRINT(EM_DIAGRAM):   keep SubroFlag;
MPRINT(EM_DIAGRAM):   keep 'P_SubroFlag1'n;
MPRINT(EM_DIAGRAM):   'P_SubroFlag1'n = 0.5;
MPRINT(EM_DIAGRAM):   keep 'P_SubroFlag0'n;
MPRINT(EM_DIAGRAM):   'P_SubroFlag0'n = 0.5;
MPRINT(EM_DIAGRAM):   if _N_=1 then do;
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   stop;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS1.Ids_SubroFlag_DM;
MPRINT(EM_DIAGRAM):   set EMWS1.Ids_SubroFlag_DM;
MPRINT(EM_DIAGRAM):   where _TYPE_ ^in('FREQ', 'BESTPROFIT', 'COMPUTEDPROFIT', 'EXPECTEDPROFIT', 'BESTLOSS', 'COMPUTEDLOSS', 'EXPECTEDLOSS', 'ROI', 'INVESTMENTCOST', 'MODELDECISION');
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   modify SubroFlag(type=PROFIT label= SubroFlag);
MPRINT(EM_DIAGRAM):   label DECISION1= '1';
MPRINT(EM_DIAGRAM):   label DECISION2= '0';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):    data EMWS1.Ids_SubroFlag_DM;
MPRINT(EM_DIAGRAM):   set EMWS1.Ids_SubroFlag_DM end=eof;
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   if eof then do;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
